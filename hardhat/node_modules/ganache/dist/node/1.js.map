{"version":3,"file":"1.js","mappings":"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","sources":["webpack://Ganache/../../chains/ethereum/address/lib/index.js","webpack://Ganache/../../chains/ethereum/block/lib/index.js","webpack://Ganache/../../chains/ethereum/block/lib/src/block-params.js","webpack://Ganache/../../chains/ethereum/block/lib/src/block.js","webpack://Ganache/../../chains/ethereum/block/lib/src/runtime-block.js","webpack://Ganache/../../chains/ethereum/block/lib/src/serialize.js","webpack://Ganache/../../chains/ethereum/block/lib/src/snapshots.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/index.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/api-types.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/api.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/blockchain.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/connector.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/account-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/block-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/blocklog-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/transaction-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/transaction-receipt-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/database.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/cache.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/deferred.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/fork.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/base-handler.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/http-handler.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/provider-handler.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/ws-handler.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/lexicographic-key-codec.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/ancestry.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/helpers.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/persistent-cache.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/tree.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/rate-limiter/limit-counter.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/rate-limiter/rate-limiter.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/state-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/trie.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/hdkey.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/assert-arg-length.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/bufferify.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/filter-parsing.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/gas-estimator.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/precompiles.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/run-call.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/trie.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/miner/miner.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/miner/replace-from-heap.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/provider-events.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/provider.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/transaction-pool.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/wallet.js","webpack://Ganache/../../chains/ethereum/options/lib/index.js","webpack://Ganache/../../chains/ethereum/options/lib/src/chain-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/database-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/fork-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/helpers.js","webpack://Ganache/../../chains/ethereum/options/lib/src/index.js","webpack://Ganache/../../chains/ethereum/options/lib/src/logging-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/miner-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/wallet-options.js","webpack://Ganache/../../chains/ethereum/transaction/lib/index.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/access-lists.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/base-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/eip1559-fee-market-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/eip2930-access-list-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/hardfork.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/legacy-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/params.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/raw.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/rpc-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/runtime-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/signing.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/transaction-factory.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/transaction-receipt.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/transaction-types.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/vm-transaction.js","webpack://Ganache/../../chains/ethereum/utils/lib/index.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/abort-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/call-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/coded-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/errors.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/runtime-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/index.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/account.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/blocklogs.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/tags.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/trace-data.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/trace-storage-map.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/debug-storage.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/extract-values-from-types.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/filters.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/hex-datatypes.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/shh.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/subscriptions.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/trace-transaction.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/tuple-from-union.js","webpack://Ganache/../../chains/filecoin/options/lib/index.js","webpack://Ganache/../../chains/filecoin/options/lib/src/chain-options.js","webpack://Ganache/../../chains/filecoin/options/lib/src/database-options.js","webpack://Ganache/../../chains/filecoin/options/lib/src/helpers.js","webpack://Ganache/../../chains/filecoin/options/lib/src/index.js","webpack://Ganache/../../chains/filecoin/options/lib/src/logging-options.js","webpack://Ganache/../../chains/filecoin/options/lib/src/miner-options.js","webpack://Ganache/../../chains/filecoin/options/lib/src/wallet-options.js","webpack://Ganache/../colors/lib/index.js","webpack://Ganache/../colors/lib/src/index.js","webpack://Ganache/../core/lib/index.js","webpack://Ganache/../core/lib/src/connector-loader.js","webpack://Ganache/../core/lib/src/options/index.js","webpack://Ganache/../core/lib/src/options/server-options.js","webpack://Ganache/../core/lib/src/server.js","webpack://Ganache/../core/lib/src/servers/http-server.js","webpack://Ganache/../core/lib/src/servers/utils/content-types.js","webpack://Ganache/../core/lib/src/servers/utils/fragment-generator.js","webpack://Ganache/../core/lib/src/servers/utils/http-response-codes.js","webpack://Ganache/../core/lib/src/servers/utils/websocket-close-codes.js","webpack://Ganache/../core/lib/src/servers/ws-server.js","webpack://Ganache//home/runner/work/ganache/ganache/src/packages/core/node_modules/@trufflesuite/uws-js-unofficial/binaries|sync|/^\\.\\/uws_.*\\.node$/","webpack://Ganache/../flavors/lib/index.js","webpack://Ganache/../flavors/lib|sync","webpack://Ganache/./webpack/polyfills/debug.ts","webpack://Ganache/../options/lib/index.js","webpack://Ganache/../options/lib/src/base.js","webpack://Ganache/../options/lib/src/constants.js","webpack://Ganache/../options/lib/src/create.js","webpack://Ganache/../options/lib/src/definition.js","webpack://Ganache/../options/lib/src/exclusive.js","webpack://Ganache/../promise-queue/lib/index.js","webpack://Ganache/../promise-queue/lib/src/entry.js","webpack://Ganache/../rlp/lib/index.js","webpack://Ganache/../secp256k1/lib/index.js","webpack://Ganache/../utils/lib/index.js","webpack://Ganache/../utils/lib/src/common.js","webpack://Ganache/../utils/lib/src/things/json-rpc/index.js","webpack://Ganache/../utils/lib/src/things/json-rpc/input-parsers.js","webpack://Ganache/../utils/lib/src/things/json-rpc/json-rpc-base-types.js","webpack://Ganache/../utils/lib/src/things/json-rpc/json-rpc-data.js","webpack://Ganache/../utils/lib/src/things/json-rpc/json-rpc-quantity.js","webpack://Ganache/../utils/lib/src/things/jsonrpc.js","webpack://Ganache/../utils/lib/src/things/promievent.js","webpack://Ganache/../utils/lib/src/things/subscription.js","webpack://Ganache/../utils/lib/src/types/api.js","webpack://Ganache/../utils/lib/src/types/connector.js","webpack://Ganache/../utils/lib/src/types/index.js","webpack://Ganache/../utils/lib/src/types/provider.js","webpack://Ganache/../utils/lib/src/utils/bigint-to-buffer.js","webpack://Ganache/../utils/lib/src/utils/buffer-to-bigint.js","webpack://Ganache/../utils/lib/src/utils/buffer-to-key.js","webpack://Ganache/../utils/lib/src/utils/constants.js","webpack://Ganache/../utils/lib/src/utils/executor.js","webpack://Ganache/../utils/lib/src/utils/find-insert-position.js","webpack://Ganache/../utils/lib/src/utils/has-own.js","webpack://Ganache/../utils/lib/src/utils/heap.js","webpack://Ganache/../utils/lib/src/utils/index.js","webpack://Ganache/../utils/lib/src/utils/keccak.js","webpack://Ganache/../utils/lib/src/utils/random-number-generator.js","webpack://Ganache/../utils/lib/src/utils/request-coordinator.js","webpack://Ganache/../utils/lib/src/utils/uint-to-buffer.js","webpack://Ganache/../utils/lib/src/utils/unref.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Address = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nclass Address extends utils_1.Data {\n    constructor(value) {\n        super(value, Address.ByteLength);\n    }\n    static from(value) {\n        return new Address(value);\n    }\n    static toBuffer(value) {\n        return Address.from(value).toBuffer();\n    }\n    static toString(value) {\n        return Address.from(value).toString();\n    }\n}\nexports.Address = Address;\nAddress.ByteLength = 20;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/block\"), exports);\n__exportStar(require(\"./src/runtime-block\"), exports);\n__exportStar(require(\"./src/snapshots\"), exports);\n__exportStar(require(\"./src/serialize\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n// NOTE these params may need to be changed at each hardfork\n// they can be tracked here: https://github.com/ethereumjs/ethereumjs-vm/blob/master/packages/common/src/hardforks/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlockParams = void 0;\nexports.BlockParams = {\n    /**\n     *  Base fee per gas for blocks without a parent containing a base fee per gas.\n     */\n    INITIAL_BASE_FEE_PER_GAS: 1000000000n,\n    /**\n     * Divisor used to set a block's target gas usage.\n     */\n    ELASTICITY: 2n,\n    /**\n     * Divisor used to limit the amount the base fee per gas can change from one block to another.\n     */\n    BASE_FEE_MAX_CHANGE_DENOMINATOR: 8n\n};\n//# sourceMappingURL=block-params.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Block = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_block_1 = require(\"./runtime-block\");\nconst utils_2 = require(\"@ganache/utils\");\nconst block_params_1 = require(\"./block-params\");\nclass Block {\n    constructor(serialized, common) {\n        this._common = common;\n        if (serialized) {\n            const deserialized = (0, rlp_1.decode)(serialized);\n            this._raw = deserialized[0];\n            this._rawTransactions = deserialized[1] || [];\n            // TODO: support actual uncle data (needed for forking!)\n            // Issue: https://github.com/trufflesuite/ganache/issues/786\n            // const uncles = deserialized[2];\n            const totalDifficulty = deserialized[3];\n            this.header = (0, runtime_block_1.makeHeader)(this._raw, totalDifficulty);\n            this._rawTransactionMetaData = deserialized[4] || [];\n            this._size = utils_1.Quantity.toNumber(deserialized[5]);\n        }\n    }\n    hash() {\n        return (this._hash || (this._hash = utils_1.Data.from((0, utils_2.keccak)((0, rlp_1.encode)(this._raw)), 32)));\n    }\n    getTransactions() {\n        const common = this._common;\n        return this._rawTransactions.map((raw, index) => {\n            const [from, hash] = this._rawTransactionMetaData[index];\n            const extra = [\n                from,\n                hash,\n                this.hash().toBuffer(),\n                this.header.number.toBuffer(),\n                utils_1.Quantity.toBuffer(index)\n            ];\n            return ethereum_transaction_1.TransactionFactory.fromDatabaseTx(raw, common, extra);\n        });\n    }\n    toJSON(includeFullTransactions) {\n        const hash = this.hash();\n        const txFn = this.getTxFn(includeFullTransactions);\n        const hashBuffer = hash.toBuffer();\n        const header = this.header;\n        const number = header.number.toBuffer();\n        const common = this._common;\n        const jsonTxs = this._rawTransactions.map((raw, index) => {\n            const [from, hash] = this._rawTransactionMetaData[index];\n            const extra = [\n                from,\n                hash,\n                hashBuffer,\n                number,\n                utils_1.Quantity.toBuffer(index)\n            ];\n            const tx = ethereum_transaction_1.TransactionFactory.fromDatabaseTx(raw, common, extra);\n            // we could either parse the raw data to check if the tx is type 2,\n            // get the maxFeePerGas and maxPriorityFeePerGas, use those to calculate\n            // the effectiveGasPrice and add it to `extra` above, or we can just\n            // leave it out of extra and update the effectiveGasPrice after like this\n            tx.updateEffectiveGasPrice(header.baseFeePerGas);\n            return txFn(tx);\n        });\n        return {\n            hash,\n            ...header,\n            size: utils_1.Quantity.from(this._size),\n            transactions: jsonTxs,\n            uncles: [] // this.value.uncleHeaders.map(function(uncleHash) {return to.hex(uncleHash)})\n        };\n    }\n    getTxFn(include = false) {\n        if (include) {\n            return (tx) => tx.toJSON(this._common);\n        }\n        else {\n            return (tx) => tx.hash;\n        }\n    }\n    static fromParts(rawHeader, txs, totalDifficulty, extraTxs, size, common) {\n        const block = new Block(null, common);\n        block._raw = rawHeader;\n        block._rawTransactions = txs;\n        block.header = (0, runtime_block_1.makeHeader)(rawHeader, totalDifficulty);\n        block._rawTransactionMetaData = extraTxs;\n        block._size = size;\n        return block;\n    }\n    static calcNextBaseFeeBigInt(parentHeader) {\n        let nextBaseFee;\n        const header = parentHeader;\n        const parentGasTarget = header.gasLimit.toBigInt() / block_params_1.BlockParams.ELASTICITY;\n        const parentGasUsed = header.gasUsed.toBigInt();\n        const baseFeePerGas = header.baseFeePerGas\n            ? header.baseFeePerGas.toBigInt()\n            : block_params_1.BlockParams.INITIAL_BASE_FEE_PER_GAS;\n        if (parentGasTarget === parentGasUsed) {\n            // If the parent gasUsed is the same as the target, the baseFee remains unchanged.\n            nextBaseFee = baseFeePerGas;\n        }\n        else if (parentGasUsed > parentGasTarget) {\n            // If the parent block used more gas than its target, the baseFee should increase.\n            const gasUsedDelta = parentGasUsed - parentGasTarget;\n            const adjustedFeeDelta = (baseFeePerGas * gasUsedDelta) /\n                parentGasTarget /\n                block_params_1.BlockParams.BASE_FEE_MAX_CHANGE_DENOMINATOR;\n            if (adjustedFeeDelta > 1n) {\n                nextBaseFee = baseFeePerGas + adjustedFeeDelta;\n            }\n            else {\n                nextBaseFee = baseFeePerGas + 1n;\n            }\n        }\n        else {\n            // Otherwise if the parent block used less gas than its target, the baseFee should decrease.\n            const gasUsedDelta = parentGasTarget - parentGasUsed;\n            const adjustedFeeDelta = (baseFeePerGas * gasUsedDelta) /\n                parentGasTarget /\n                block_params_1.BlockParams.BASE_FEE_MAX_CHANGE_DENOMINATOR;\n            nextBaseFee = baseFeePerGas - adjustedFeeDelta;\n        }\n        return nextBaseFee;\n    }\n    static calcNBlocksMaxBaseFee(blocks, parentHeader) {\n        const { BASE_FEE_MAX_CHANGE_DENOMINATOR } = block_params_1.BlockParams;\n        let maxPossibleBaseFee = this.calcNextBaseFeeBigInt(parentHeader);\n        // we must calculate each future block's max base fee individually because\n        // each block's base fee must be appropriately \"floored\" (Math.floor) before\n        // the following block's base fee is calculated. If we don't do this we'll\n        // end up with compounding rounding errors.\n        // FYI: the more performant, but rounding error-prone, way is:\n        // return lastMaxBlockBaseFee + (lastMaxBlockBaseFee * ((BASE_FEE_MAX_CHANGE_DENOMINATOR-1)**(blocks-1)) / ((BASE_FEE_MAX_CHANGE_DENOMINATOR)**(blocks-1)))\n        while (--blocks) {\n            maxPossibleBaseFee +=\n                maxPossibleBaseFee / BASE_FEE_MAX_CHANGE_DENOMINATOR;\n        }\n        return maxPossibleBaseFee;\n    }\n    static calcNextBaseFee(parentBlock) {\n        const header = parentBlock.header;\n        if (header.baseFeePerGas === undefined) {\n            return undefined;\n        }\n        else {\n            return this.calcNextBaseFeeBigInt(header);\n        }\n    }\n}\nexports.Block = Block;\n/**\n *  Base fee per gas for blocks without a parent containing a base fee per gas.\n */\nBlock.INITIAL_BASE_FEE_PER_GAS = block_params_1.BlockParams.INITIAL_BASE_FEE_PER_GAS;\n//# sourceMappingURL=block.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuntimeBlock = exports.makeHeader = exports.getBlockSize = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst serialize_1 = require(\"./serialize\");\nconst block_1 = require(\"./block\");\n/**\n * BN, but with an extra `buf` property that caches the original Buffer value\n * we pass in.\n */\nclass BnExtra extends ethereumjs_util_1.BN {\n    constructor(number) {\n        super(number, 10, \"be\");\n        this.buf = number;\n    }\n}\n/**\n * Returns the size of the serialized data as it would have been calculated had\n * we stored things geth does, i.e., `totalDifficulty` is not usually stored in\n * the block header.\n *\n * @param serialized -\n * @param totalDifficulty -\n */\nfunction getBlockSize(serialized, totalDifficulty) {\n    return serialized.length - totalDifficulty.length;\n}\nexports.getBlockSize = getBlockSize;\nfunction makeHeader(raw, totalDifficulty) {\n    return {\n        parentHash: utils_1.Data.from(raw[0], 32),\n        sha3Uncles: utils_1.Data.from(raw[1], 32),\n        miner: utils_1.Data.from(raw[2], 20),\n        stateRoot: utils_1.Data.from(raw[3], 32),\n        transactionsRoot: utils_1.Data.from(raw[4], 32),\n        receiptsRoot: utils_1.Data.from(raw[5], 32),\n        logsBloom: utils_1.Data.from(raw[6], 256),\n        difficulty: utils_1.Quantity.from(raw[7], false),\n        number: utils_1.Quantity.from(raw[8], false),\n        gasLimit: utils_1.Quantity.from(raw[9], false),\n        gasUsed: utils_1.Quantity.from(raw[10], false),\n        timestamp: utils_1.Quantity.from(raw[11], false),\n        extraData: utils_1.Data.from(raw[12]),\n        mixHash: utils_1.Data.from(raw[13], 32),\n        nonce: utils_1.Data.from(raw[14], 8),\n        totalDifficulty: utils_1.Quantity.from(totalDifficulty, false),\n        baseFeePerGas: raw[15] === undefined ? undefined : utils_1.Quantity.from(raw[15], false)\n    };\n}\nexports.makeHeader = makeHeader;\n/**\n * A minimal block that can be used by the EVM to run transactions.\n */\nclass RuntimeBlock {\n    constructor(number, parentHash, coinbase, gasLimit, gasUsed, timestamp, difficulty, previousBlockTotalDifficulty, baseFeePerGas) {\n        this.serializeBaseFeePerGas = true;\n        const ts = timestamp.toBuffer();\n        const coinbaseBuffer = coinbase.toBuffer();\n        this.header = {\n            parentHash: parentHash.toBuffer(),\n            coinbase: { buf: coinbaseBuffer, toBuffer: () => coinbaseBuffer },\n            number: new BnExtra(number.toBuffer()),\n            difficulty: new BnExtra(difficulty.toBuffer()),\n            totalDifficulty: utils_1.Quantity.from(previousBlockTotalDifficulty.toBigInt() + difficulty.toBigInt()).toBuffer(),\n            gasLimit: new BnExtra(gasLimit),\n            gasUsed: new BnExtra(gasUsed),\n            timestamp: new BnExtra(ts),\n            baseFeePerGas: baseFeePerGas === undefined\n                ? new BnExtra(utils_1.BUFFER_ZERO)\n                : new BnExtra(utils_1.Quantity.toBuffer(baseFeePerGas))\n        };\n        // When forking we might get a block that doesn't have a baseFeePerGas value,\n        // but EIP-1559 might be active on our chain. We need to keep track on if\n        // we should serialize the baseFeePerGas value or not based on that info.\n        // this will be removed as part of https://github.com/trufflesuite/ganache/pull/1537\n        if (baseFeePerGas === undefined)\n            this.serializeBaseFeePerGas = false;\n    }\n    /**\n     * Returns the serialization of all block data, the hash of the block header,\n     * and a map of the hashed and raw storage keys\n     */\n    finalize(transactionsTrie, receiptTrie, bloom, stateRoot, gasUsed, extraData, transactions, storageKeys) {\n        const { header } = this;\n        const rawHeader = [\n            header.parentHash,\n            ethereumjs_util_1.KECCAK256_RLP_ARRAY,\n            header.coinbase.buf,\n            stateRoot,\n            transactionsTrie,\n            receiptTrie,\n            bloom,\n            header.difficulty.buf,\n            header.number.buf,\n            header.gasLimit.buf,\n            gasUsed === 0n ? utils_1.BUFFER_EMPTY : utils_1.Quantity.toBuffer(gasUsed),\n            header.timestamp.buf,\n            extraData.toBuffer(),\n            utils_1.BUFFER_32_ZERO,\n            utils_1.BUFFER_8_ZERO // nonce\n        ];\n        if (this.serializeBaseFeePerGas && header.baseFeePerGas !== undefined) {\n            rawHeader[15] = header.baseFeePerGas.buf;\n        }\n        const { totalDifficulty } = header;\n        const txs = [];\n        const extraTxs = [];\n        transactions.forEach(tx => {\n            txs.push(tx.raw);\n            extraTxs.push([tx.from.toBuffer(), tx.hash.toBuffer()]);\n        });\n        const { serialized, size } = (0, serialize_1.serialize)([\n            rawHeader,\n            txs,\n            [],\n            totalDifficulty,\n            extraTxs\n        ]);\n        // make a new block, but pass `null` so it doesn't do the extra\n        // deserialization work since we already have everything in a deserialized\n        // state here. We'll just set it ourselves by reaching into the \"_private\"\n        // fields.\n        const block = new block_1.Block(null, \n        // TODO(hack)!\n        transactions.length > 0 ? transactions[0].common : null);\n        block._raw = rawHeader;\n        block._rawTransactions = txs;\n        block.header = makeHeader(rawHeader, totalDifficulty);\n        block.serializeBaseFeePerGas = rawHeader[15] === undefined;\n        block._rawTransactionMetaData = extraTxs;\n        block._size = size;\n        return {\n            block,\n            serialized,\n            storageKeys,\n            transactions\n        };\n    }\n}\nexports.RuntimeBlock = RuntimeBlock;\n//# sourceMappingURL=runtime-block.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialize = void 0;\nconst rlp_1 = require(\"@ganache/rlp\");\nconst utils_1 = require(\"@ganache/utils\");\nfunction serialize(raw) {\n    const serializedStart = (0, rlp_1.encodeRange)(raw, 0, 3);\n    const serializedLength = serializedStart.length;\n    const ethereumRawBlockSize = (0, rlp_1.encodeLength)(serializedLength, 192).length;\n    const size = ethereumRawBlockSize + serializedLength;\n    const middle = (0, rlp_1.encodeRange)(raw, 3, 2);\n    const ending = (0, rlp_1.encode)((0, utils_1.uintToBuffer)(size));\n    return {\n        serialized: (0, rlp_1.digest)([serializedStart.output, middle.output, [ending]], serializedLength + middle.length + ending.length),\n        size\n    };\n}\nexports.serialize = serialize;\n//# sourceMappingURL=serialize.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=snapshots.js.map","\"use strict\";\n/*!\n * @ganache/ethereum\n *\n * @author David Murdoch <david@trufflesuite.com> (https://davidmurdoch.com)\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/connector\"), exports);\n__exportStar(require(\"./src/api-types\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=api-types.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _EthereumApi_getId, _EthereumApi_filters, _EthereumApi_subscriptions, _EthereumApi_options, _EthereumApi_blockchain, _EthereumApi_wallet;\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//#region Imports\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst eth_sig_util_1 = require(\"eth-sig-util\");\nconst utils_1 = require(\"@ganache/utils\");\nconst wallet_1 = __importDefault(require(\"./wallet\"));\nconst gas_estimator_1 = __importDefault(require(\"./helpers/gas-estimator\"));\nconst assert_arg_length_1 = require(\"./helpers/assert-arg-length\");\nconst filter_parsing_1 = require(\"./helpers/filter-parsing\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst miner_1 = require(\"./miner/miner\");\nasync function autofillDefaultTransactionValues(tx, eth_estimateGas, eth_maxPriorityFeePerGas, transaction, blockchain, options) {\n    if (tx.gas.isNull()) {\n        const defaultLimit = options.miner.defaultTransactionGasLimit;\n        if (defaultLimit === utils_1.Quantity.Empty) {\n            // if the default limit is `Quantity.Empty` use a gas estimate\n            tx.gas = await eth_estimateGas(transaction, ethereum_utils_1.Tag.latest);\n        }\n        else {\n            tx.gas = defaultLimit;\n        }\n    }\n    if (\"gasPrice\" in tx && tx.gasPrice.isNull()) {\n        tx.gasPrice = options.miner.defaultGasPrice;\n    }\n    if (\"maxFeePerGas\" in tx && tx.maxFeePerGas.isNull()) {\n        const block = blockchain.blocks.latest;\n        tx.maxFeePerGas = utils_1.Quantity.from(ethereum_block_1.Block.calcNBlocksMaxBaseFee(3, block.header));\n    }\n    if (\"maxPriorityFeePerGas\" in tx && tx.maxPriorityFeePerGas.isNull()) {\n        tx.maxPriorityFeePerGas = await eth_maxPriorityFeePerGas();\n    }\n}\nconst version = process.env.VERSION || \"DEV\";\n//#endregion\n//#region Constants\nconst CLIENT_VERSION = `Ganache/v${version}/EthereumJS TestRPC/v${version}/ethereum-js`;\nconst PROTOCOL_VERSION = utils_1.Data.from(\"0x3f\");\nconst RPC_MODULES = {\n    eth: \"1.0\",\n    net: \"1.0\",\n    rpc: \"1.0\",\n    web3: \"1.0\",\n    evm: \"1.0\",\n    personal: \"1.0\"\n};\n//#endregion\n//#region helpers\n/**\n * Combines RuntimeErrors for a list of rejected or reverted transactions.\n * @param transactions Array of transactions with errors to assert.\n */\nfunction assertExceptionalTransactions(transactions) {\n    let baseError = null;\n    let errors;\n    const data = {};\n    transactions.forEach(transaction => {\n        if (transaction.execException) {\n            if (baseError) {\n                baseError = ethereum_utils_1.VM_EXCEPTIONS;\n                errors.push(`${transaction.hash.toString()}: ${transaction.execException}\\n`);\n                data[transaction.execException.data.hash] =\n                    transaction.execException.data;\n            }\n            else {\n                baseError = ethereum_utils_1.VM_EXCEPTION;\n                errors = [transaction.execException.message];\n                data[transaction.execException.data.hash] =\n                    transaction.execException.data;\n            }\n        }\n    });\n    if (baseError) {\n        const err = new Error(baseError + errors.join(\"\\n\"));\n        err.data = data;\n        throw err;\n    }\n}\n//#endregion helpers\nclass EthereumApi {\n    /**\n     * This is the Ethereum API that the provider interacts with.\n     * The only methods permitted on the prototype are the supported json-rpc\n     * methods.\n     * @param options -\n     * @param wallet -\n     * @param emitter -\n     */\n    constructor(options, wallet, blockchain) {\n        _EthereumApi_getId.set(this, (id => () => utils_1.Quantity.from(++id))(0));\n        _EthereumApi_filters.set(this, new Map());\n        _EthereumApi_subscriptions.set(this, new Map());\n        _EthereumApi_options.set(this, void 0);\n        _EthereumApi_blockchain.set(this, void 0);\n        _EthereumApi_wallet.set(this, void 0);\n        __classPrivateFieldSet(this, _EthereumApi_options, options, \"f\");\n        __classPrivateFieldSet(this, _EthereumApi_wallet, wallet, \"f\");\n        __classPrivateFieldSet(this, _EthereumApi_blockchain, blockchain, \"f\");\n    }\n    //#region db\n    /**\n     * Stores a string in the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @param value - String to store.\n     * @returns returns true if the value was stored, otherwise false.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_putString\", [\"testDb\", \"testKey\", \"testValue\"] ));\n     * ```\n     */\n    async db_putString(dbName, key, value) {\n        return false;\n    }\n    /**\n     * Returns string from the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @returns The previously stored string.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_getString\", [\"testDb\", \"testKey\"] ));\n     * ```\n     */\n    async db_getString(dbName, key) {\n        return \"\";\n    }\n    /**\n     * Stores binary data in the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @param data - Data to store.\n     * @returns true if the value was stored, otherwise false.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_putHex\", [\"testDb\", \"testKey\", \"0x0\"] ));\n     * ```\n     */\n    async db_putHex(dbName, key, data) {\n        return false;\n    }\n    /**\n     * Returns binary data from the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @returns The previously stored data.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_getHex\", [\"testDb\", \"testKey\"] ));\n     * ```\n     */\n    async db_getHex(dbName, key) {\n        return \"0x00\";\n    }\n    //#endregion\n    //#region bzz\n    /**\n     * Returns the kademlia table in a readable table format.\n     * @returns Returns the kademlia table in a readable table format.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"bzz_hive\"));\n     * ```\n     */\n    async bzz_hive() {\n        return [];\n    }\n    /**\n     * Returns details about the swarm node.\n     * @returns Returns details about the swarm node.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"bzz_info\"));\n     * ```\n     */\n    async bzz_info() {\n        return [];\n    }\n    async evm_mine(arg) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        const vmErrorsOnRPCResponse = options.chain.vmErrorsOnRPCResponse;\n        // Since `typeof null === \"object\"` we have to guard against that\n        if (arg !== null && typeof arg === \"object\") {\n            let { blocks, timestamp } = arg;\n            if (blocks == null) {\n                blocks = 1;\n            }\n            // TODO(perf): add an option to mine a bunch of blocks in a batch so\n            // we can save them all to the database in one go.\n            // Developers like to move the blockchain forward by thousands of blocks\n            // at a time and doing this would make it way faster\n            for (let i = 0; i < blocks; i++) {\n                const { transactions } = await blockchain.mine(miner_1.Capacity.FillBlock, timestamp, true);\n                if (vmErrorsOnRPCResponse) {\n                    assertExceptionalTransactions(transactions);\n                }\n            }\n        }\n        else {\n            const { transactions } = await blockchain.mine(miner_1.Capacity.FillBlock, arg, true);\n            if (vmErrorsOnRPCResponse) {\n                assertExceptionalTransactions(transactions);\n            }\n        }\n        return \"0x0\";\n    }\n    /**\n     * Sets the given account's nonce to the specified value. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param nonce - The nonce value to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const nonce = \"0x3e8\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountNonce\", [address, nonce] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountNonce(address, nonce) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        const buffer = ethereum_address_1.Address.from(address).toBuffer();\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const stateManager = blockchain.vm.stateManager;\n        const account = await stateManager.getAccount({ buf: buffer });\n        account.nonce = {\n            toArrayLike: () => utils_1.Quantity.toBuffer(nonce)\n        };\n        await stateManager.putAccount({ buf: buffer }, account);\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Sets the given account's balance to the specified WEI value. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param balance - The balance value, in WEI, to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const balance = \"0x3e8\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountBalance\", [address, balance] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountBalance(address, balance) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        const buffer = ethereum_address_1.Address.from(address).toBuffer();\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const stateManager = blockchain.vm.stateManager;\n        const account = await stateManager.getAccount({ buf: buffer });\n        account.balance = {\n            toArrayLike: () => utils_1.Quantity.toBuffer(balance)\n        };\n        await stateManager.putAccount({ buf: buffer }, account);\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Sets the given account's code to the specified data. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param code - The code to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const data = \"0xbaddad42\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountCode\", [address, data] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountCode(address, code) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        const addressBuffer = ethereum_address_1.Address.from(address).toBuffer();\n        const codeBuffer = utils_1.Data.toBuffer(code);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const stateManager = blockchain.vm.stateManager;\n        // The ethereumjs-vm StateManager does not allow to set empty code,\n        // therefore we will manually set the code hash when \"clearing\" the contract code\n        if (codeBuffer.length > 0) {\n            await stateManager.putContractCode({ buf: addressBuffer }, codeBuffer);\n        }\n        else {\n            const account = await stateManager.getAccount({\n                buf: addressBuffer\n            });\n            account.codeHash = ethereumjs_util_1.KECCAK256_NULL;\n            await stateManager.putAccount({ buf: addressBuffer }, account);\n        }\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Sets the given account's storage slot to the specified data. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param slot - The storage slot that should be set.\n     * @param value - The value to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const slot = \"0x0000000000000000000000000000000000000000000000000000000000000005\";\n     * const data = \"0xbaddad42\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountStorageAt\", [address, slot, data] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountStorageAt(address, slot, value) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        const addressBuffer = ethereum_address_1.Address.from(address).toBuffer();\n        const slotBuffer = utils_1.Data.toBuffer(slot);\n        const valueBuffer = utils_1.Data.toBuffer(value);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const stateManager = blockchain.vm.stateManager;\n        await stateManager.putContractStorage({ buf: addressBuffer }, slotBuffer, valueBuffer);\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Jump forward in time by the given amount of time, in seconds.\n     * @param seconds - Number of seconds to jump forward in time by. Must be greater than or equal to `0`.\n     * @returns Returns the total time adjustment, in seconds.\n     * @example\n     * ```javascript\n     * const seconds = 10;\n     * const timeAdjustment = await provider.send(\"evm_increaseTime\", [seconds] );\n     * console.log(timeAdjustment);\n     * ```\n     */\n    async evm_increaseTime(seconds) {\n        const milliseconds = (typeof seconds === \"number\" ? seconds : utils_1.Quantity.toNumber(seconds)) *\n            1000;\n        return Math.floor(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").increaseTime(milliseconds) / 1000);\n    }\n    /**\n     * Sets the internal clock time to the given timestamp.\n     *\n     * Warning: This will allow you to move *backwards* in time, which may cause\n     * new blocks to appear to be mined before old blocks. This will result in\n     * an invalid state.\n     *\n     * @param time - JavaScript timestamp (millisecond precision).\n     * @returns The amount of *seconds* between the given timestamp and now.\n     * @example\n     * ```javascript\n     * const currentDate = Date.now();\n     * setTimeout(async () => {\n     *   const time = await provider.send(\"evm_setTime\", [currentDate] );\n     *   console.log(time); // should be about two seconds ago\n     * }, 1000);\n     * ```\n     */\n    async evm_setTime(time) {\n        let timestamp;\n        switch (typeof time) {\n            case \"object\":\n                timestamp = time.getTime();\n                break;\n            case \"number\":\n                timestamp = time;\n                break;\n            default:\n                timestamp = utils_1.Quantity.toNumber(time);\n                break;\n        }\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const offsetMilliseconds = blockchain.setTimeDiff(timestamp);\n        // convert offsetMilliseconds to seconds:\n        return Math.floor(offsetMilliseconds / 1000);\n    }\n    /**\n     * Revert the state of the blockchain to a previous snapshot. Takes a single\n     * parameter, which is the snapshot id to revert to. This deletes the given\n     * snapshot, as well as any snapshots taken after (e.g.: reverting to id 0x1\n     * will delete snapshots with ids 0x1, 0x2, etc.)\n     *\n     * @param snapshotId - The snapshot id to revert.\n     * @returns `true` if a snapshot was reverted, otherwise `false`.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.send(\"eth_accounts\");\n     * const startingBalance = BigInt(await provider.send(\"eth_getBalance\", [from] ));\n     *\n     * // take a snapshot\n     * const snapshotId = await provider.send(\"evm_snapshot\");\n     *\n     * // send value to another account (over-simplified example)\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"] );\n     * await provider.send(\"eth_sendTransaction\", [{from, to, value: \"0xffff\"}] );\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * // ensure balance has updated\n     * const newBalance = await provider.send(\"eth_getBalance\", [from] );\n     * assert(BigInt(newBalance) < startingBalance);\n     *\n     * // revert the snapshot\n     * const isReverted = await provider.send(\"evm_revert\", [snapshotId] );\n     * assert(isReverted);\n     * console.log({isReverted: isReverted});\n     *\n     * // ensure balance has reverted\n     * const endingBalance = await provider.send(\"eth_getBalance\", [from] );\n     * const isBalanceReverted = assert.strictEqual(BigInt(endingBalance), startingBalance);\n     * console.log({isBalanceReverted: isBalanceReverted});\n     * ```\n     */\n    async evm_revert(snapshotId) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").revert(utils_1.Quantity.from(snapshotId));\n    }\n    /**\n     * Snapshot the state of the blockchain at the current block. Takes no\n     * parameters. Returns the id of the snapshot that was created. A snapshot can\n     * only be reverted once. After a successful `evm_revert`, the same snapshot\n     * id cannot be used again. Consider creating a new snapshot after each\n     * `evm_revert` if you need to revert to the same point multiple times.\n     *\n     * @returns The hex-encoded identifier for this snapshot.\n     *\n     * @example\n     * ```javascript\n     * const provider = ganache.provider();\n     * const [from, to] = await provider.send(\"eth_accounts\");\n     * const startingBalance = BigInt(await provider.send(\"eth_getBalance\", [from] ));\n     *\n     * // take a snapshot\n     * const snapshotId = await provider.send(\"evm_snapshot\");\n     *\n     * // send value to another account (over-simplified example)\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"] );\n     * await provider.send(\"eth_sendTransaction\", [{from, to, value: \"0xffff\"}] );\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * // ensure balance has updated\n     * const newBalance = await provider.send(\"eth_getBalance\", [from] );\n     * assert(BigInt(newBalance) < startingBalance);\n     *\n     * // revert the snapshot\n     * const isReverted = await provider.send(\"evm_revert\", [snapshotId] );\n     * assert(isReverted);\n     *\n     * // ensure balance has reverted\n     * const endingBalance = await provider.send(\"eth_getBalance\", [from] );\n     * const isBalanceReverted = assert.strictEqual(BigInt(endingBalance), startingBalance);\n     * console.log({isBalanceReverted: isBalanceReverted});\n     * ```\n     */\n    async evm_snapshot() {\n        return utils_1.Quantity.from(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").snapshot());\n    }\n    /**\n     * Adds any arbitrary account to the `personal` namespace.\n     *\n     * Note: accounts already known to the `personal` namespace and accounts\n     * returned by `eth_accounts` cannot be re-added using this method.\n     * @param address - The address of the account to add to the `personal`\n     * namespace.\n     * @param passphrase - The passphrase used to encrypt the account's private key.\n     * NOTE: this passphrase will be needed for all `personal` namespace calls\n     * that require a password.\n     * @returns `true` if  the account was successfully added. `false` if the\n     * account is already in the `personal` namespace.\n     * @example\n     * ```javascript\n     * const address = \"0x742d35Cc6634C0532925a3b844Bc454e4438f44e\";\n     * const passphrase = \"passphrase\"\n     * const result = await provider.send(\"evm_addAccount\", [address, passphrase] );\n     * console.log(result);\n     * ```\n     */\n    async evm_addAccount(address, passphrase) {\n        const addy = new ethereum_address_1.Address(address);\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").addUnknownAccount(addy, passphrase);\n    }\n    /**\n     * Removes an account from the `personal` namespace.\n     *\n     * Note: accounts not known to the `personal` namespace cannot be removed\n     * using this method.\n     * @param address - The address of the account to remove from the `personal`\n     * namespace.\n     * @param passphrase - The passphrase used to decrypt the account's private key.\n     * @returns `true` if the account was successfully removed. `false` if the\n     * account was not in the `personal` namespace.\n     * @example\n     * ```javascript\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const passphrase = \"passphrase\"\n     * const result = await provider.send(\"evm_removeAccount\", [address, passphrase] );\n     * console.log(result);\n     * ```\n     */\n    async evm_removeAccount(address, passphrase) {\n        const addy = new ethereum_address_1.Address(address);\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").removeKnownAccount(addy, passphrase);\n    }\n    //#endregion evm\n    //#region miner\n    /**\n     * Resume the CPU mining process with the given number of threads.\n     *\n     * Note: `threads` is ignored.\n     * @param threads - Number of threads to resume the CPU mining process with.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * await provider.send(\"miner_stop\");\n     * // check that eth_mining returns false\n     * console.log(await provider.send(\"eth_mining\"));\n     * await provider.send(\"miner_start\");\n     * // check that eth_mining returns true\n     * console.log(await provider.send(\"eth_mining\"));\n     * ```\n     */\n    async miner_start(threads = 1) {\n        if (__classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.instamine === \"eager\") {\n            const resumption = await __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").resume(threads);\n            // resumption can be undefined if the blockchain isn't currently paused\n            if (resumption &&\n                resumption.transactions != null &&\n                __classPrivateFieldGet(this, _EthereumApi_options, \"f\").chain.vmErrorsOnRPCResponse) {\n                assertExceptionalTransactions(resumption.transactions);\n            }\n        }\n        else {\n            __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").resume(threads);\n        }\n        return true;\n    }\n    /**\n     * Stop the CPU mining operation.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * // check that eth_mining returns true\n     * console.log(await provider.send(\"eth_mining\"));\n     * await provider.send(\"miner_stop\");\n     * // check that eth_mining returns false\n     * console.log(await provider.send(\"eth_mining\"));\n     * ```\n     */\n    async miner_stop() {\n        __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").pause();\n        return true;\n    }\n    /**\n     * Sets the default accepted gas price when mining transactions.\n     * Any transactions that don't specify a gas price will use this amount.\n     * Transactions that are below this limit are excluded from the mining process.\n     * @param number - Default accepted gas price.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"miner_setGasPrice\", [300000] ));\n     * ```\n     */\n    async miner_setGasPrice(number) {\n        __classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.defaultGasPrice = utils_1.Quantity.from(number);\n        return true;\n    }\n    /**\n     * Sets the etherbase, where mining rewards will go.\n     * @param address - The address where the mining rewards will go.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * console.log(await provider.send(\"miner_setEtherbase\", [account] ));\n     * ```\n     */\n    async miner_setEtherbase(address) {\n        __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").coinbase = ethereum_address_1.Address.from(address);\n        return true;\n    }\n    /**\n     * Set the extraData block header field a miner can include.\n     * @param extra - The `extraData` to include.\n     * @returns If successfully set returns `true`, otherwise returns an error.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"miner_setExtra\", [\"0x0\"] ));\n     * ```\n     */\n    async miner_setExtra(extra) {\n        const bytes = utils_1.Data.from(extra);\n        const length = bytes.toBuffer().length;\n        if (length > 32) {\n            throw new Error(`extra exceeds max length. ${length} > 32`);\n        }\n        __classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.extraData = bytes;\n        return true;\n    }\n    //#endregion\n    //#region web3\n    /**\n     * Returns the current client version.\n     * @returns The current client version.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"web3_clientVersion\"));\n     * ```\n     */\n    async web3_clientVersion() {\n        return CLIENT_VERSION;\n    }\n    /**\n     * Returns Keccak-256 (not the standardized SHA3-256) of the given data.\n     * @param data - the data to convert into a SHA3 hash.\n     * @returns The SHA3 result of the given string.\n     * @example\n     * ```javascript\n     * const data = \"hello trufflers\";\n     * const sha3 = await provider.send(\"web3_sha3\", [data] );\n     * console.log(sha3);\n     * ```\n     */\n    async web3_sha3(data) {\n        return utils_1.Data.from((0, utils_1.keccak)(utils_1.Data.toBuffer(data)));\n    }\n    //#endregion\n    //#region net\n    /**\n     * Returns the current network id.\n     * @returns The current network id. This value should NOT be JSON-RPC\n     * Quantity/Data encoded.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"net_version\"));\n     * ```\n     */\n    async net_version() {\n        return __classPrivateFieldGet(this, _EthereumApi_options, \"f\").chain.networkId.toString();\n    }\n    /**\n     * Returns `true` if client is actively listening for network connections.\n     * @returns `true` when listening, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"net_listening\"));\n     * ```\n     */\n    async net_listening() {\n        return true;\n    }\n    /**\n     * Returns number of peers currently connected to the client.\n     * @returns Number of connected peers.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"net_peerCount\"));\n     * ```\n     */\n    async net_peerCount() {\n        return utils_1.Quantity.Zero;\n    }\n    //#endregion\n    //#region eth\n    // TODO: example doesn't return correct value\n    /**\n     * Generates and returns an estimate of how much gas is necessary to allow the\n     * transaction to complete. The transaction will not be added to the\n     * blockchain. Note that the estimate may be significantly more than the\n     * amount of gas actually used by the transaction, for a variety of reasons\n     * including EVM mechanics and node performance.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     *\n     * @returns The amount of gas used.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const gasEstimate = await provider.request({ method: \"eth_estimateGas\", params: [{ from, to }, \"latest\" ] });\n     * console.log(gasEstimate);\n     * ```\n     */\n    async eth_estimateGas(transaction, blockNumber = ethereum_utils_1.Tag.latest) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blocks = blockchain.blocks;\n        const parentBlock = await blocks.get(blockNumber);\n        const parentHeader = parentBlock.header;\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        const generateVM = () => {\n            return blockchain.vm.copy();\n        };\n        return new Promise((resolve, reject) => {\n            const { coinbase } = blockchain;\n            const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n            if (tx.from == null) {\n                tx.from = coinbase;\n            }\n            if (tx.gas.isNull()) {\n                // eth_estimateGas isn't subject to regular transaction gas limits\n                tx.gas = options.miner.callGasLimit;\n            }\n            const block = new ethereum_block_1.RuntimeBlock(utils_1.Quantity.from((parentHeader.number.toBigInt() || 0n) + 1n), parentHeader.parentHash, parentHeader.miner, tx.gas.toBuffer(), parentHeader.gasUsed.toBuffer(), parentHeader.timestamp, options.miner.difficulty, parentHeader.totalDifficulty, 0n // no baseFeePerGas for estimates\n            );\n            const runArgs = {\n                tx: tx.toVmTransaction(),\n                block,\n                skipBalance: true,\n                skipNonce: true\n            };\n            (0, gas_estimator_1.default)(generateVM, runArgs, (err, result) => {\n                if (err)\n                    return reject(err);\n                resolve(utils_1.Quantity.from(result.gasEstimate.toArrayLike(Buffer)));\n            });\n        });\n    }\n    /**\n     * Returns the current ethereum protocol version.\n     * @returns The current ethereum protocol version.\n     * @example\n     * ```javascript\n     * const version = await provider.request({ method: \"eth_protocolVersion\", params: [] });\n     * console.log(version);\n     * ```\n     */\n    async eth_protocolVersion() {\n        return PROTOCOL_VERSION;\n    }\n    /**\n     * Returns an object containing data about the sync status or `false` when not syncing.\n     *\n     * @returns An object with sync status data or `false`, when not syncing.\n     *\n     * * `startingBlock`: \\{bigint\\} The block at which the import started (will\n     *     only be reset, after the sync reached his head).\n     * * `currentBlock`: \\{bigint\\} The current block, same as `eth_blockNumber`.\n     * * `highestBlock`: \\{bigint\\} The estimated highest block.\n     *\n     * @example\n     * ```javascript\n     * const result = await provider.request({ method: \"eth_syncing\", params: [] });\n     * console.log(result);\n     * ```\n     */\n    async eth_syncing() {\n        return false;\n    }\n    /**\n     * Returns the client coinbase address.\n     * @returns The current coinbase address.\n     * @example\n     * ```javascript\n     * const coinbaseAddress = await provider.request({ method: \"eth_coinbase\" });\n     * console.log(coinbaseAddress);\n     * ```\n     */\n    async eth_coinbase() {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").coinbase;\n    }\n    /**\n     * Returns information about a block by block number.\n     * @param number - Integer of a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the\n     * default block parameter.\n     * @param transactions - If `true` it returns the full transaction objects, if `false` only the hashes of the\n     * transactions.\n     * @returns The block, `null` if the block doesn't exist.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `transactions`: `Array` - Array of transaction objects or 32 Bytes transaction hashes depending on the last parameter.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * @example\n     * ```javascript\n     * const block = await provider.request({ method: \"eth_getBlockByNumber\", params: [\"0x0\", false] });\n     * console.log(block);\n     * ```\n     */\n    async eth_getBlockByNumber(number, transactions) {\n        if (typeof transactions === \"undefined\") {\n            transactions = false;\n        }\n        const block = await __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blocks\n            .get(number)\n            .catch(_ => null);\n        // @ts-ignore\n        return block ? block.toJSON(transactions) : null;\n    }\n    /**\n     * Returns information about a block by block hash.\n     * @param hash - Hash of a block.\n     * @param transactions - If `true` it returns the full transaction objects, if `false` only the hashes of the\n     * transactions.\n     * @returns The block, `null` if the block doesn't exist.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `transactions`: `Array` - Array of transaction objects or 32 Bytes transaction hashes depending on the last parameter.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const block = await provider.request({ method: \"eth_getBlockByHash\", params: [txReceipt.blockHash, true] });\n     * console.log(block);\n     * ```\n     */\n    async eth_getBlockByHash(hash, transactions) {\n        if (typeof transactions === \"undefined\") {\n            transactions = false;\n        }\n        const block = await __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blocks\n            .getByHash(hash)\n            .catch(_ => null);\n        return block ? block.toJSON(transactions) : null;\n    }\n    /**\n     * Returns the number of transactions in a block from a block matching the given block number.\n     * @param number - Integer of a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the\n     * default block parameter.\n     * @returns Integer of the number of transactions in the block.\n     * @example\n     * ```javascript\n     * const txCount = await provider.request({ method: \"eth_getBlockTransactionCountByNumber\", params: [\"0x0\"] });\n     * console.log(txCount);\n     * ```\n     */\n    async eth_getBlockTransactionCountByNumber(blockNumber) {\n        const { blocks } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blockNum = blocks.getEffectiveNumber(blockNumber);\n        const rawBlock = await blocks.getRawByBlockNumber(blockNum);\n        if (!rawBlock)\n            return null;\n        const [, rawTransactions] = (0, rlp_1.decode)(rawBlock);\n        return utils_1.Quantity.from(rawTransactions.length);\n    }\n    /**\n     * Returns the number of transactions in a block from a block matching the given block hash.\n     * @param hash - Hash of a block.\n     * @returns Number of transactions in the block.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const txCount = await provider.request({ method: \"eth_getBlockTransactionCountByHash\", params: [txReceipt.blockHash] });\n     * console.log(txCount);\n     * ```\n     */\n    async eth_getBlockTransactionCountByHash(hash) {\n        const { blocks } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blockNum = await blocks.getNumberFromHash(hash);\n        if (!blockNum)\n            return null;\n        const rawBlock = await blocks.getRawByBlockNumber(utils_1.Quantity.from(blockNum));\n        if (!rawBlock)\n            return null;\n        const [, rawTransactions] = (0, rlp_1.decode)(rawBlock);\n        return utils_1.Quantity.from(rawTransactions.length);\n    }\n    /**\n     * Returns a list of available compilers.\n     * @returns List of available compilers.\n     * @example\n     * ```javascript\n     * const compilers = await provider.send(\"eth_getCompilers\");\n     * console.log(compilers);\n     * ```\n     */\n    async eth_getCompilers() {\n        return [];\n    }\n    /**\n     * Returns information about a transaction by block hash and transaction index position.\n     * @param hash - Hash of a block.\n     * @param index - Integer of the transaction index position.\n     * @returns The transaction object or `null` if no transaction was found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - The transaction hash.\n     * * `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n     * * `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n     * * `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n     * * `value`: `QUANTITY` - The value transferred in wei.\n     * * `gas`: `QUANTITY` - The gas provided by the sender.\n     * * `gasPrice`: `QUANTITY` - The price of gas in wei.\n     * * `input`: `DATA` - The data sent along with the transaction.\n     * * `v`: `QUANTITY` - ECDSA recovery id.\n     * * `r`: `DATA`, 32 Bytes - ECDSA signature r.\n     * * `s`: `DATA`, 32 Bytes - ECDSA signature s.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const { blockHash, transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     *\n     * const tx = await provider.request({ method: \"eth_getTransactionByBlockHashAndIndex\", params: [ blockHash, transactionIndex ] });\n     * console.log(tx);\n     * ```\n     */\n    async eth_getTransactionByBlockHashAndIndex(hash, index) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const block = await blockchain.blocks\n            .getByHash(hash)\n            .catch(_ => null);\n        if (!block)\n            return null;\n        const transactions = block.getTransactions();\n        return transactions[utils_1.Quantity.toNumber(index)].toJSON(blockchain.common);\n    }\n    /**\n     * Returns information about a transaction by block number and transaction index position.\n     * @param number - A block number, or the string \"earliest\", \"latest\" or \"pending\".\n     * @param index - Integer of the transaction index position.\n     * @returns The transaction object or `null` if no transaction was found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - The transaction hash.\n     * * `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n     * * `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n     * * `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n     * * `value`: `QUANTITY` - The value transferred in wei.\n     * * `gas`: `QUANTITY` - The gas provided by the sender.\n     * * `gasPrice`: `QUANTITY` - The price of gas in wei.\n     * * `input`: `DATA` - The data sent along with the transaction.\n     * * `v`: `QUANTITY` - ECDSA recovery id.\n     * * `r`: `DATA`, 32 Bytes - ECDSA signature r.\n     * * `s`: `DATA`, 32 Bytes - ECDSA signature s.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const { transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     *\n     * const tx = await provider.request({ method: \"eth_getTransactionByBlockNumberAndIndex\", params: [ \"latest\", transactionIndex ] });\n     * console.log(tx);\n     * ```\n     */\n    async eth_getTransactionByBlockNumberAndIndex(number, index) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const block = await blockchain.blocks.get(number).catch(_ => null);\n        if (!block)\n            return null;\n        const transactions = block.getTransactions();\n        return transactions[utils_1.Quantity.toNumber(index)].toJSON(blockchain.common);\n    }\n    /**\n     * Returns the number of uncles in a block from a block matching the given block hash.\n     * @param hash - Hash of a block.\n     * @returns The number of uncles in a block.\n     * @example\n     * ```javascript\n     * const blockHash = await provider.send(\"eth_getBlockByNumber\", [\"latest\"] );\n     * const uncleCount = await provider.send(\"eth_getUncleCountByBlockHash\", [blockHash] );\n     * console.log(uncleCount);\n     * ```\n     */\n    async eth_getUncleCountByBlockHash(hash) {\n        return utils_1.Quantity.Zero;\n    }\n    /**\n     * Returns the number of uncles in a block from a block matching the given block hash.\n     * @param blockNumber - A block number, or the string \"earliest\", \"latest\" or \"pending\".\n     * @returns The number of uncles in a block.\n     * @example\n     * ```javascript\n     * const uncleCount = await provider.send(\"eth_getUncleCountByBlockNumber\", [\"latest\"] );\n     * console.log(uncleCount);\n     * ```\n     */\n    async eth_getUncleCountByBlockNumber(blockNumber) {\n        return utils_1.Quantity.Zero;\n    }\n    /**\n     * Returns information about a uncle of a block by hash and uncle index position.\n     *\n     * @param hash - Hash of a block.\n     * @param index - The uncle's index position.\n     * @returns A block object or `null` when no block is found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * **NOTE: **The return does not contain a list of transactions in the uncle\n     * block, to get this, make another request to `eth_getBlockByHash`.\n     *\n     * @example\n     * ```javascript\n     * const blockHash = await provider.send(\"eth_getBlockByNumber\", [\"latest\"] );\n     * const block = await provider.send(\"eth_getUncleByBlockHashAndIndex\", [blockHash, \"0x0\"] );\n     * console.log(block);\n     * ```\n     */\n    async eth_getUncleByBlockHashAndIndex(hash, index) {\n        return null;\n    }\n    /**\n     * Returns information about a uncle of a block by hash and uncle index position.\n     *\n     * @param blockNumber - A block number, or the string \"earliest\", \"latest\" or \"pending\".\n     * @param uncleIndex - The uncle's index position.\n     * @returns A block object or `null` when no block is found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * * **NOTE: **The return does not contain a list of transactions in the uncle\n     * block, to get this, make another request to `eth_getBlockByHash`.\n     *\n     * @example\n     * ```javascript\n     * const block = await provider.send(\"eth_getUncleByBlockNumberAndIndex\", [\"latest\", \"0x0\"] );\n     * console.log(block);\n     * ```\n     */\n    async eth_getUncleByBlockNumberAndIndex(blockNumber, uncleIndex) {\n        return null;\n    }\n    /**\n     * Returns: An Array with the following elements\n     * 1: `DATA`, 32 Bytes - current block header pow-hash\n     * 2: `DATA`, 32 Bytes - the seed hash used for the DAG.\n     * 3: `DATA`, 32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty.\n     *\n     * @param filterId - A filter id.\n     * @returns The hash of the current block, the seedHash, and the boundary condition to be met (\"target\").\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"eth_getWork\", [\"0x0\"] ));\n     * ```\n     */\n    async eth_getWork(filterId) {\n        return [];\n    }\n    /**\n     * Used for submitting a proof-of-work solution.\n     *\n     * @param nonce - The nonce found (64 bits).\n     * @param powHash - The header's pow-hash (256 bits).\n     * @param digest - The mix digest (256 bits).\n     * @returns `true` if the provided solution is valid, otherwise `false`.\n     * @example\n     * ```javascript\n     * const nonce = \"0xe0df4bd14ab39a71\";\n     * const powHash = \"0x0000000000000000000000000000000000000000000000000000000000000001\";\n     * const digest = \"0xb2222a74119abd18dbcb7d1f661c6578b7bbeb4984c50e66ed538347f606b971\";\n     * const result = await provider.request({ method: \"eth_submitWork\", params: [nonce, powHash, digest] });\n     * console.log(result);\n     * ```\n     */\n    async eth_submitWork(nonce, powHash, digest) {\n        return false;\n    }\n    /**\n     * Used for submitting mining hashrate.\n     *\n     * @param hashRate - A hexadecimal string representation (32 bytes) of the hash rate.\n     * @param clientID - A random hexadecimal(32 bytes) ID identifying the client.\n     * @returns `true` if submitting went through successfully and `false` otherwise.\n     * @example\n     * ```javascript\n     * const hashRate = \"0x0000000000000000000000000000000000000000000000000000000000000001\";\n     * const clientId = \"0xb2222a74119abd18dbcb7d1f661c6578b7bbeb4984c50e66ed538347f606b971\";\n     * const result = await provider.request({ method: \"eth_submitHashrate\", params: [hashRate, clientId] });\n     * console.log(result);\n     * ```\n     */\n    async eth_submitHashrate(hashRate, clientID) {\n        return false;\n    }\n    /**\n     * Returns `true` if client is actively mining new blocks.\n     * @returns returns `true` if the client is mining, otherwise `false`.\n     * @example\n     * ```javascript\n     * const isMining = await provider.request({ method: \"eth_mining\", params: [] });\n     * console.log(isMining);\n     * ```\n     */\n    async eth_mining() {\n        // we return the blockchain's started state\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").isStarted();\n    }\n    /**\n     * Returns the number of hashes per second that the node is mining with.\n     * @returns Number of hashes per second.\n     * @example\n     * ```javascript\n     * const hashrate = await provider.request({ method: \"eth_hashrate\", params: [] });\n     * console.log(hashrate);\n     * ```\n     */\n    async eth_hashrate() {\n        return utils_1.Quantity.Zero;\n    }\n    /**\n     * Returns the current price per gas in wei.\n     * @returns Integer of the current gas price in wei.\n     * @example\n     * ```javascript\n     * const gasPrice = await provider.request({ method: \"eth_gasPrice\", params: [] });\n     * console.log(gasPrice);\n     * ```\n     */\n    async eth_gasPrice() {\n        return __classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.defaultGasPrice;\n    }\n    /**\n     * Returns a `maxPriorityFeePerGas` value suitable for quick transaction inclusion.\n     * @returns The maxPriorityFeePerGas in wei.\n     * @example\n     * ```javascript\n     * const suggestedTip = await provider.request({ method: \"eth_maxPriorityFeePerGas\", params: [] });\n     * console.log(suggestedTip);\n     * ```\n     */\n    async eth_maxPriorityFeePerGas() {\n        return utils_1.Quantity.Gwei;\n    }\n    /**\n     * Returns a list of addresses owned by client.\n     * @returns Array of 20 Bytes - addresses owned by the client.\n     * @example\n     * ```javascript\n     * const accounts = await provider.request({ method: \"eth_accounts\", params: [] });\n     * console.log(accounts);\n     * ```\n     */\n    async eth_accounts() {\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").addresses;\n    }\n    /**\n     * Returns the number of the most recent block.\n     * @returns The current block number the client is on.\n     * @example\n     * ```javascript\n     * const blockNumber = await provider.request({ method: \"eth_blockNumber\" });\n     * console.log(blockNumber);\n     * ```\n     */\n    async eth_blockNumber() {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blocks.latest.header.number;\n    }\n    /**\n     * Returns the currently configured chain id, a value used in\n     * replay-protected transaction signing as introduced by EIP-155.\n     * @returns The chain id as a string.\n     * @EIP [155 – Simple replay attack protection](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md)\n     *\n     * @example\n     * ```javascript\n     * const chainId = await provider.send(\"eth_chainId\");\n     * console.log(chainId);\n     * ```\n     */\n    async eth_chainId() {\n        return utils_1.Quantity.from(__classPrivateFieldGet(this, _EthereumApi_options, \"f\").chain.chainId);\n    }\n    /**\n     * Returns the balance of the account of given address.\n     * @param address - Address to check for balance.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     *\n     * @returns Integer of the account balance in wei.\n     *\n     * @example\n     * ```javascript\n     * const accounts = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const balance = await provider.request({ method: \"eth_getBalance\", params: [accounts[0], \"latest\"] });\n     * console.log(balance);\n     * ```\n     */\n    async eth_getBalance(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").accounts.getBalance(ethereum_address_1.Address.from(address), blockNumber);\n    }\n    /**\n     * Returns code at a given address.\n     *\n     * @param address - Address.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\" or \"pending\".\n     * @returns The code from the given address.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const code = await provider.request({ method: \"eth_getCode\", params: [txReceipt.contractAddress, \"latest\"] });\n     * console.log(code);\n     * ```\n     */\n    async eth_getCode(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const { accounts } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        return accounts.getCode(ethereum_address_1.Address.from(address), blockNumber);\n    }\n    /**\n     * Returns the value from a storage position at a given address.\n     * @param address - Address of the storage.\n     * @param position - Integer of the position in the storage.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     * @returns The value in storage at the requested position.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const storageValue = await provider.request({ method: \"eth_getStorageAt\", params: [txReceipt.contractAddress, \"0x0\", \"latest\"] });\n     * console.log(storageValue);\n     * ```\n     */\n    async eth_getStorageAt(address, position, blockNumber = ethereum_utils_1.Tag.latest) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blockNum = blockchain.blocks.getEffectiveNumber(blockNumber);\n        const block = await blockchain.blocks.getRawByBlockNumber(blockNum);\n        if (!block)\n            throw new Error(\"header not found\");\n        const [[, , , blockStateRoot]] = (0, rlp_1.decode)(block);\n        const trie = blockchain.trie.copy(false);\n        trie.setContext(blockStateRoot, null, blockNum);\n        const posBuff = utils_1.Quantity.toBuffer(position);\n        const length = posBuff.length;\n        let paddedPosBuff;\n        if (length < 32) {\n            // storage locations are 32 bytes wide, so we need to expand any value\n            // given to 32 bytes.\n            paddedPosBuff = Buffer.allocUnsafe(32).fill(0);\n            posBuff.copy(paddedPosBuff, 32 - length);\n        }\n        else if (length === 32) {\n            paddedPosBuff = posBuff;\n        }\n        else {\n            // if the position value we're passed is > 32 bytes, truncate it. This is\n            // what geth does.\n            paddedPosBuff = posBuff.slice(-32);\n        }\n        const addressBuf = ethereum_address_1.Address.from(address).toBuffer();\n        const addressData = await trie.get(addressBuf);\n        // An address's stateRoot is stored in the 3rd rlp entry\n        const addressStateRoot = (0, rlp_1.decode)(addressData)[2];\n        trie.setContext(addressStateRoot, addressBuf, blockNum);\n        const value = await trie.get(paddedPosBuff);\n        return utils_1.Data.from((0, rlp_1.decode)(value));\n    }\n    /**\n     * Returns the information about a transaction requested by transaction hash.\n     *\n     * @param transactionHash - Hash of a transaction.\n     * @returns The transaction object or `null` if no transaction was found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - The transaction hash.\n     * * `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n     * * `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n     * * `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n     * * `value`: `QUANTITY` - The value transferred in wei.\n     * * `gas`: `QUANTITY` - The gas provided by the sender.\n     * * `gasPrice`: `QUANTITY` - The price of gas in wei.\n     * * `input`: `DATA` - The data sent along with the transaction.\n     * * `v`: `QUANTITY` - ECDSA recovery id.\n     * * `r`: `DATA`, 32 Bytes - ECDSA signature r.\n     * * `s`: `DATA`, 32 Bytes - ECDSA signature s.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * const tx = await provider.request({ method: \"eth_getTransactionByHash\", params: [ txHash ] });\n     * console.log(tx);\n     * ```\n     */\n    async eth_getTransactionByHash(transactionHash) {\n        const { transactions } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const hashBuffer = utils_1.Data.toBuffer(transactionHash);\n        // we must check the database before checking the pending cache, because the\n        // cache is updated _after_ the transaction is already in the database, and\n        // the database contains block info whereas the pending cache doesn't.\n        const transaction = await transactions.get(hashBuffer);\n        if (transaction === null) {\n            // if we can't find it in the list of pending transactions, check the db!\n            const tx = transactions.transactionPool.find(hashBuffer);\n            return tx ? tx.toJSON(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").common) : null;\n        }\n        else {\n            return transaction.toJSON(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").common);\n        }\n    }\n    /**\n     * Returns the receipt of a transaction by transaction hash.\n     *\n     * Note: The receipt is not available for pending transactions.\n     *\n     * @param transactionHash - Hash of a transaction.\n     * @returns Returns the receipt of a transaction by transaction hash.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [ txHash ] });\n     * console.log(txReceipt);\n     * ```\n     */\n    async eth_getTransactionReceipt(transactionHash) {\n        const { transactions, transactionReceipts, blocks, common } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const dataHash = utils_1.Data.from(transactionHash);\n        const txHash = dataHash.toBuffer();\n        const transactionPromise = transactions.get(txHash);\n        const receiptPromise = transactionReceipts.get(txHash);\n        const blockPromise = transactionPromise.then(t => t ? blocks.get(t.blockNumber.toBuffer()) : null);\n        const [transaction, receipt, block] = await Promise.all([\n            transactionPromise,\n            receiptPromise,\n            blockPromise\n        ]);\n        if (transaction) {\n            return receipt.toJSON(block, transaction, common);\n        }\n        // if we are performing \"strict\" instamining, then check to see if the\n        // transaction is pending so as to warn about the v7 instamine changes\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        if (options.miner.blockTime <= 0 &&\n            options.miner.instamine === \"strict\" &&\n            __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").isStarted()) {\n            const tx = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").transactions.transactionPool.find(txHash);\n            if (tx != null) {\n                options.logging.logger.log(\" > Ganache `eth_getTransactionReceipt` notice: the transaction with hash\\n\" +\n                    ` > \\`${dataHash.toString()}\\` has not\\n` +\n                    \" > yet been mined.\" +\n                    \" See https://trfl.io/v7-instamine for additional information.\");\n            }\n        }\n        return null;\n    }\n    /**\n     * Creates new message call transaction or a contract creation, if the data field contains code.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @returns The transaction hash.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * console.log(txHash);\n     * ```\n     */\n    async eth_sendTransaction(transaction) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        if (tx.from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const fromString = tx.from.toString();\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const isKnownAccount = wallet.knownAccounts.has(fromString);\n        const privateKey = wallet.unlockedAccounts.get(fromString);\n        if (privateKey === undefined) {\n            const msg = isKnownAccount\n                ? \"authentication needed: passphrase or unlock\"\n                : \"sender account not recognized\";\n            throw new Error(msg);\n        }\n        await autofillDefaultTransactionValues(tx, this.eth_estimateGas.bind(this), this.eth_maxPriorityFeePerGas, transaction, blockchain, __classPrivateFieldGet(this, _EthereumApi_options, \"f\"));\n        return blockchain.queueTransaction(tx, privateKey);\n    }\n    /**\n     * Signs a transaction that can be submitted to the network at a later time using `eth_sendRawTransaction`.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @returns The raw, signed transaction.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const signedTx = await provider.request({ method: \"eth_signTransaction\", params: [{ from, to }] });\n     * console.log(signedTx)\n     * ```\n     */\n    async eth_signTransaction(transaction) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        if (tx.from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const fromString = tx.from.toString();\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const isKnownAccount = wallet.knownAccounts.has(fromString);\n        const privateKey = wallet.unlockedAccounts.get(fromString);\n        if (privateKey === undefined) {\n            const msg = isKnownAccount\n                ? \"authentication needed: passphrase or unlock\"\n                : \"sender account not recognized\";\n            throw new Error(msg);\n        }\n        tx.signAndHash(privateKey.toBuffer());\n        return utils_1.Data.from(tx.serialized);\n    }\n    /**\n     * Creates new message call transaction or a contract creation for signed transactions.\n     * @param transaction - The signed transaction data.\n     * @returns The transaction hash.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const signedTx = await provider.request({ method: \"eth_signTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * const txHash = await provider.send(\"eth_sendRawTransaction\", [signedTx] );\n     * console.log(txHash);\n     * ```\n     */\n    async eth_sendRawTransaction(transaction) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromString(transaction, blockchain.common);\n        return blockchain.queueTransaction(tx);\n    }\n    /**\n     * The sign method calculates an Ethereum specific signature with:\n     * `sign(keccak256(\"\\x19Ethereum Signed Message:\\n\" + message.length + message)))`.\n     *\n     * By adding a prefix to the message makes the calculated signature\n     * recognizable as an Ethereum specific signature. This prevents misuse where a malicious DApp can sign arbitrary data\n     *  (e.g. transaction) and use the signature to impersonate the victim.\n     *\n     * Note the address to sign with must be unlocked.\n     *\n     * @param address - Address to sign with.\n     * @param message - Message to sign.\n     * @returns Signature - a hex encoded 129 byte array\n     * starting with `0x`. It encodes the `r`, `s`, and `v` parameters from\n     * appendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n     *  in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n     * 64...128 the `s` parameter, and the last byte the `v` parameter. Note\n     * that the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const msg = \"0x307866666666666666666666\";\n     * const signature = await provider.request({ method: \"eth_sign\", params: [account, msg] });\n     * console.log(signature);\n     * ```\n     */\n    async eth_sign(address, message) {\n        const account = ethereum_address_1.Address.from(address).toString().toLowerCase();\n        const privateKey = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").unlockedAccounts.get(account);\n        if (privateKey == null) {\n            throw new Error(\"cannot sign data; no private key\");\n        }\n        const messageHash = (0, ethereumjs_util_1.hashPersonalMessage)(utils_1.Data.toBuffer(message));\n        const { v, r, s } = (0, ethereumjs_util_1.ecsign)(messageHash, privateKey.toBuffer());\n        return (0, ethereumjs_util_1.toRpcSig)(v, r, s);\n    }\n    /**\n     * Identical to eth_signTypedData_v4.\n     *\n     * @param address - Address of the account that will sign the messages.\n     * @param typedData - Typed structured data to be signed.\n     * @returns Signature. As in `eth_sign`, it is a hex encoded 129 byte array\n     * starting with `0x`. It encodes the `r`, `s`, and `v` parameters from\n     * appendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n     *  in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n     * 64...128 the `s` parameter, and the last byte the `v` parameter. Note\n     * that the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).\n     * @EIP [712](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md)\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const typedData = {\n     *  types: {\n     *    EIP712Domain: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'version', type: 'string' },\n     *      { name: 'chainId', type: 'uint256' },\n     *      { name: 'verifyingContract', type: 'address' },\n     *    ],\n     *    Person: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'wallet', type: 'address' }\n     *    ],\n     *    Mail: [\n     *      { name: 'from', type: 'Person' },\n     *      { name: 'to', type: 'Person' },\n     *      { name: 'contents', type: 'string' }\n     *    ],\n     *  },\n     *  primaryType: 'Mail',\n     *  domain: {\n     *    name: 'Ether Mail',\n     *    version: '1',\n     *    chainId: 1,\n     *    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n     *  },\n     *  message: {\n     *    from: {\n     *      name: 'Cow',\n     *      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n     *    },\n     *    to: {\n     *      name: 'Bob',\n     *      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n     *    },\n     *    contents: 'Hello, Bob!',\n     *  },\n     * };\n     * const signature = await provider.request({ method: \"eth_signTypedData\", params: [account, typedData] });\n     * console.log(signature);\n     * ```\n     */\n    async eth_signTypedData(address, typedData) {\n        return this.eth_signTypedData_v4(address, typedData);\n    }\n    /**\n     *\n     * @param address - Address of the account that will sign the messages.\n     * @param typedData - Typed structured data to be signed.\n     * @returns Signature. As in `eth_sign`, it is a hex encoded 129 byte array\n     * starting with `0x`. It encodes the `r`, `s`, and `v` parameters from\n     * appendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n     *  in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n     * 64...128 the `s` parameter, and the last byte the `v` parameter. Note\n     * that the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).\n     * @EIP [712](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md)\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const typedData = {\n     *  types: {\n     *    EIP712Domain: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'version', type: 'string' },\n     *      { name: 'chainId', type: 'uint256' },\n     *      { name: 'verifyingContract', type: 'address' },\n     *    ],\n     *    Person: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'wallet', type: 'address' }\n     *    ],\n     *    Mail: [\n     *      { name: 'from', type: 'Person' },\n     *      { name: 'to', type: 'Person' },\n     *      { name: 'contents', type: 'string' }\n     *    ],\n     *  },\n     *  primaryType: 'Mail',\n     *  domain: {\n     *    name: 'Ether Mail',\n     *    version: '1',\n     *    chainId: 1,\n     *    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n     *  },\n     *  message: {\n     *    from: {\n     *      name: 'Cow',\n     *      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n     *    },\n     *    to: {\n     *      name: 'Bob',\n     *      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n     *    },\n     *    contents: 'Hello, Bob!',\n     *  },\n     * };\n     * const signature = await provider.request({ method: \"eth_signTypedData_v4\", params: [account, typedData] });\n     * console.log(signature);\n     * ```\n     */\n    async eth_signTypedData_v4(address, typedData) {\n        const account = ethereum_address_1.Address.from(address).toString().toLowerCase();\n        const privateKey = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").unlockedAccounts.get(account);\n        if (privateKey == null) {\n            throw new Error(\"cannot sign data; no private key\");\n        }\n        if (typeof typedData === \"string\") {\n            throw new Error(\"cannot sign data; string sent, expected object\");\n        }\n        if (!typedData.types) {\n            throw new Error(\"cannot sign data; types missing\");\n        }\n        if (!typedData.types.EIP712Domain) {\n            throw new Error(\"cannot sign data; EIP712Domain definition missing\");\n        }\n        if (!typedData.domain) {\n            throw new Error(\"cannot sign data; domain missing\");\n        }\n        if (!typedData.primaryType) {\n            throw new Error(\"cannot sign data; primaryType missing\");\n        }\n        if (!typedData.message) {\n            throw new Error(\"cannot sign data; message missing\");\n        }\n        return (0, eth_sig_util_1.signTypedData_v4)(privateKey.toBuffer(), { data: typedData });\n    }\n    eth_subscribe(subscriptionName, options) {\n        const subscriptions = __classPrivateFieldGet(this, _EthereumApi_subscriptions, \"f\");\n        switch (subscriptionName) {\n            case \"newHeads\": {\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"block\", (block) => {\n                    const value = block;\n                    const header = value.header;\n                    const result = {\n                        logsBloom: header.logsBloom,\n                        miner: header.miner,\n                        difficulty: header.difficulty,\n                        totalDifficulty: header.totalDifficulty,\n                        extraData: header.extraData,\n                        gasLimit: header.gasLimit,\n                        gasUsed: header.gasUsed,\n                        hash: block.hash(),\n                        mixHash: block.header.mixHash,\n                        nonce: header.nonce,\n                        number: header.number,\n                        parentHash: header.parentHash,\n                        receiptsRoot: header.receiptsRoot,\n                        stateRoot: header.stateRoot,\n                        timestamp: header.timestamp,\n                        transactionsRoot: header.transactionsRoot,\n                        sha3Uncles: header.sha3Uncles\n                    };\n                    if (header.baseFeePerGas !== undefined) {\n                        result.baseFeePerGas = header.baseFeePerGas;\n                    }\n                    promiEvent.emit(\"message\", {\n                        type: \"eth_subscription\",\n                        data: {\n                            result,\n                            subscription: subscription.toString()\n                        }\n                    });\n                });\n                subscriptions.set(subscription.toString(), unsubscribe);\n                return promiEvent;\n            }\n            case \"logs\": {\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                const { addresses, topics } = options\n                    ? (0, filter_parsing_1.parseFilterDetails)(options)\n                    : { addresses: [], topics: [] };\n                const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"blockLogs\", (blockLogs) => {\n                    for (const log of blockLogs.filter(addresses, topics)) {\n                        promiEvent.emit(\"message\", {\n                            type: \"eth_subscription\",\n                            data: {\n                                result: log,\n                                subscription: subscription.toString()\n                            }\n                        });\n                    }\n                });\n                subscriptions.set(subscription.toString(), unsubscribe);\n                return promiEvent;\n            }\n            case \"newPendingTransactions\": {\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"pendingTransaction\", (transaction) => {\n                    const result = transaction.hash.toString();\n                    promiEvent.emit(\"message\", {\n                        type: \"eth_subscription\",\n                        data: {\n                            result,\n                            subscription: subscription.toString()\n                        }\n                    });\n                });\n                subscriptions.set(subscription.toString(), unsubscribe);\n                return promiEvent;\n            }\n            case \"syncing\": {\n                // ganache doesn't sync, so doing nothing is perfectly valid.\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                __classPrivateFieldGet(this, _EthereumApi_subscriptions, \"f\").set(subscription.toString(), () => { });\n                return promiEvent;\n            }\n            default:\n                throw new ethereum_utils_1.CodedError(`no \\\"${subscriptionName}\\\" subscription in eth namespace`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n        }\n    }\n    /**\n     * Cancel a subscription to a particular event. Returns a boolean indicating\n     * if the subscription was successfully cancelled.\n     *\n     * @param subscriptionId - The ID of the subscription to unsubscribe to.\n     * @returns `true` if subscription was cancelled successfully, otherwise `false`.\n     * @example\n     * ```javascript\n     * const subscriptionId = await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const result = await provider.request({ method: \"eth_unsubscribe\", params: [subscriptionId] });\n     * console.log(result);\n     * ```\n     */\n    async eth_unsubscribe(subscriptionId) {\n        const subscriptions = __classPrivateFieldGet(this, _EthereumApi_subscriptions, \"f\");\n        const unsubscribe = subscriptions.get(subscriptionId);\n        if (unsubscribe) {\n            subscriptions.delete(subscriptionId);\n            unsubscribe();\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * Creates a filter in the node, to notify when a new block arrives. To check\n     * if the state has changed, call `eth_getFilterChanges`.\n     *\n     * @returns A filter id.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newBlockFilter\", params: [] });\n     * console.log(filterId);\n     * ```\n     */\n    async eth_newBlockFilter() {\n        const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"block\", (block) => {\n            value.updates.push(block.hash());\n        });\n        const value = {\n            updates: [],\n            unsubscribe,\n            filter: null,\n            type: ethereum_utils_1.FilterTypes.block\n        };\n        const filterId = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n        __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").set(filterId.toString(), value);\n        return filterId;\n    }\n    /**\n     * Creates a filter in the node, to notify when new pending transactions\n     * arrive. To check if the state has changed, call `eth_getFilterChanges`.\n     *\n     * @returns A filter id.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newPendingTransactionFilter\", params: [] });\n     * console.log(filterId);\n     * ```\n     */\n    async eth_newPendingTransactionFilter() {\n        const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"pendingTransaction\", (transaction) => {\n            value.updates.push(transaction.hash);\n        });\n        const value = {\n            updates: [],\n            unsubscribe,\n            filter: null,\n            type: ethereum_utils_1.FilterTypes.pendingTransaction\n        };\n        const filterId = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n        __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").set(filterId.toString(), value);\n        return filterId;\n    }\n    /**\n     * Creates a filter object, based on filter options, to notify when the state\n     * changes (logs). To check if the state has changed, call\n     * `eth_getFilterChanges`.\n     *\n     * If the from `fromBlock` or `toBlock` option are equal to \"latest\" the\n     * filter continually append logs for whatever block is seen as latest at the\n     * time the block was mined, not just for the block that was \"latest\" when the\n     * filter was created.\n     *\n     * ### A note on specifying topic filters:\n     * Topics are order-dependent. A transaction with a log with topics [A, B]\n     * will be matched by the following topic filters:\n     *  * `[]` “anything”\n     *  * `[A]` “A in first position (and anything after)”\n     *  * `[null, B]` “anything in first position AND B in second position (and\n     * anything after)”\n     *  * `[A, B]` “A in first position AND B in second position (and anything\n     * after)”\n     *  * `[[A, B], [A, B]]` “(A OR B) in first position AND (A OR B) in second\n     * position (and anything after)”\n     *\n     * Filter options:\n     * * `fromBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `toBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `address`: `DATA | Array` (optional) - Contract address or a list of addresses from which the logs should originate.\n     * * `topics`: `Array of DATA` (optional) - Array of 32 Bytes `DATA` topics. Topics are order-dependent. Each topic can also\n     * be an array of `DATA` with \"or\" options.\n     *\n     * @param filter - The filter options as seen in source.\n     *\n     * @returns A filter id.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newFilter\", params: [] });\n     * console.log(filterId);\n     * ```\n     */\n    async eth_newFilter(filter) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        if (filter == null)\n            filter = {};\n        const { addresses, topics } = (0, filter_parsing_1.parseFilterDetails)(filter || {});\n        const unsubscribe = blockchain.on(\"blockLogs\", (blockLogs) => {\n            const blockNumber = blockLogs.blockNumber;\n            // every time we get a blockLogs message we re-check what the filter's\n            // range is. We do this because \"latest\" isn't the latest block at the\n            // time the filter was set up, rather it is the actual latest *mined*\n            // block (that is: not pending)\n            const { fromBlock, toBlock } = (0, filter_parsing_1.parseFilterRange)(filter, blockchain);\n            if (fromBlock <= blockNumber && toBlock >= blockNumber) {\n                value.updates.push(...blockLogs.filter(addresses, topics));\n            }\n        });\n        const value = { updates: [], unsubscribe, filter, type: ethereum_utils_1.FilterTypes.log };\n        const filterId = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n        __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").set(filterId.toString(), value);\n        return filterId;\n    }\n    /**\n     * Polling method for a filter, which returns an array of logs, block hashes,\n     * or transaction hashes, depending on the filter type, which occurred since\n     * last poll.\n     *\n     * @param filterId - The filter id.\n     * @returns An array of logs, block hashes, or transaction hashes, depending\n     * on the filter type, which occurred since last poll.\n     *\n     * For filters created with `eth_newBlockFilter` the return are block hashes (`DATA`, 32 Bytes).\n     *\n     * For filters created with `eth_newPendingTransactionFilter` the return are transaction hashes (`DATA`, 32 Bytes).\n     *\n     * For filters created with `eth_newFilter` the return are log objects with the following parameters:\n     * * `removed`: `TAG` - `true` when the log was removed, `false` if its a valid log.\n     * * `logIndex`: `QUANTITY` - Integer of the log index position in the block. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - Integer of the transactions index position. `null` when pending.\n     * * `transactionHash`: `DATA`, 32 Bytes - Hash of the transaction where the log was. `null` when pending.\n     * * `blockHash`: `DATA`, 32 Bytes - Hash of the block where the log was. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The block number where the log was in. `null` when pending.\n     * * `address`: `DATA`, 20 Bytes - The address from which the log originated.\n     * * `data`: `DATA` - Contains one or more 32 Bytes non-indexed arguments of the log.\n     * * `topics`: `Array of DATA` - Array of 0 to 4 32 Bytes `DATA` of indexed log arguments.\n     *\n     * @example\n     * ```javascript\n     * // Logs.sol\n     * // // SPDX-License-Identifier: MIT\n     * // pragma solidity ^0.7.4;\n     * // contract Logs {\n     * //   event Event(uint256 indexed first, uint256 indexed second);\n     * //   constructor() {\n     * //     emit Event(1, 2);\n     * //   }\n     * //\n     * //   function logNTimes(uint8 n) public {\n     * //     for (uint8 i = 0; i < n; i++) {\n     * //       emit Event(i, i);\n     * //     }\n     * //   }\n     * // }\n     *\n     * const logsContract = \"0x608060405234801561001057600080fd5b50600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a360e58061004f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635e19e69f14602d575b600080fd5b605960048036036020811015604157600080fd5b81019080803560ff169060200190929190505050605b565b005b60005b8160ff168160ff16101560ab578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a38080600101915050605e565b505056fea26469706673582212201af9c13c7b00e2b628c1258d45f9f62d2aad8cd32fc32fd9515d8ad1e792679064736f6c63430007040033\";\n     * const [from] = await provider.send(\"eth_accounts\");\n     * const filterId = await provider.send(\"eth_newFilter\");\n     *\n     * const subscriptionId = await provider.send(\"eth_subscribe\", [\"newHeads\"]);\n     * await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n     * await provider.once(\"message\");\n     *\n     * const changes = await provider.request({ method: \"eth_getFilterChanges\", params: [filterId] });\n     * console.log(changes);\n     *\n     * await provider.send(\"eth_unsubscribe\", [subscriptionId]);\n     * ```\n     */\n    async eth_getFilterChanges(filterId) {\n        const filter = __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").get(utils_1.Quantity.toString(filterId));\n        if (filter) {\n            const updates = filter.updates;\n            filter.updates = [];\n            return updates;\n        }\n        else {\n            throw new Error(\"filter not found\");\n        }\n    }\n    /**\n     * Uninstalls a filter with given id. Should always be called when watch is\n     * no longer needed.\n     *\n     * @param filterId - The filter id.\n     * @returns `true` if the filter was successfully uninstalled, otherwise\n     * `false`.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newFilter\", params: [] });\n     * const result = await provider.request({ method: \"eth_uninstallFilter\", params: [filterId] });\n     * console.log(result);\n     * ```\n     */\n    async eth_uninstallFilter(filterId) {\n        const id = utils_1.Quantity.toString(filterId);\n        const filter = __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").get(id);\n        if (!filter)\n            return false;\n        filter.unsubscribe();\n        return __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").delete(id);\n    }\n    /**\n     * Returns an array of all logs matching filter with given id.\n     *\n     * @param filterId - The filter id.\n     * @returns Array of log objects, or an empty array.\n     * @example\n     * ```javascript\n     * // Logs.sol\n     * // // SPDX-License-Identifier: MIT\n     * // pragma solidity ^0.7.4;\n     * // contract Logs {\n     * //   event Event(uint256 indexed first, uint256 indexed second);\n     * //   constructor() {\n     * //     emit Event(1, 2);\n     * //   }\n     * //\n     * //   function logNTimes(uint8 n) public {\n     * //     for (uint8 i = 0; i < n; i++) {\n     * //       emit Event(i, i);\n     * //     }\n     * //   }\n     * // }\n     *\n     * const logsContract = \"0x608060405234801561001057600080fd5b50600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a360e58061004f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635e19e69f14602d575b600080fd5b605960048036036020811015604157600080fd5b81019080803560ff169060200190929190505050605b565b005b60005b8160ff168160ff16101560ab578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a38080600101915050605e565b505056fea26469706673582212201af9c13c7b00e2b628c1258d45f9f62d2aad8cd32fc32fd9515d8ad1e792679064736f6c63430007040033\";\n     * const [from] = await provider.send(\"eth_accounts\");\n     * const filterId = await provider.send(\"eth_newFilter\");\n     *\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"]);\n     * await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n     * await provider.once(\"message\");\n     *\n     * const logs = await provider.request({ method: \"eth_getFilterLogs\", params: [filterId] });\n     * console.log(logs);\n     * ```\n     */\n    async eth_getFilterLogs(filterId) {\n        const filter = __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").get(utils_1.Quantity.toString(filterId));\n        if (filter && filter.type === ethereum_utils_1.FilterTypes.log) {\n            return this.eth_getLogs(filter.filter);\n        }\n        else {\n            throw new Error(\"filter not found\");\n        }\n    }\n    /**\n     * Returns an array of all logs matching a given filter object.\n     *\n     * Filter options:\n     * * `fromBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `toBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `address`: `DATA | Array` (optional) - Contract address or a list of addresses from which the logs should originate.\n     * * `topics`: `Array of DATA` (optional) - Array of 32 Bytes `DATA` topics. Topics are order-dependent. Each topic can also\n     * be an array of `DATA` with \"or\" options.\n     * * `blockHash`: `DATA`, 32 Bytes (optional) - Hash of the block to restrict logs from. If `blockHash` is present,\n     * then neither `fromBlock` or `toBlock` are allowed.\n     *\n     * @param filter - The filter options as seen in source.\n     * @returns Array of log objects, or an empty array.\n     * @example\n     * ```javascript\n     * // Logs.sol\n     * // // SPDX-License-Identifier: MIT\n     * // pragma solidity ^0.7.4;\n     * // contract Logs {\n     * //   event Event(uint256 indexed first, uint256 indexed second);\n     * //   constructor() {\n     * //     emit Event(1, 2);\n     * //   }\n     * //\n     * //   function logNTimes(uint8 n) public {\n     * //     for (uint8 i = 0; i < n; i++) {\n     * //       emit Event(i, i);\n     * //     }\n     * //   }\n     * // }\n     *\n     * const logsContract = \"0x608060405234801561001057600080fd5b50600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a360e58061004f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635e19e69f14602d575b600080fd5b605960048036036020811015604157600080fd5b81019080803560ff169060200190929190505050605b565b005b60005b8160ff168160ff16101560ab578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a38080600101915050605e565b505056fea26469706673582212201af9c13c7b00e2b628c1258d45f9f62d2aad8cd32fc32fd9515d8ad1e792679064736f6c63430007040033\";\n     * const [from] = await provider.send(\"eth_accounts\");\n     *\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"]);\n     * const txHash = await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n     * await provider.once(\"message\");\n     *\n     * const { contractAddress } = await provider.send(\"eth_getTransactionReceipt\", [txHash] );\n     *\n     * const logs = await provider.request({ method: \"eth_getLogs\", params: [{ address: contractAddress }] });\n     * console.log(logs);\n     * ```\n     */\n    async eth_getLogs(filter) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blockLogs.getLogs(filter);\n    }\n    /**\n     * Returns the number of transactions sent from an address.\n     *\n     * @param address - `DATA`, 20 Bytes - The address to get number of transactions sent from\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * @returns Number of transactions sent from this address.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * const txCount = await provider.request({ method: \"eth_getTransactionCount\", params: [ from, \"latest\" ] });\n     * console.log(txCount);\n     * ```\n     */\n    async eth_getTransactionCount(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").accounts.getNonce(ethereum_address_1.Address.from(address), blockNumber);\n    }\n    /**\n     * Executes a new message call immediately without creating a transaction on the block chain.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * State Override object - An address-to-state mapping, where each entry specifies some\n     * state to be ephemerally overridden prior to executing the call. Each address maps to an\n     * object containing:\n     * * `balance`: `QUANTITY` (optional) - The balance to set for the account before executing the call.\n     * * `nonce`: `QUANTITY` (optional) - The nonce to set for the account before executing the call.\n     * * `code`: `DATA` (optional) - The EVM bytecode to set for the account before executing the call.\n     * * `state`: `OBJECT` (optional*) - Key-value mapping to override *all* slots in the account storage before executing the call.\n     * * `stateDiff`: `OBJECT` (optional*) - Key-value mapping to override *individual* slots in the account storage before executing the call.\n     * * *Note - `state` and `stateDiff` fields are mutually exclusive.\n     * @param transaction - The transaction call object as seen in source.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     * @param overrides - State overrides to apply during the simulation.\n     *\n     * @returns The return value of executed contract.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const txObj = { from, gas: \"0x5b8d80\", gasPrice: \"0x1dfd14000\", value:\"0x0\", data: simpleSol };\n     * const slot = \"0x0000000000000000000000000000000000000000000000000000000000000005\"\n     * const overrides = { [from]: { balance: \"0x3e8\", \"nonce: \"0x5\", code: \"0xbaddad42\", stateDiff: { [slot]: \"0xbaddad42\"}}}\n     * const result = await provider.request({ method: \"eth_call\", params: [txObj, \"latest\", overrides] });\n     * console.log(result);\n     * ```\n     */\n    async eth_call(transaction, blockNumber = ethereum_utils_1.Tag.latest, overrides = {}) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const common = blockchain.common;\n        const blocks = blockchain.blocks;\n        const parentBlock = await blocks.get(blockNumber);\n        const parentHeader = parentBlock.header;\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        let gas;\n        if (typeof transaction.gasLimit === \"undefined\") {\n            if (typeof transaction.gas !== \"undefined\") {\n                gas = utils_1.Quantity.from(transaction.gas);\n            }\n            else {\n                // eth_call isn't subject to regular transaction gas limits by default\n                gas = options.miner.callGasLimit;\n            }\n        }\n        else {\n            gas = utils_1.Quantity.from(transaction.gasLimit);\n        }\n        let data;\n        if (typeof transaction.data === \"undefined\") {\n            if (typeof transaction.input !== \"undefined\") {\n                data = utils_1.Data.from(transaction.input);\n            }\n        }\n        else {\n            data = utils_1.Data.from(transaction.data);\n        }\n        // eth_call doesn't validate that the transaction has a sufficient\n        // \"effectiveGasPrice\". however, if `maxPriorityFeePerGas` or\n        // `maxFeePerGas` values are set, the baseFeePerGas is used to calculate\n        // the effectiveGasPrice, which is used to calculate tx costs/refunds.\n        const baseFeePerGasBigInt = parentBlock.header.baseFeePerGas\n            ? parentBlock.header.baseFeePerGas.toBigInt()\n            : undefined;\n        let gasPrice;\n        const hasGasPrice = typeof transaction.gasPrice !== \"undefined\";\n        // if the original block didn't have a `baseFeePerGas` (baseFeePerGasBigInt\n        // is undefined) then EIP-1559 was not active on that block and we can't use\n        // type 2 fee values (as they rely on the baseFee)\n        if (!common.isActivatedEIP(1559) || baseFeePerGasBigInt === undefined) {\n            gasPrice = utils_1.Quantity.from(hasGasPrice ? 0 : transaction.gasPrice);\n        }\n        else {\n            const hasMaxFeePerGas = typeof transaction.maxFeePerGas !== \"undefined\";\n            const hasMaxPriorityFeePerGas = typeof transaction.maxPriorityFeePerGas !== \"undefined\";\n            if (hasGasPrice && (hasMaxFeePerGas || hasMaxPriorityFeePerGas)) {\n                throw new Error(\"both gasPrice and (maxFeePerGas or maxPriorityFeePerGas) specified\");\n            }\n            // User specified 1559 gas fields (or none), use those\n            let maxFeePerGas = 0n;\n            let maxPriorityFeePerGas = 0n;\n            if (hasMaxFeePerGas) {\n                maxFeePerGas = BigInt(transaction.maxFeePerGas);\n            }\n            if (hasMaxPriorityFeePerGas) {\n                maxPriorityFeePerGas = BigInt(transaction.maxPriorityFeePerGas);\n            }\n            if (maxPriorityFeePerGas > 0 || maxFeePerGas > 0) {\n                const a = maxFeePerGas - baseFeePerGasBigInt;\n                const tip = a < maxPriorityFeePerGas ? a : maxPriorityFeePerGas;\n                gasPrice = utils_1.Quantity.from(baseFeePerGasBigInt + tip);\n            }\n            else {\n                gasPrice = utils_1.Quantity.from(0);\n            }\n        }\n        const block = new ethereum_block_1.RuntimeBlock(parentHeader.number, parentHeader.parentHash, blockchain.coinbase, gas.toBuffer(), parentHeader.gasUsed.toBuffer(), parentHeader.timestamp, options.miner.difficulty, parentHeader.totalDifficulty, baseFeePerGasBigInt);\n        const simulatedTransaction = {\n            gas,\n            // if we don't have a from address, our caller sut be the configured coinbase address\n            from: transaction.from == null\n                ? blockchain.coinbase\n                : ethereum_address_1.Address.from(transaction.from),\n            to: transaction.to == null ? null : ethereum_address_1.Address.from(transaction.to),\n            gasPrice,\n            value: transaction.value == null ? null : utils_1.Quantity.from(transaction.value),\n            data,\n            block\n        };\n        return blockchain.simulateTransaction(simulatedTransaction, parentBlock, overrides);\n    }\n    //#endregion\n    //#region debug\n    /**\n     * Attempt to run the transaction in the exact same manner as it was executed\n     * on the network. It will replay any transaction that may have been executed\n     * prior to this one before it will finally attempt to execute the transaction\n     * that corresponds to the given hash.\n     *\n     * In addition to the hash of the transaction you may give it a secondary\n     * optional argument, which specifies the options for this specific call.\n     * The possible options are:\n     *\n     * * `disableStorage`: \\{boolean\\} Setting this to `true` will disable storage capture (default = `false`).\n     * * `disableMemory`: \\{boolean\\} Setting this to `true` will disable memory capture (default = `false`).\n     * * `disableStack`: \\{boolean\\} Setting this to `true` will disable stack capture (default = `false`).\n     *\n     * @param transactionHash - Hash of the transaction to trace.\n     * @param options - See options in source.\n     * @returns Returns the `gas`, `structLogs`, and `returnValue` for the traced transaction.\n     *\n     * The `structLogs` are an array of logs, which contains the following fields:\n     * * `depth`: The execution depth.\n     * * `error`: Information about an error, if one occurred.\n     * * `gas`: The number of gas remaining.\n     * * `gasCost`: The cost of gas in wei.\n     * * `memory`: An array containing the contract's memory data.\n     * * `op`: The current opcode.\n     * * `pc`: The current program counter.\n     * * `stack`: The EVM execution stack.\n     * * `storage`: An object containing the contract's storage data.\n     *\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     * const transactionTrace = await provider.request({ method: \"debug_traceTransaction\", params: [txHash] });\n     * console.log(transactionTrace);\n     * ```\n     */\n    async debug_traceTransaction(transactionHash, options) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").traceTransaction(transactionHash, options || {});\n    }\n    // TODO: example doesn't return correct value\n    /**\n     * Attempts to replay the transaction as it was executed on the network and\n     * return storage data given a starting key and max number of entries to return.\n     *\n     * @param blockHash - Hash of a block.\n     * @param transactionIndex - Integer of the transaction index position.\n     * @param contractAddress - Address of the contract.\n     * @param startKey - Hash of the start key for grabbing storage entries.\n     * @param maxResult - Integer of maximum number of storage entries to return.\n     * @returns Returns a storage object with the keys being keccak-256 hashes of the storage keys,\n     * and the values being the raw, unhashed key and value for that specific storage slot. Also\n     * returns a next key which is the keccak-256 hash of the next key in storage for continuous downloading.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity ^0.7.4;\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x6080604052600560008190555060858060196000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80633fa4f24514602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000548156fea26469706673582212200897f7766689bf7a145227297912838b19bcad29039258a293be78e3bf58e20264736f6c63430007040033\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const initialTxHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * const {contractAddress} = await provider.request({ method: \"eth_getTransactionReceipt\", params: [initialTxHash] });\n     *\n     * // set value to 19\n     * const data = \"0x552410770000000000000000000000000000000000000000000000000000000000000019\";\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to: contractAddress, data }] });\n     * await provider.once(\"message\"); // Note: `await provider.once` is non-standard\n     *\n     * const { blockHash, transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const storage = await provider.request({ method: \"debug_storageRangeAt\", params: [blockHash, transactionIndex, contractAddress, \"0x01\", 1] });\n     * console.log(storage);\n     * ```\n     */\n    async debug_storageRangeAt(blockHash, transactionIndex, contractAddress, startKey, maxResult) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").storageRangeAt(blockHash, utils_1.Quantity.toNumber(transactionIndex), contractAddress, startKey, utils_1.Quantity.toNumber(maxResult));\n    }\n    //#endregion\n    //#region personal\n    /**\n     * Returns all the Ethereum account addresses of all keys that have been\n     * added.\n     * @returns The Ethereum account addresses of all keys that have been added.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"personal_listAccounts\"));\n     * ```\n     */\n    async personal_listAccounts() {\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").addresses;\n    }\n    // TODO: example doesn't return correct value\n    /**\n     * Generates a new account with private key. Returns the address of the new\n     * account.\n     * @param passphrase - The passphrase to encrypt the private key with.\n     * @returns The new account's address.\n     * @example\n     * ```javascript\n     * const passphrase = \"passphrase\";\n     * const address = await provider.send(\"personal_newAccount\", [passphrase] );\n     * console.log(address);\n     * ```\n     */\n    async personal_newAccount(passphrase) {\n        if (typeof passphrase !== \"string\") {\n            throw new Error(\"missing value for required argument `passphrase`\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const newAccount = wallet.createRandomAccount();\n        const address = newAccount.address;\n        const strAddress = address.toString();\n        await wallet.addToKeyFile(address, newAccount.privateKey, passphrase, true);\n        wallet.addresses.push(strAddress);\n        wallet.knownAccounts.add(strAddress);\n        return newAccount.address;\n    }\n    /**\n     * Imports the given unencrypted private key (hex string) into the key store, encrypting it with the passphrase.\n     *\n     * @param rawKey - The raw, unencrypted private key to import.\n     * @param passphrase - The passphrase to encrypt with.\n     * @returns Returns the address of the new account.\n     * @example\n     * ```javascript\n     * const rawKey = \"0x0123456789012345678901234567890123456789012345678901234567890123\";\n     * const passphrase = \"passphrase\";\n     *\n     * const address = await provider.send(\"personal_importRawKey\",[rawKey, passphrase] );\n     * console.log(address);\n     * ```\n     */\n    async personal_importRawKey(rawKey, passphrase) {\n        if (typeof passphrase !== \"string\") {\n            throw new Error(\"missing value for required argument `passphrase`\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const newAccount = wallet_1.default.createAccountFromPrivateKey(utils_1.Data.from(rawKey));\n        const address = newAccount.address;\n        const strAddress = address.toString();\n        await wallet.addToKeyFile(address, newAccount.privateKey, passphrase, true);\n        wallet.addresses.push(strAddress);\n        wallet.knownAccounts.add(strAddress);\n        return newAccount.address;\n    }\n    /**\n     * Locks the account. The account can no longer be used to send transactions.\n     * @param address - The account address to be locked.\n     * @returns Returns `true` if the account was locked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const [account] = await provider.send(\"personal_listAccounts\");\n     * const isLocked = await provider.send(\"personal_lockAccount\", [account] );\n     * console.log(isLocked);\n     * ```\n     */\n    async personal_lockAccount(address) {\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").lockAccount(address.toLowerCase());\n    }\n    // TODO: example doesn't return correct value\n    /**\n     * Unlocks the account for use.\n     *\n     * The unencrypted key will be held in memory until the unlock duration\n     * expires. The unlock duration defaults to 300 seconds. An explicit duration\n     * of zero seconds unlocks the key until geth exits.\n     *\n     * The account can be used with `eth_sign` and `eth_sendTransaction` while it is\n     * unlocked.\n     * @param address - 20 Bytes - The address of the account to unlock.\n     * @param passphrase - Passphrase to unlock the account.\n     * @param duration - (default: 300) Duration in seconds how long the account\n     * should remain unlocked for. Set to 0 to disable automatic locking.\n     * @returns `true` if it worked. Throws an error or returns `false` if it did not.\n     * @example\n     * ```javascript\n     * // generate an account\n     * const passphrase = \"passphrase\";\n     * const newAccount = await provider.send(\"personal_newAccount\", [passphrase] );\n     * const isUnlocked = await provider.send(\"personal_unlockAccount\", [newAccount, passphrase] );\n     * console.log(isUnlocked);\n     * ```\n     */\n    async personal_unlockAccount(address, passphrase, duration = 300) {\n        const addy = new ethereum_address_1.Address(address);\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").unlockAccount(addy, passphrase, duration);\n    }\n    /**\n     * Validate the given passphrase and submit transaction.\n     *\n     * The transaction is the same argument as for `eth_sendTransaction` and\n     * contains the from address. If the passphrase can be used to decrypt the\n     * private key belonging to `tx.from` the transaction is verified, signed and\n     * send onto the network. The account is not unlocked globally in the node\n     * and cannot be used in other RPC calls.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param txData - The transaction call object as seen in source.\n     * @param passphrase - The passphrase to decrpyt the private key belonging to `tx.from`.\n     * @returns The transaction hash or if unsuccessful an error.\n     * @example\n     * ```javascript\n     * const passphrase = \"passphrase\";\n     * const newAccount = await provider.send(\"personal_newAccount\", [passphrase] );\n     * const [to] = await provider.send(\"personal_listAccounts\");\n     *\n     * // use account and passphrase to send the transaction\n     * const txHash = await provider.send(\"personal_sendTransaction\", [{ from: newAccount, to, gasLimit: \"0x5b8d80\" }, passphrase] );\n     * console.log(txHash);\n     * ```\n     */\n    async personal_sendTransaction(transaction, passphrase) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        const from = tx.from;\n        if (from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const secretKey = await wallet.getFromKeyFile(tx.from, passphrase);\n        await autofillDefaultTransactionValues(tx, this.eth_estimateGas.bind(this), this.eth_maxPriorityFeePerGas, transaction, blockchain, __classPrivateFieldGet(this, _EthereumApi_options, \"f\"));\n        return blockchain.queueTransaction(tx, utils_1.Data.from(secretKey));\n    }\n    /**\n     * Validates the given passphrase and signs a transaction that can be\n     * submitted to the network at a later time using `eth_sendRawTransaction`.\n     *\n     * The transaction is the same argument as for `eth_signTransaction` and\n     * contains the from address. If the passphrase can be used to decrypt the\n     * private key belonging to `tx.from` the transaction is verified and signed.\n     * The account is not unlocked globally in the node and cannot be used in other RPC calls.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @returns The raw, signed transaction.\n     * @example\n     * ```javascript\n     * const [to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const passphrase = \"passphrase\";\n     * const from = await provider.send(\"personal_newAccount\", [passphrase] );\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const signedTx = await provider.request({ method: \"personal_signTransaction\", params: [{ from, to }, passphrase] });\n     * console.log(signedTx)\n     * ```\n     */\n    async personal_signTransaction(transaction, passphrase) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        if (tx.from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const secretKey = await wallet.getFromKeyFile(tx.from, passphrase);\n        tx.signAndHash(secretKey);\n        return utils_1.Data.from(tx.serialized);\n    }\n    //#endregion\n    //#region rpc\n    /**\n     * Returns object of RPC modules.\n     * @returns RPC modules.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"rpc_modules\"));\n     * ```\n     */\n    async rpc_modules() {\n        return RPC_MODULES;\n    }\n    //#endregion\n    //#region shh\n    /**\n     * Creates new whisper identity in the client.\n     *\n     * @returns - The address of the new identity.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_newIdentity\"));\n     * ```\n     */\n    async shh_newIdentity() {\n        return \"0x00\";\n    }\n    /**\n     * Checks if the client hold the private keys for a given identity.\n     *\n     * @param address - The identity address to check.\n     * @returns Returns `true` if the client holds the private key for that identity, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_hasIdentity\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_hasIdentity(address) {\n        return false;\n    }\n    /**\n     * Creates a new group.\n     *\n     * @returns The address of the new group.\n     */\n    async shh_newGroup() {\n        return \"0x00\";\n    }\n    /**\n     * Adds a whisper identity to the group.\n     *\n     * @param address - The identity address to add to a group.\n     * @returns `true` if the identity was successfully added to the group, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_addToGroup\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_addToGroup(address) {\n        return false;\n    }\n    /**\n     * Creates filter to notify, when client receives whisper message matching the filter options.\n     *\n     * @param to - (optional) Identity of the receiver. When present it will try to decrypt any incoming message\n     *  if the client holds the private key to this identity.\n     * @param topics - Array of topics which the incoming message's topics should match.\n     * @returns Returns `true` if the identity was successfully added to the group, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_newFilter\", [\"0x0\", []] ));\n     * ```\n     */\n    async shh_newFilter(to, topics) {\n        return false;\n    }\n    /**\n     * Uninstalls a filter with given id. Should always be called when watch is no longer needed.\n     * Additionally filters timeout when they aren't requested with `shh_getFilterChanges` for a period of time.\n     *\n     * @param id - The filter id. Ex: \"0x7\"\n     * @returns `true` if the filter was successfully uninstalled, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_uninstallFilter\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_uninstallFilter(id) {\n        return false;\n    }\n    /**\n     * Polling method for whisper filters. Returns new messages since the last call of this method.\n     *\n     * @param id - The filter id. Ex: \"0x7\"\n     * @returns More Info: https://github.com/ethereum/wiki/wiki/JSON-RPC#shh_getfilterchanges\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_getFilterChanges\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_getFilterChanges(id) {\n        return [];\n    }\n    /**\n     * Get all messages matching a filter. Unlike shh_getFilterChanges this returns all messages.\n     *\n     * @param id - The filter id. Ex: \"0x7\"\n     * @returns See: `shh_getFilterChanges`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_getMessages\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_getMessages(id) {\n        return false;\n    }\n    /**\n     * Creates a whisper message and injects it into the network for distribution.\n     *\n     * @param postData -\n     * @returns Returns `true` if the message was sent, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_post\", [{}] ));\n     * ```\n     */\n    async shh_post(postData) {\n        return false;\n    }\n    /**\n     * Returns the current whisper protocol version.\n     *\n     * @returns The current whisper protocol version.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_version\"));\n     * ```\n     */\n    async shh_version() {\n        return \"2\";\n    }\n    //#endregion\n    //#region txpool\n    /**\n     * Returns the current content of the transaction pool.\n     *\n     * @returns The transactions currently pending or queued in the transaction pool.\n     * @example\n     * ```javascript\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const pendingTx = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", nonce:\"0x0\" }] });\n     * const queuedTx = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", nonce:\"0x2\" }] });\n     * const pool = await provider.send(\"txpool_content\");\n     * console.log(pool);\n     * ```\n     */\n    async txpool_content() {\n        const { transactions, common } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const { transactionPool: { executables, origins } } = transactions;\n        const processMap = (map) => {\n            let res = {};\n            for (let [_, { array, length }] of map) {\n                for (let i = 0; i < length; ++i) {\n                    const transaction = array[i];\n                    const from = transaction.from.toString();\n                    if (res[from] === undefined) {\n                        res[from] = {};\n                    }\n                    // The nonce keys are actual decimal numbers (as strings) and not\n                    // hex literals (based on what geth returns).\n                    const nonce = transaction.nonce.toBigInt().toString();\n                    res[from][nonce] = transaction.toJSON(common);\n                }\n            }\n            return res;\n        };\n        return {\n            pending: processMap(executables.pending),\n            queued: processMap(origins)\n        };\n    }\n}\n_EthereumApi_getId = new WeakMap(), _EthereumApi_filters = new WeakMap(), _EthereumApi_subscriptions = new WeakMap(), _EthereumApi_options = new WeakMap(), _EthereumApi_blockchain = new WeakMap(), _EthereumApi_wallet = new WeakMap();\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"db_putString\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"db_getString\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"db_putHex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"db_getHex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"bzz_hive\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"bzz_info\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"evm_mine\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"evm_setAccountNonce\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"evm_setAccountBalance\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"evm_setAccountCode\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"evm_setAccountStorageAt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"evm_increaseTime\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"evm_setTime\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"evm_revert\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"miner_start\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"miner_stop\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"miner_setGasPrice\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"miner_setEtherbase\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"miner_setExtra\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"web3_clientVersion\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"web3_sha3\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"net_version\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"net_listening\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"net_peerCount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_estimateGas\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_protocolVersion\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_syncing\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_coinbase\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getBlockByNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getBlockByHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getBlockTransactionCountByNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getBlockTransactionCountByHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_getCompilers\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getTransactionByBlockHashAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getTransactionByBlockNumberAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getUncleCountByBlockHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getUncleCountByBlockNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getUncleByBlockHashAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getUncleByBlockNumberAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getWork\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"eth_submitWork\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_submitHashrate\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_mining\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_hashrate\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_gasPrice\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_maxPriorityFeePerGas\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_accounts\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_blockNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_chainId\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getBalance\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getCode\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2, 3)\n], EthereumApi.prototype, \"eth_getStorageAt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getTransactionByHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getTransactionReceipt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_sendTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_signTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_sendRawTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_sign\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_signTypedData\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_signTypedData_v4\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_subscribe\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_unsubscribe\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_newBlockFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_newPendingTransactionFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"eth_newFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getFilterChanges\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_uninstallFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getFilterLogs\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getLogs\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getTransactionCount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 3)\n], EthereumApi.prototype, \"eth_call\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"personal_listAccounts\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"personal_newAccount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"personal_importRawKey\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"personal_lockAccount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2, 3)\n], EthereumApi.prototype, \"personal_unlockAccount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"personal_sendTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"personal_signTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"rpc_modules\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"shh_newIdentity\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_hasIdentity\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"shh_newGroup\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_addToGroup\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"shh_newFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_uninstallFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_getFilterChanges\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_getMessages\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_post\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"shh_version\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"txpool_content\", null);\nexports.default = EthereumApi;\n//# sourceMappingURL=api.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Blockchain_state, _Blockchain_miner, _Blockchain_blockBeingSavedPromise, _Blockchain_timer, _Blockchain_emitStepEvent, _Blockchain_database, _Blockchain_options, _Blockchain_instamine, _Blockchain_saveNewBlock, _Blockchain_emitNewBlock, _Blockchain_getTransactionLogOutput, _Blockchain_handleNewBlockData, _Blockchain_readyNextBlock, _Blockchain_isPaused, _Blockchain_commitAccounts, _Blockchain_initializeGenesisBlock, _Blockchain_timeAdjustment, _Blockchain_adjustedTime, _Blockchain_deleteBlockData, _Blockchain_snapshots, _Blockchain_traceTransaction, _Blockchain_prepareNextBlock;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Status = void 0;\nconst os_1 = require(\"os\");\nconst miner_1 = __importStar(require(\"./miner/miner\"));\nconst database_1 = __importDefault(require(\"./database\"));\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst common_1 = __importDefault(require(\"@ethereumjs/common\"));\nconst vm_1 = __importDefault(require(\"@ethereumjs/vm\"));\nconst exceptions_1 = require(\"@ethereumjs/vm/dist/exceptions\");\nconst utils_1 = require(\"@ganache/utils\");\nconst account_manager_1 = __importDefault(require(\"./data-managers/account-manager\"));\nconst block_manager_1 = __importDefault(require(\"./data-managers/block-manager\"));\nconst blocklog_manager_1 = __importDefault(require(\"./data-managers/blocklog-manager\"));\nconst transaction_manager_1 = __importDefault(require(\"./data-managers/transaction-manager\"));\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst run_call_1 = require(\"./helpers/run-call\");\nconst state_manager_1 = require(\"./forking/state-manager\");\nconst index_1 = require(\"@ethereumjs/vm/dist/state/index\");\nconst trie_1 = require(\"./helpers/trie\");\nconst trie_2 = require(\"./forking/trie\");\nconst precompiles_1 = require(\"./helpers/precompiles\");\nconst transaction_receipt_manager_1 = __importDefault(require(\"./data-managers/transaction-receipt-manager\"));\nconst utils_2 = require(\"@ganache/utils\");\nconst provider_events_1 = require(\"./provider-events\");\nconst mcl_wasm_1 = __importDefault(require(\"mcl-wasm\"));\nconst mclInitPromise = mcl_wasm_1.default.init(mcl_wasm_1.default.BLS12_381).then(() => {\n    mcl_wasm_1.default.setMapToMode(mcl_wasm_1.default.IRTF); // set the right map mode; otherwise mapToG2 will return wrong values.\n    mcl_wasm_1.default.verifyOrderG1(true); // subgroup checks for G1\n    mcl_wasm_1.default.verifyOrderG2(true); // subgroup checks for G2\n});\nvar Status;\n(function (Status) {\n    // Flags\n    Status[Status[\"started\"] = 1] = \"started\";\n    Status[Status[\"starting\"] = 2] = \"starting\";\n    Status[Status[\"stopped\"] = 4] = \"stopped\";\n    Status[Status[\"stopping\"] = 8] = \"stopping\";\n    Status[Status[\"paused\"] = 16] = \"paused\"; // 0001 0000\n})(Status = exports.Status || (exports.Status = {}));\n/**\n * Sets the provided VM state manager's state root *without* first\n * checking for checkpoints or flushing the existing cache.\n *\n * Useful if you know the state manager is not in a checkpoint and its internal\n * cache is safe to discard.\n *\n * @param stateManager -\n * @param stateRoot -\n */\nfunction setStateRootSync(stateManager, stateRoot) {\n    stateManager._trie.root = stateRoot;\n    stateManager._cache.clear();\n    stateManager._storageTries = {};\n}\nfunction makeTrie(blockchain, db, root) {\n    if (blockchain.fallback) {\n        return new trie_2.ForkTrie(db, root ? root.toBuffer() : null, blockchain);\n    }\n    else {\n        return new trie_1.GanacheTrie(db, root ? root.toBuffer() : null, blockchain);\n    }\n}\nfunction createCommon(chainId, networkId, hardfork) {\n    const common = common_1.default.forCustomChain(\n    // if we were given a chain id that matches a real chain, use it\n    // NOTE: I don't think Common serves a purpose other than instructing the\n    // VM what hardfork is in use. But just incase things change in the future\n    // its configured \"more correctly\" here.\n    utils_1.KNOWN_CHAINIDS.has(chainId) ? chainId : 1, {\n        name: \"ganache\",\n        networkId: networkId,\n        chainId: chainId,\n        comment: \"Local test network\"\n    }, hardfork);\n    // the VM likes to listen to \"hardforkChanged\" events from common, but:\n    //  a) we don't currently support changing hardforks\n    //  b) it can cause `MaxListenersExceededWarning`.\n    // Since we don't need it we overwrite .on to make it be quiet.\n    common.on = () => { };\n    return common;\n}\nclass Blockchain extends emittery_1.default {\n    /**\n     * Initializes the underlying Database and handles synchronization between\n     * the API and the database.\n     *\n     * Emits a `ready` event once the database and all dependencies are fully\n     * initialized.\n     * @param options -\n     */\n    constructor(options, coinbase, fallback) {\n        super();\n        _Blockchain_state.set(this, Status.starting);\n        _Blockchain_miner.set(this, void 0);\n        _Blockchain_blockBeingSavedPromise.set(this, void 0);\n        /**\n         * When not instamining (blockTime > 0) this value holds the timeout timer.\n         */\n        _Blockchain_timer.set(this, null);\n        /**\n         * Because step events are expensive to create and emit, CPU-wise, we do it\n         * conditionally.\n         */\n        _Blockchain_emitStepEvent.set(this, false);\n        _Blockchain_database.set(this, void 0);\n        _Blockchain_options.set(this, void 0);\n        _Blockchain_instamine.set(this, void 0);\n        _Blockchain_saveNewBlock.set(this, ({ block, serialized, storageKeys, transactions }) => {\n            const { blocks } = this;\n            blocks.latest = block;\n            return __classPrivateFieldGet(this, _Blockchain_database, \"f\").batch(() => {\n                const blockHash = block.hash();\n                const blockHeader = block.header;\n                const blockNumberQ = blockHeader.number;\n                const blockNumber = blockNumberQ.toBuffer();\n                const blockLogs = ethereum_utils_1.BlockLogs.create(blockHash);\n                const timestamp = blockHeader.timestamp;\n                const timestampStr = new Date(timestamp.toNumber() * 1000).toString();\n                const logOutput = [];\n                transactions.forEach((tx, i) => {\n                    const hash = tx.hash.toBuffer();\n                    const index = utils_1.Quantity.from(i);\n                    // save transaction to the database\n                    const serialized = tx.serializeForDb(blockHash, blockNumberQ, index);\n                    this.transactions.set(hash, serialized);\n                    // save receipt to the database\n                    const receipt = tx.getReceipt();\n                    const encodedReceipt = receipt.serialize(true);\n                    this.transactionReceipts.set(hash, encodedReceipt);\n                    // collect block logs\n                    tx.getLogs().forEach(blockLogs.append.bind(blockLogs, index, tx.hash));\n                    // prepare log output\n                    logOutput.push(__classPrivateFieldGet(this, _Blockchain_getTransactionLogOutput, \"f\").call(this, hash, receipt, blockHeader.number, timestampStr, tx.execException));\n                });\n                // save storage keys to the database\n                storageKeys.forEach(value => {\n                    this.storageKeys.put(value.hashedKey, value.key);\n                });\n                blockLogs.blockNumber = blockHeader.number;\n                // save block logs to the database\n                this.blockLogs.set(blockNumber, blockLogs.serialize());\n                // save block to the database\n                blocks.putBlock(blockNumber, blockHash, serialized);\n                // update the \"latest\" index\n                blocks.updateLatestIndex(blockNumber);\n                // output to the log, if we have data to output\n                if (logOutput.length > 0)\n                    __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(logOutput.join(os_1.EOL));\n                return { block, blockLogs, transactions };\n            });\n        });\n        /**\n         * Emit the block now that everything has been fully saved to the database\n         */\n        _Blockchain_emitNewBlock.set(this, async (blockInfo) => {\n            const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n            const { block, blockLogs, transactions } = blockInfo;\n            transactions.forEach(transaction => {\n                transaction.finalize(\"confirmed\", transaction.execException);\n            });\n            if (options.miner.instamine === \"eager\") {\n                // in eager instamine mode we must delay the broadcast of new blocks\n                await new Promise(resolve => {\n                    // we delay emitting blocks and blockLogs because we need to allow for:\n                    // ```\n                    //  await provider.request({\"method\": \"eth_sendTransaction\"...)\n                    //  await provider.once(\"message\") // <- should work\n                    // ```\n                    // If we don't have this delay here the messages will be sent before\n                    // the call has a chance to listen to the event.\n                    setImmediate(async () => {\n                        // emit block logs first so filters can pick them up before\n                        // block listeners are notified\n                        await Promise.all([\n                            this.emit(\"blockLogs\", blockLogs),\n                            this.emit(\"block\", block)\n                        ]);\n                        resolve(void 0);\n                    });\n                });\n            }\n            else {\n                // emit block logs first so filters can pick them up before\n                // block listeners are notified\n                await Promise.all([\n                    this.emit(\"blockLogs\", blockLogs),\n                    this.emit(\"block\", block)\n                ]);\n            }\n            return blockInfo;\n        });\n        _Blockchain_getTransactionLogOutput.set(this, (hash, receipt, blockNumber, timestamp, error) => {\n            let str = `${os_1.EOL}  Transaction: ${utils_1.Data.from(hash)}${os_1.EOL}`;\n            const contractAddress = receipt.contractAddress;\n            if (contractAddress != null) {\n                str += `  Contract created: ${ethereum_address_1.Address.from(contractAddress)}${os_1.EOL}`;\n            }\n            str += `  Gas usage: ${utils_1.Quantity.toNumber(receipt.raw[1])}\n  Block number: ${blockNumber.toNumber()}\n  Block time: ${timestamp}${os_1.EOL}`;\n            if (error) {\n                str += `  Runtime error: ${error.data.message}${os_1.EOL}`;\n                if (error.data.reason) {\n                    str += `  Revert reason: ${error.data.reason}${os_1.EOL}`;\n                }\n            }\n            return str;\n        });\n        _Blockchain_handleNewBlockData.set(this, async (blockData) => {\n            __classPrivateFieldSet(this, _Blockchain_blockBeingSavedPromise, __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\").then(() => {\n                const saveBlockProm = __classPrivateFieldGet(this, _Blockchain_saveNewBlock, \"f\").call(this, blockData);\n                saveBlockProm.then(__classPrivateFieldGet(this, _Blockchain_emitNewBlock, \"f\"));\n                // blockBeingSavedPromise should await the block being _saved_, but doesn't\n                // need to await the block being emitted.\n                return saveBlockProm;\n            }), \"f\");\n            await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n        });\n        _Blockchain_readyNextBlock.set(this, (previousBlock, timestamp) => {\n            const previousHeader = previousBlock.header;\n            const previousNumber = previousHeader.number.toBigInt() || 0n;\n            const minerOptions = __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner;\n            if (timestamp == null) {\n                timestamp = __classPrivateFieldGet(this, _Blockchain_adjustedTime, \"f\").call(this, previousHeader.timestamp);\n            }\n            return new ethereum_block_1.RuntimeBlock(utils_1.Quantity.from(previousNumber + 1n), previousBlock.hash(), this.coinbase, minerOptions.blockGasLimit.toBuffer(), utils_2.BUFFER_ZERO, utils_1.Quantity.from(timestamp), minerOptions.difficulty, previousHeader.totalDifficulty, ethereum_block_1.Block.calcNextBaseFee(previousBlock));\n        });\n        this.isStarted = () => {\n            return __classPrivateFieldGet(this, _Blockchain_state, \"f\") === Status.started;\n        };\n        this.mine = async (maxTransactions, timestamp, onlyOneBlock = false) => {\n            const nextBlock = __classPrivateFieldGet(this, _Blockchain_readyNextBlock, \"f\").call(this, this.blocks.latest, timestamp);\n            const transactions = await __classPrivateFieldGet(this, _Blockchain_miner, \"f\").mine(nextBlock, maxTransactions, onlyOneBlock);\n            await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n            return {\n                transactions,\n                blockNumber: nextBlock.header.number.toArrayLike(Buffer)\n            };\n        };\n        _Blockchain_isPaused.set(this, () => {\n            return (__classPrivateFieldGet(this, _Blockchain_state, \"f\") & Status.paused) !== 0;\n        });\n        this.createVmFromStateTrie = async (stateTrie, allowUnlimitedContractSize, activatePrecompile, common) => {\n            const blocks = this.blocks;\n            // ethereumjs vm doesn't use the callback style anymore\n            const blockchain = {\n                getBlock: async (number) => {\n                    const block = await blocks.get(number.toBuffer()).catch(_ => null);\n                    return block ? { hash: () => block.hash().toBuffer() } : null;\n                }\n            };\n            // ethereumjs-vm wants to \"copy\" the blockchain when `vm.copy` is called.\n            blockchain.copy = () => {\n                return blockchain;\n            };\n            common = common || this.common;\n            const vm = new vm_1.default({\n                state: stateTrie,\n                activatePrecompiles: false,\n                common,\n                allowUnlimitedContractSize,\n                blockchain,\n                stateManager: this.fallback\n                    ? new state_manager_1.ForkStateManager({ common, trie: stateTrie })\n                    : new index_1.DefaultStateManager({ common, trie: stateTrie })\n            });\n            if (activatePrecompile) {\n                await (0, precompiles_1.activatePrecompiles)(vm.stateManager);\n                if (common.isActivatedEIP(2537)) {\n                    // BLS12-381 curve, not yet included in any supported hardforks\n                    // but probably will be in the Shanghai hardfork\n                    // TODO: remove above comment once Shanghai is supported!\n                    await mclInitPromise; // ensure that mcl is initialized!\n                }\n            }\n            // skip `vm.init`, since we don't use any of it\n            vm._isInitialized = true;\n            return vm;\n        };\n        _Blockchain_commitAccounts.set(this, (accounts) => {\n            return Promise.all(accounts.map(account => this.trie.put(account.address.toBuffer(), account.serialize())));\n        });\n        _Blockchain_initializeGenesisBlock.set(this, async (timestamp, blockGasLimit, initialAccounts) => {\n            if (this.fallback != null) {\n                const { block: fallbackBlock } = this.fallback;\n                const { miner: minerOptions } = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n                // commit accounts, but for forking.\n                const stateManager = this.vm.stateManager;\n                await stateManager.checkpoint();\n                initialAccounts.forEach(acc => {\n                    const a = { buf: acc.address.toBuffer() };\n                    stateManager._cache.put(a, acc);\n                    stateManager.touchAccount(a);\n                });\n                await stateManager.commit();\n                // create the genesis block\n                let baseFeePerGas;\n                if (this.common.isActivatedEIP(1559)) {\n                    if (fallbackBlock.header.baseFeePerGas === undefined) {\n                        baseFeePerGas = ethereum_block_1.Block.INITIAL_BASE_FEE_PER_GAS;\n                    }\n                    else {\n                        baseFeePerGas = fallbackBlock.header.baseFeePerGas.toBigInt();\n                    }\n                }\n                const genesis = new ethereum_block_1.RuntimeBlock(utils_1.Quantity.from(fallbackBlock.header.number.toBigInt() + 1n), fallbackBlock.hash(), this.coinbase, blockGasLimit.toBuffer(), utils_2.BUFFER_ZERO, utils_1.Quantity.from(timestamp), minerOptions.difficulty, fallbackBlock.header.totalDifficulty, baseFeePerGas);\n                // store the genesis block in the database\n                const { block, serialized } = genesis.finalize(ethereumjs_util_1.KECCAK256_RLP, ethereumjs_util_1.KECCAK256_RLP, utils_1.BUFFER_256_ZERO, this.trie.root, 0n, minerOptions.extraData, [], new Map());\n                const hash = block.hash();\n                return this.blocks\n                    .putBlock(block.header.number.toBuffer(), hash, serialized)\n                    .then(_ => ({\n                    block,\n                    blockLogs: ethereum_utils_1.BlockLogs.create(hash)\n                }));\n            }\n            await __classPrivateFieldGet(this, _Blockchain_commitAccounts, \"f\").call(this, initialAccounts);\n            // README: block `0` is weird in that a `0` _should_ be hashed as `[]`,\n            // instead of `[0]`, so we set it to `Quantity.Empty` instead of\n            // `Quantity.Zero` here. A few lines down in this function we swap\n            // this `Quantity.Empty` for `Quantity.Zero`. This is all so we don't\n            // have to have a \"treat empty as 0` check in every function that uses the\n            // \"latest\" block (which this genesis block will be for brief moment).\n            const rawBlockNumber = utils_1.Quantity.Empty;\n            // create the genesis block\n            const baseFeePerGas = this.common.isActivatedEIP(1559)\n                ? ethereum_block_1.Block.INITIAL_BASE_FEE_PER_GAS\n                : undefined;\n            const genesis = new ethereum_block_1.RuntimeBlock(rawBlockNumber, utils_1.Data.from(utils_1.BUFFER_32_ZERO), this.coinbase, blockGasLimit.toBuffer(), utils_2.BUFFER_ZERO, utils_1.Quantity.from(timestamp), __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.difficulty, utils_1.Quantity.Zero, // we start the totalDifficulty at 0\n            baseFeePerGas);\n            // store the genesis block in the database\n            const { block, serialized } = genesis.finalize(ethereumjs_util_1.KECCAK256_RLP, ethereumjs_util_1.KECCAK256_RLP, utils_1.BUFFER_256_ZERO, this.trie.root, 0n, __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.extraData, [], new Map());\n            // README: set the block number to an actual 0 now.\n            block.header.number = utils_1.Quantity.Zero;\n            const hash = block.hash();\n            return this.blocks\n                .putBlock(block.header.number.toBuffer(), hash, serialized)\n                .then(_ => ({\n                block,\n                blockLogs: ethereum_utils_1.BlockLogs.create(hash)\n            }));\n        });\n        /**\n         * The number of milliseconds time should be adjusted by when computing the\n         * \"time\" for a block.\n         */\n        _Blockchain_timeAdjustment.set(this, 0);\n        /**\n         * Returns the timestamp, adjusted by the timeAdjustment offset, in seconds.\n         * @param precedingTimestamp - the timestamp of the block to be used as the\n         * time source if `timestampIncrement` is not \"clock\".\n         */\n        _Blockchain_adjustedTime.set(this, (precedingTimestamp) => {\n            const timeAdjustment = __classPrivateFieldGet(this, _Blockchain_timeAdjustment, \"f\");\n            const timestampIncrement = __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.timestampIncrement;\n            if (timestampIncrement === \"clock\") {\n                return Math.floor((Date.now() + timeAdjustment) / 1000);\n            }\n            else {\n                return (precedingTimestamp.toNumber() +\n                    Math.floor(timeAdjustment / 1000) +\n                    timestampIncrement.toNumber());\n            }\n        });\n        _Blockchain_deleteBlockData.set(this, async (blocksToDelete, newLatestBlockNumber) => {\n            // if we are forking we need to make sure we clean up the forking related\n            // metadata that isn't stored in the trie\n            if (\"revertMetaData\" in this.trie) {\n                await this.trie.revertMetaData(blocksToDelete[blocksToDelete.length - 1].header.number, blocksToDelete[0].header.number);\n            }\n            await __classPrivateFieldGet(this, _Blockchain_database, \"f\").batch(() => {\n                const { blocks, transactions, transactionReceipts, blockLogs } = this;\n                // point to the new \"latest\" again\n                blocks.updateLatestIndex(newLatestBlockNumber);\n                // clean up old blocks\n                blocksToDelete.forEach(block => {\n                    block.getTransactions().forEach(tx => {\n                        const txHash = tx.hash.toBuffer();\n                        transactions.del(txHash);\n                        transactionReceipts.del(txHash);\n                    });\n                    const blockNum = block.header.number.toBuffer();\n                    blocks.del(blockNum);\n                    blocks.del(block.hash().toBuffer());\n                    blockLogs.del(blockNum);\n                });\n            });\n        });\n        // TODO(stability): this.#snapshots is a potential unbound memory suck. Caller\n        // could call `evm_snapshot` over and over to grow the snapshot stack\n        // indefinitely. `this.#snapshots.blocks` is even worse. To solve this we\n        // might need to store in the db. An unlikely real problem, but possible.\n        _Blockchain_snapshots.set(this, {\n            snaps: [],\n            blocks: null,\n            unsubscribeFromBlocks: null\n        });\n        _Blockchain_traceTransaction.set(this, async (transaction, trie, newBlock, options, keys, contractAddress) => {\n            let currentDepth = -1;\n            const storageStack = [];\n            const blocks = this.blocks;\n            // ethereumjs vm doesn't use the callback style anymore\n            const blockchain = {\n                getBlock: async (number) => {\n                    const block = await blocks.get(number.toBuffer()).catch(_ => null);\n                    return block ? { hash: () => block.hash().toBuffer() } : null;\n                }\n            };\n            const common = this.fallback\n                ? this.fallback.getCommonForBlockNumber(this.common, BigInt(newBlock.header.number.toString()))\n                : this.common;\n            const vm = await vm_1.default.create({\n                state: trie,\n                activatePrecompiles: false,\n                common,\n                allowUnlimitedContractSize: this.vm.allowUnlimitedContractSize,\n                blockchain,\n                stateManager: this.fallback\n                    ? new state_manager_1.ForkStateManager({ common, trie: trie })\n                    : new index_1.DefaultStateManager({ common, trie: trie })\n            });\n            const storage = {};\n            // TODO: gas could go theoretically go over Number.MAX_SAFE_INTEGER.\n            // (Ganache v2 didn't handle this possibility either, so it hasn't been\n            // updated yet)\n            let gas = 0;\n            const structLogs = [];\n            const TraceData = (0, ethereum_utils_1.TraceDataFactory)();\n            const transactionEventContext = {};\n            const stepListener = async (event, next) => {\n                // See these docs:\n                // https://github.com/ethereum/go-ethereum/wiki/Management-APIs\n                if (__classPrivateFieldGet(this, _Blockchain_emitStepEvent, \"f\")) {\n                    this.emit(\"ganache:vm:tx:step\", (0, provider_events_1.makeStepEvent)(transactionEventContext, event));\n                }\n                const gasLeft = event.gasLeft.toNumber();\n                const totalGasUsedAfterThisStep = transaction.gasLimit.toNumber() - gasLeft;\n                const gasUsedPreviousStep = totalGasUsedAfterThisStep - gas;\n                gas += gasUsedPreviousStep;\n                const memory = [];\n                if (options.disableMemory !== true) {\n                    // We get the memory as one large array.\n                    // Let's cut it up into 32 byte chunks as required by the spec.\n                    let index = 0;\n                    while (index < event.memory.length) {\n                        const slice = event.memory.slice(index, index + 32);\n                        memory.push(TraceData.from(Buffer.from(slice)));\n                        index += 32;\n                    }\n                }\n                const stack = [];\n                if (options.disableStack !== true) {\n                    for (const stackItem of event.stack) {\n                        stack.push(TraceData.from(stackItem.toArrayLike(Buffer)));\n                    }\n                }\n                const structLog = {\n                    depth: event.depth + 1,\n                    error: \"\",\n                    gas: gasLeft,\n                    gasCost: 0,\n                    memory,\n                    op: event.opcode.name,\n                    pc: event.pc,\n                    stack,\n                    storage: null\n                };\n                // The gas difference calculated for each step is indicative of gas consumed in\n                // the previous step. Gas consumption in the final step will always be zero.\n                if (structLogs.length) {\n                    structLogs[structLogs.length - 1].gasCost = gasUsedPreviousStep;\n                }\n                if (options.disableStorage === true) {\n                    // Add the struct log as is - nothing more to do.\n                    structLogs.push(structLog);\n                    next();\n                }\n                else {\n                    const { depth: eventDepth } = event;\n                    if (currentDepth > eventDepth) {\n                        storageStack.pop();\n                    }\n                    else if (currentDepth < eventDepth) {\n                        storageStack.push(new ethereum_utils_1.TraceStorageMap());\n                    }\n                    currentDepth = eventDepth;\n                    switch (event.opcode.name) {\n                        case \"SSTORE\": {\n                            const key = stack[stack.length - 1];\n                            const value = stack[stack.length - 2];\n                            // new TraceStorageMap() here creates a shallow clone, to prevent other steps from overwriting\n                            structLog.storage = new ethereum_utils_1.TraceStorageMap(storageStack[eventDepth]);\n                            // Tell vm to move on to the next instruction. See below.\n                            structLogs.push(structLog);\n                            next();\n                            // assign after callback because this storage change actually takes\n                            // effect _after_ this opcode executes\n                            storageStack[eventDepth].set(key, value);\n                            break;\n                        }\n                        case \"SLOAD\": {\n                            const key = stack[stack.length - 1];\n                            const result = await vm.stateManager.getContractStorage(event.address, key.toBuffer());\n                            const value = TraceData.from(result);\n                            storageStack[eventDepth].set(key, value);\n                            // new TraceStorageMap() here creates a shallow clone, to prevent other steps from overwriting\n                            structLog.storage = new ethereum_utils_1.TraceStorageMap(storageStack[eventDepth]);\n                            structLogs.push(structLog);\n                            next();\n                            break;\n                        }\n                        default:\n                            // new TraceStorageMap() here creates a shallow clone, to prevent other steps from overwriting\n                            structLog.storage = new ethereum_utils_1.TraceStorageMap(storageStack[eventDepth]);\n                            structLogs.push(structLog);\n                            next();\n                    }\n                }\n            };\n            // Don't even let the vm try to flush the block's _cache to the stateTrie.\n            // When forking some of the data that the traced function may request will\n            // exist only on the main chain. Because we pretty much lie to the VM by\n            // telling it we DO have data in our Trie, when we really don't, it gets\n            // lost during the commit phase when it traverses the \"borrowed\" datum's\n            // trie (as it may not have a valid root). Because this is a trace, and we\n            // don't need to commit the data, duck punching the `flush` method (the\n            // simplest method I could find) is fine.\n            // Remove this and you may see the infamous\n            // `Uncaught TypeError: Cannot read property 'pop' of undefined` error!\n            vm.stateManager._cache.flush = () => { };\n            // Process the block without committing the data.\n            // The vmerr key on the result appears to be removed.\n            // The previous implementation had specific error handling.\n            // It's possible we've removed handling specific cases in this implementation.\n            // e.g., the previous incantation of RuntimeError\n            await vm.stateManager.checkpoint();\n            try {\n                for (let i = 0, l = newBlock.transactions.length; i < l; i++) {\n                    const tx = newBlock.transactions[i];\n                    if (tx === transaction) {\n                        if (keys && contractAddress) {\n                            const database = __classPrivateFieldGet(this, _Blockchain_database, \"f\");\n                            const ejsContractAddress = { buf: contractAddress };\n                            await Promise.all(keys.map(async (key) => {\n                                // get the raw key using the hashed key\n                                const rawKey = await database.storageKeys.get(key);\n                                const result = await vm.stateManager.getContractStorage(ejsContractAddress, rawKey);\n                                storage[utils_1.Data.toString(key, key.length)] = {\n                                    key: utils_1.Data.from(rawKey, rawKey.length),\n                                    value: utils_1.Data.from(result, 32)\n                                };\n                            }));\n                            break;\n                        }\n                        else {\n                            vm.on(\"step\", stepListener);\n                            // force the loop to break after running this transaction by setting\n                            // the current iteration past the end\n                            i = l;\n                        }\n                    }\n                    this.emit(\"ganache:vm:tx:before\", {\n                        context: transactionEventContext\n                    });\n                    await vm.runTx({ tx, block: newBlock });\n                    this.emit(\"ganache:vm:tx:after\", {\n                        context: transactionEventContext\n                    });\n                }\n                vm.removeListener(\"step\", stepListener);\n            }\n            finally {\n                await vm.stateManager.revert();\n            }\n            // send state results back\n            return {\n                gas,\n                structLogs,\n                returnValue: \"\",\n                storage\n            };\n        });\n        _Blockchain_prepareNextBlock.set(this, (targetBlock, parentBlock, transactionHash) => {\n            // Prepare the \"next\" block with necessary transactions\n            const newBlock = new ethereum_block_1.RuntimeBlock(utils_1.Quantity.from((parentBlock.header.number.toBigInt() || 0n) + 1n), parentBlock.hash(), parentBlock.header.miner, parentBlock.header.gasLimit.toBuffer(), utils_2.BUFFER_ZERO, \n            // make sure we use the same timestamp as the target block\n            targetBlock.header.timestamp, __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.difficulty, parentBlock.header.totalDifficulty, ethereum_block_1.Block.calcNextBaseFee(parentBlock));\n            newBlock.transactions = [];\n            newBlock.uncleHeaders = [];\n            const transactions = targetBlock.getTransactions();\n            for (const tx of transactions) {\n                newBlock.transactions.push(tx.toVmTransaction());\n                // After including the target transaction, that's all we need to do.\n                if (tx.hash.toBuffer().equals(transactionHash)) {\n                    break;\n                }\n            }\n            return newBlock;\n        });\n        __classPrivateFieldSet(this, _Blockchain_options, options, \"f\");\n        this.fallback = fallback;\n        this.coinbase = coinbase;\n        __classPrivateFieldSet(this, _Blockchain_instamine, !options.miner.blockTime || options.miner.blockTime <= 0, \"f\");\n        __classPrivateFieldSet(this, _Blockchain_database, new database_1.default(options.database, this), \"f\");\n    }\n    async initialize(initialAccounts) {\n        const database = __classPrivateFieldGet(this, _Blockchain_database, \"f\");\n        const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n        const instamine = __classPrivateFieldGet(this, _Blockchain_instamine, \"f\");\n        try {\n            let common;\n            if (this.fallback) {\n                await this.fallback.initialize();\n                await database.initialize();\n                common = this.common = this.fallback.common;\n                options.fork.blockNumber = this.fallback.blockNumber.toNumber();\n                options.chain.networkId = common.networkId();\n                options.chain.chainId = common.chainId();\n            }\n            else {\n                await database.initialize();\n                common = this.common = createCommon(options.chain.chainId, options.chain.networkId, options.chain.hardfork);\n            }\n            const blocks = (this.blocks = await block_manager_1.default.initialize(this, common, database.blockIndexes, database.blocks));\n            this.blockLogs = new blocklog_manager_1.default(database.blockLogs, this);\n            this.transactions = new transaction_manager_1.default(options.miner, common, this, database.transactions);\n            this.transactionReceipts = new transaction_receipt_manager_1.default(database.transactionReceipts, this);\n            this.accounts = new account_manager_1.default(this);\n            this.storageKeys = database.storageKeys;\n            // if we have a latest block, use it to set up the trie.\n            const { latest } = blocks;\n            {\n                let stateRoot;\n                if (latest) {\n                    __classPrivateFieldSet(this, _Blockchain_blockBeingSavedPromise, Promise.resolve({\n                        block: latest,\n                        blockLogs: null\n                    }), \"f\");\n                    ({ stateRoot } = latest.header);\n                }\n                else {\n                    stateRoot = null;\n                }\n                this.trie = makeTrie(this, database.trie, stateRoot);\n            }\n            // create VM and listen to step events\n            this.vm = await this.createVmFromStateTrie(this.trie, options.chain.allowUnlimitedContractSize, true);\n            {\n                // create first block\n                // if we don't have a time from the user get one now\n                if (options.chain.time == null)\n                    options.chain.time = new Date();\n                const timestamp = options.chain.time.getTime();\n                const firstBlockTime = Math.floor(timestamp / 1000);\n                // if we are using clock time we need to record the time offset so\n                // other blocks can have timestamps relative to our initial time.\n                if (options.miner.timestampIncrement === \"clock\") {\n                    __classPrivateFieldSet(this, _Blockchain_timeAdjustment, timestamp - Date.now(), \"f\");\n                }\n                // if we don't already have a latest block, create a genesis block!\n                if (!latest) {\n                    if (initialAccounts.length > 0) {\n                        await __classPrivateFieldGet(this, _Blockchain_commitAccounts, \"f\").call(this, initialAccounts);\n                    }\n                    __classPrivateFieldSet(this, _Blockchain_blockBeingSavedPromise, __classPrivateFieldGet(this, _Blockchain_initializeGenesisBlock, \"f\").call(this, firstBlockTime, options.miner.blockGasLimit, initialAccounts), \"f\");\n                    blocks.earliest = blocks.latest =\n                        await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\").then(({ block }) => block);\n                }\n            }\n            {\n                // configure and start miner\n                const txPool = this.transactions.transactionPool;\n                const minerOpts = options.miner;\n                const miner = (__classPrivateFieldSet(this, _Blockchain_miner, new miner_1.default(minerOpts, txPool.executables, this.vm, __classPrivateFieldGet(this, _Blockchain_readyNextBlock, \"f\")), \"f\"));\n                //#region re-emit miner events:\n                miner.on(\"ganache:vm:tx:before\", event => {\n                    this.emit(\"ganache:vm:tx:before\", event);\n                });\n                miner.on(\"ganache:vm:tx:step\", event => {\n                    if (!__classPrivateFieldGet(this, _Blockchain_emitStepEvent, \"f\"))\n                        return;\n                    this.emit(\"ganache:vm:tx:step\", event);\n                });\n                miner.on(\"ganache:vm:tx:after\", event => {\n                    this.emit(\"ganache:vm:tx:after\", event);\n                });\n                //#endregion\n                //#region automatic mining\n                const nullResolved = Promise.resolve(null);\n                const mineAll = (maxTransactions, onlyOneBlock = false) => __classPrivateFieldGet(this, _Blockchain_isPaused, \"f\").call(this)\n                    ? nullResolved\n                    : this.mine(maxTransactions, null, onlyOneBlock);\n                if (instamine) {\n                    // insta mining\n                    // whenever the transaction pool is drained mine the txs into blocks\n                    // only one transaction should be added per block\n                    txPool.on(\"drain\", mineAll.bind(null, miner_1.Capacity.Single));\n                }\n                else {\n                    // interval mining\n                    const wait = () => (__classPrivateFieldSet(this, _Blockchain_timer, setTimeout(next, minerOpts.blockTime * 1e3), \"f\"));\n                    // when interval mining, only one block should be mined. the block\n                    // can, however, be filled\n                    const next = () => {\n                        mineAll(miner_1.Capacity.FillBlock, true).then(wait);\n                    };\n                    wait();\n                }\n                //#endregion\n                miner.on(\"block\", __classPrivateFieldGet(this, _Blockchain_handleNewBlockData, \"f\"));\n                this.once(\"stop\").then(() => miner.clearListeners());\n            }\n        }\n        catch (e) {\n            // we failed to start up :-( bail!\n            __classPrivateFieldSet(this, _Blockchain_state, Status.stopping, \"f\");\n            // ignore errors while stopping here, since we are already in an\n            // exceptional case\n            await this.stop().catch(_ => { });\n            throw e;\n        }\n        __classPrivateFieldSet(this, _Blockchain_state, Status.started, \"f\");\n        this.emit(\"ready\");\n    }\n    pause() {\n        __classPrivateFieldSet(this, _Blockchain_state, __classPrivateFieldGet(this, _Blockchain_state, \"f\") | Status.paused, \"f\");\n    }\n    resume(_threads = 1) {\n        if (!__classPrivateFieldGet(this, _Blockchain_isPaused, \"f\").call(this)) {\n            console.log(\"Warning: startMining called when miner was already started\");\n            return;\n        }\n        // toggles the `paused` bit\n        __classPrivateFieldSet(this, _Blockchain_state, __classPrivateFieldGet(this, _Blockchain_state, \"f\") ^ Status.paused, \"f\");\n        // if we are instamining mine a block right away\n        if (__classPrivateFieldGet(this, _Blockchain_instamine, \"f\")) {\n            return this.mine(miner_1.Capacity.FillBlock);\n        }\n    }\n    /**\n     * @param milliseconds - the number of milliseconds to adjust the time by.\n     * Negative numbers are treated as 0.\n     * @returns the total time offset *in milliseconds*\n     */\n    increaseTime(milliseconds) {\n        if (milliseconds < 0) {\n            milliseconds = 0;\n        }\n        return (__classPrivateFieldSet(this, _Blockchain_timeAdjustment, __classPrivateFieldGet(this, _Blockchain_timeAdjustment, \"f\") + milliseconds, \"f\"));\n    }\n    /**\n     * @param newTime - the number of milliseconds to adjust the time by. Can be negative.\n     * @returns the total time offset *in milliseconds*\n     */\n    setTimeDiff(newTime) {\n        // when using clock time use Date.now(), otherwise use the timestamp of the\n        // current latest block\n        const currentTime = __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.timestampIncrement === \"clock\"\n            ? Date.now()\n            : this.blocks.latest.header.timestamp.toNumber() * 1000;\n        return (__classPrivateFieldSet(this, _Blockchain_timeAdjustment, newTime - currentTime, \"f\"));\n    }\n    snapshot() {\n        const snapshots = __classPrivateFieldGet(this, _Blockchain_snapshots, \"f\");\n        const snaps = snapshots.snaps;\n        // Subscription ids are based on the number of active snapshots. Weird? Yes.\n        // But it's the way it's been since the beginning so it just hasn't been\n        // changed. Feel free to change it so ids are unique if it bothers you\n        // enough.\n        const id = snaps.push({\n            block: this.blocks.latest,\n            timeAdjustment: __classPrivateFieldGet(this, _Blockchain_timeAdjustment, \"f\")\n        });\n        // start listening to new blocks if this is the first snapshot\n        if (id === 1) {\n            snapshots.unsubscribeFromBlocks = this.on(\"block\", block => {\n                snapshots.blocks = {\n                    current: block.hash().toBuffer(),\n                    next: snapshots.blocks\n                };\n            });\n        }\n        __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(\"Saved snapshot #\" + id);\n        return id;\n    }\n    async revert(snapshotId) {\n        if (snapshotId.isNull()) {\n            throw new Error(\"invalid snapshotId\");\n        }\n        const rawValue = snapshotId.toBigInt();\n        __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(\"Reverting to snapshot #\" + snapshotId);\n        const snapshots = __classPrivateFieldGet(this, _Blockchain_snapshots, \"f\");\n        const snaps = snapshots.snaps;\n        const snapshotIndex = Number(rawValue - 1n);\n        const snapshot = snaps[snapshotIndex];\n        if (!snapshot) {\n            return false;\n        }\n        // pause processing new transactions...\n        await this.transactions.pause();\n        // then pause the miner, too.\n        await __classPrivateFieldGet(this, _Blockchain_miner, \"f\").pause();\n        // wait for anything in the process of being saved to finish up\n        await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n        // Pending transactions are always removed when you revert, even if they\n        // were present before the snapshot was created. Ideally, we'd remove only\n        // the new transactions.. but we'll leave that for another day.\n        this.transactions.clear();\n        const blocks = this.blocks;\n        const currentHash = blocks.latest.hash().toBuffer();\n        const snapshotBlock = snapshot.block;\n        const snapshotHeader = snapshotBlock.header;\n        const snapshotHash = snapshotBlock.hash().toBuffer();\n        // remove this and all stored snapshots after this snapshot\n        snaps.splice(snapshotIndex);\n        // if there are no more listeners, stop listening to new blocks\n        if (snaps.length === 0) {\n            snapshots.unsubscribeFromBlocks();\n        }\n        // if the snapshot's hash is different than the latest block's hash we've\n        // got new blocks to clean up.\n        if (!currentHash.equals(snapshotHash)) {\n            // if we've added blocks since we snapshotted we need to delete them and put\n            // some things back the way they were.\n            const blockPromises = [];\n            let blockList = snapshots.blocks;\n            while (blockList !== null) {\n                if (blockList.current.equals(snapshotHash))\n                    break;\n                blockPromises.push(blocks.getByHash(blockList.current));\n                blockList = blockList.next;\n            }\n            snapshots.blocks = blockList;\n            const blockData = await Promise.all(blockPromises);\n            await __classPrivateFieldGet(this, _Blockchain_deleteBlockData, \"f\").call(this, blockData, snapshotHeader.number.toBuffer());\n            setStateRootSync(this.vm.stateManager, snapshotHeader.stateRoot.toBuffer());\n            blocks.latest = snapshotBlock;\n        }\n        // put our time adjustment back\n        __classPrivateFieldSet(this, _Blockchain_timeAdjustment, snapshot.timeAdjustment, \"f\");\n        // resume mining\n        __classPrivateFieldGet(this, _Blockchain_miner, \"f\").resume();\n        // resume processing transactions\n        this.transactions.resume();\n        return true;\n    }\n    async queueTransaction(transaction, secretKey) {\n        // NOTE: this.transactions.add *must* be awaited before returning the\n        // `transaction.hash()`, as the transactionPool may change the transaction\n        // (and thus its hash!)\n        // It may also throw Errors that must be returned to the caller.\n        const isExecutable = (await this.transactions.add(transaction, secretKey)) === true;\n        if (isExecutable) {\n            process.nextTick(this.emit.bind(this), \"pendingTransaction\", transaction);\n        }\n        const hash = transaction.hash;\n        if (__classPrivateFieldGet(this, _Blockchain_isPaused, \"f\").call(this) || !__classPrivateFieldGet(this, _Blockchain_instamine, \"f\")) {\n            return hash;\n        }\n        else {\n            if (__classPrivateFieldGet(this, _Blockchain_instamine, \"f\") && __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.instamine === \"eager\") {\n                // in eager instamine mode we must wait for the transaction to be saved\n                // before we can return the hash\n                const { status, error } = await transaction.once(\"finalized\");\n                // in eager instamine mode we must throw on all rejected transaction\n                // errors. We must also throw on `confirmed` transactions when\n                // vmErrorsOnRPCResponse is enabled.\n                if (error &&\n                    (status === \"rejected\" || __classPrivateFieldGet(this, _Blockchain_options, \"f\").chain.vmErrorsOnRPCResponse))\n                    throw error;\n            }\n            return hash;\n        }\n    }\n    async simulateTransaction(transaction, parentBlock, overrides) {\n        let result;\n        const data = transaction.data;\n        let gasLimit = transaction.gas.toBigInt();\n        // subtract out the transaction's base fee from the gas limit before\n        // simulating the tx, because `runCall` doesn't account for raw gas costs.\n        const hasToAddress = transaction.to != null;\n        let to = null;\n        if (hasToAddress) {\n            const toBuf = transaction.to.toBuffer();\n            to = {\n                equals: (a) => toBuf.equals(a.buf),\n                buf: toBuf\n            };\n        }\n        else {\n            to = null;\n        }\n        const common = this.fallback\n            ? this.fallback.getCommonForBlockNumber(this.common, BigInt(transaction.block.header.number.toString()))\n            : this.common;\n        const gasLeft = gasLimit - (0, ethereum_transaction_1.calculateIntrinsicGas)(data, hasToAddress, common);\n        const transactionContext = {};\n        this.emit(\"ganache:vm:tx:before\", {\n            context: transactionContext\n        });\n        if (gasLeft >= 0n) {\n            const stateTrie = this.trie.copy(false);\n            stateTrie.setContext(parentBlock.header.stateRoot.toBuffer(), null, parentBlock.header.number);\n            const vm = await this.createVmFromStateTrie(stateTrie, __classPrivateFieldGet(this, _Blockchain_options, \"f\").chain.allowUnlimitedContractSize, false, // precompiles have already been initialized in the stateTrie\n            common);\n            // take a checkpoint so the `runCall` never writes to the trie. We don't\n            // commit/revert later because this stateTrie is ephemeral anyway.\n            vm.stateManager.checkpoint();\n            vm.on(\"step\", (event) => {\n                if (!__classPrivateFieldGet(this, _Blockchain_emitStepEvent, \"f\"))\n                    return;\n                const ganacheStepEvent = (0, provider_events_1.makeStepEvent)(transactionContext, event);\n                this.emit(\"ganache:vm:tx:step\", ganacheStepEvent);\n            });\n            const caller = transaction.from.toBuffer();\n            if (common.isActivatedEIP(2929)) {\n                const stateManager = vm.stateManager;\n                // handle Berlin hardfork warm storage reads\n                (0, precompiles_1.warmPrecompiles)(stateManager);\n                stateManager.addWarmedAddress(caller);\n                if (to)\n                    stateManager.addWarmedAddress(to.buf);\n            }\n            // If there are any overrides requested for eth_call, apply\n            // them now before running the simulation.\n            await (0, run_call_1.applySimulationOverrides)(stateTrie, vm, overrides);\n            // we need to update the balance and nonce of the sender _before_\n            // we run this transaction so that things that rely on these values\n            // are correct (like contract creation!).\n            const fromAccount = await vm.stateManager.getAccount({\n                buf: caller\n            });\n            fromAccount.nonce.iaddn(1);\n            const txCost = new ethereumjs_util_1.BN((gasLimit * transaction.gasPrice.toBigInt()).toString());\n            fromAccount.balance.isub(txCost);\n            await vm.stateManager.putAccount({ buf: caller }, fromAccount);\n            // finally, run the call\n            result = await vm.runCall({\n                caller: {\n                    buf: caller,\n                    equals: (a) => caller.equals(a.buf)\n                },\n                data: transaction.data && transaction.data.toBuffer(),\n                gasPrice: new ethereumjs_util_1.BN(transaction.gasPrice.toBuffer()),\n                gasLimit: new ethereumjs_util_1.BN(utils_1.Quantity.toBuffer(gasLeft)),\n                to,\n                value: transaction.value == null\n                    ? new ethereumjs_util_1.BN(0)\n                    : new ethereumjs_util_1.BN(transaction.value.toBuffer()),\n                block: transaction.block\n            });\n        }\n        else {\n            result = {\n                execResult: {\n                    runState: { programCounter: 0 },\n                    exceptionError: new exceptions_1.VmError(exceptions_1.ERROR.OUT_OF_GAS),\n                    returnValue: utils_1.BUFFER_EMPTY\n                }\n            };\n        }\n        this.emit(\"ganache:vm:tx:after\", {\n            context: transactionContext\n        });\n        if (result.execResult.exceptionError) {\n            throw new ethereum_utils_1.CallError(result);\n        }\n        else {\n            return utils_1.Data.from(result.execResult.returnValue || \"0x\");\n        }\n    }\n    /**\n     * traceTransaction\n     *\n     * Run a previously-run transaction in the same state in which it occurred at the time it was run.\n     * This will return the vm-level trace output for debugging purposes.\n     *\n     * Strategy:\n     *\n     *  1. Find block where transaction occurred\n     *  2. Set state root of that block\n     *  3. Rerun every transaction in that block prior to and including the requested transaction\n     *  4. Send trace results back.\n     *\n     * @param transactionHash -\n     * @param options -\n     */\n    async traceTransaction(transactionHash, options) {\n        const transactionHashBuffer = utils_1.Data.toBuffer(transactionHash);\n        // #1 - get block via transaction object\n        const transaction = await this.transactions.get(transactionHashBuffer);\n        if (!transaction) {\n            throw new Error(\"Unknown transaction \" + transactionHash);\n        }\n        const targetBlock = await this.blocks.getByHash(transaction.blockHash.toBuffer());\n        const parentBlock = await this.blocks.getByHash(targetBlock.header.parentHash.toBuffer());\n        const newBlock = __classPrivateFieldGet(this, _Blockchain_prepareNextBlock, \"f\").call(this, targetBlock, parentBlock, transactionHashBuffer);\n        // #2 - Set state root of original block\n        //\n        // TODO: Forking needs the forked block number passed during this step:\n        // https://github.com/trufflesuite/ganache/blob/develop/lib/blockchain_double.js#L917\n        const trie = this.trie.copy();\n        trie.setContext(parentBlock.header.stateRoot.toBuffer(), null, parentBlock.header.number);\n        // #3 - Rerun every transaction in block prior to and including the requested transaction\n        const { gas, structLogs, returnValue, storage } = await __classPrivateFieldGet(this, _Blockchain_traceTransaction, \"f\").call(this, newBlock.transactions[transaction.index.toNumber()], trie, newBlock, options);\n        // #4 - Send results back\n        return { gas, structLogs, returnValue, storage };\n    }\n    /**\n     * storageRangeAt\n     *\n     * Returns a contract's storage given a starting key and max number of\n     * entries to return.\n     *\n     * Strategy:\n     *\n     *  1. Find block where transaction occurred\n     *  2. Set state root of that block\n     *  3. Use contract address storage trie to get the storage keys from the transaction\n     *  4. Sort and filter storage keys using the startKey and maxResult\n     *  5. Rerun every transaction in that block prior to and including the requested transaction\n     *  6. Send storage results back\n     *\n     * @param blockHash -\n     * @param txIndex -\n     * @param contractAddress -\n     * @param startKey -\n     * @param maxResult -\n     */\n    async storageRangeAt(blockHash, txIndex, contractAddress, startKey, maxResult) {\n        // #1 - get block information\n        const targetBlock = await this.blocks.getByHash(blockHash);\n        // get transaction using txIndex\n        const transactions = targetBlock.getTransactions();\n        const transaction = transactions[txIndex];\n        if (!transaction) {\n            throw new Error(`transaction index ${txIndex} is out of range for block ${blockHash}`);\n        }\n        // #2 - set state root of block\n        const parentBlock = await this.blocks.getByHash(targetBlock.header.parentHash.toBuffer());\n        const trie = makeTrie(this, __classPrivateFieldGet(this, _Blockchain_database, \"f\").trie, parentBlock.header.stateRoot);\n        // get the contractAddress account storage trie\n        const contractAddressBuffer = ethereum_address_1.Address.from(contractAddress).toBuffer();\n        const addressData = await trie.get(contractAddressBuffer);\n        if (!addressData) {\n            throw new Error(`account ${contractAddress} doesn't exist`);\n        }\n        // #3 - use the contractAddress storage trie to get relevant hashed keys\n        const getStorageKeys = () => {\n            const storageTrie = trie.copy(false);\n            // An address's stateRoot is stored in the 3rd rlp entry\n            storageTrie.setContext((0, rlp_1.decode)(addressData)[2], contractAddressBuffer, parentBlock.header.number);\n            return new Promise((resolve, reject) => {\n                const startKeyBuffer = utils_1.Data.toBuffer(startKey);\n                const compare = (a, b) => a.compare(b) < 0;\n                const keys = [];\n                const handleData = ({ key }) => {\n                    // ignore anything that comes before our starting point\n                    if (startKeyBuffer.compare(key) > 0)\n                        return;\n                    // #4 - sort and filter keys\n                    // insert the key exactly where it needs to go in the array\n                    const position = (0, utils_1.findInsertPosition)(keys, key, compare);\n                    // ignore if the value couldn't possibly be relevant\n                    if (position > maxResult)\n                        return;\n                    keys.splice(position, 0, key);\n                };\n                const handleEnd = () => {\n                    if (keys.length > maxResult) {\n                        // we collected too much data, so we've got to trim it a bit\n                        resolve({\n                            // only take the maximum number of entries requested\n                            keys: keys.slice(0, maxResult),\n                            // assign nextKey\n                            nextKey: utils_1.Data.from(keys[maxResult])\n                        });\n                    }\n                    else {\n                        resolve({\n                            keys,\n                            nextKey: null\n                        });\n                    }\n                };\n                const rs = storageTrie.createReadStream();\n                rs.on(\"data\", handleData).on(\"error\", reject).on(\"end\", handleEnd);\n            });\n        };\n        const { keys, nextKey } = await getStorageKeys();\n        // #5 -  rerun every transaction in that block prior to and including the requested transaction\n        // prepare block to be run in traceTransaction\n        const transactionHashBuffer = transaction.hash.toBuffer();\n        const newBlock = __classPrivateFieldGet(this, _Blockchain_prepareNextBlock, \"f\").call(this, targetBlock, parentBlock, transactionHashBuffer);\n        // get storage data given a set of keys\n        const options = {\n            disableMemory: true,\n            disableStack: true,\n            disableStorage: false\n        };\n        const { storage } = await __classPrivateFieldGet(this, _Blockchain_traceTransaction, \"f\").call(this, newBlock.transactions[transaction.index.toNumber()], trie, newBlock, options, keys, contractAddressBuffer);\n        // #6 - send back results\n        return {\n            storage,\n            nextKey\n        };\n    }\n    toggleStepEvent(enable) {\n        __classPrivateFieldSet(this, _Blockchain_emitStepEvent, enable, \"f\");\n        __classPrivateFieldGet(this, _Blockchain_miner, \"f\").toggleStepEvent(enable);\n    }\n    /**\n     * Gracefully shuts down the blockchain service and all of its dependencies.\n     */\n    async stop() {\n        // If the blockchain is still initializing we don't want to shut down\n        // yet because there may still be database calls in flight. Leveldb may\n        // cause a segfault due to a race condition between a db write and the close\n        // call.\n        if (__classPrivateFieldGet(this, _Blockchain_state, \"f\") === Status.starting) {\n            await this.once(\"ready\");\n        }\n        __classPrivateFieldSet(this, _Blockchain_state, Status.stopping, \"f\");\n        // stop the polling miner, if necessary\n        clearTimeout(__classPrivateFieldGet(this, _Blockchain_timer, \"f\"));\n        // clean up listeners\n        this.vm && this.vm.removeAllListeners();\n        // pause processing new transactions...\n        this.transactions && (await this.transactions.pause());\n        // then pause the miner, too.\n        __classPrivateFieldGet(this, _Blockchain_miner, \"f\") && (await __classPrivateFieldGet(this, _Blockchain_miner, \"f\").pause());\n        // wait for anything in the process of being saved to finish up\n        await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n        this.fallback && (await this.fallback.close());\n        await this.emit(\"stop\");\n        __classPrivateFieldGet(this, _Blockchain_database, \"f\") && (await __classPrivateFieldGet(this, _Blockchain_database, \"f\").close());\n        __classPrivateFieldSet(this, _Blockchain_state, Status.stopped, \"f\");\n    }\n}\nexports.default = Blockchain;\n_Blockchain_state = new WeakMap(), _Blockchain_miner = new WeakMap(), _Blockchain_blockBeingSavedPromise = new WeakMap(), _Blockchain_timer = new WeakMap(), _Blockchain_emitStepEvent = new WeakMap(), _Blockchain_database = new WeakMap(), _Blockchain_options = new WeakMap(), _Blockchain_instamine = new WeakMap(), _Blockchain_saveNewBlock = new WeakMap(), _Blockchain_emitNewBlock = new WeakMap(), _Blockchain_getTransactionLogOutput = new WeakMap(), _Blockchain_handleNewBlockData = new WeakMap(), _Blockchain_readyNextBlock = new WeakMap(), _Blockchain_isPaused = new WeakMap(), _Blockchain_commitAccounts = new WeakMap(), _Blockchain_initializeGenesisBlock = new WeakMap(), _Blockchain_timeAdjustment = new WeakMap(), _Blockchain_adjustedTime = new WeakMap(), _Blockchain_deleteBlockData = new WeakMap(), _Blockchain_snapshots = new WeakMap(), _Blockchain_traceTransaction = new WeakMap(), _Blockchain_prepareNextBlock = new WeakMap();\n//# sourceMappingURL=blockchain.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Connector_provider, _Connector_handle;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connector = void 0;\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst provider_1 = require(\"./provider\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst bufferify_1 = require(\"./helpers/bufferify\");\nfunction isHttp(connection) {\n    return (connection.constructor.name === \"uWS.HttpRequest\" ||\n        connection.constructor.name === \"HttpRequest\");\n}\nclass Connector extends emittery_1.default {\n    constructor(providerOptions = null, executor) {\n        super();\n        _Connector_provider.set(this, void 0);\n        this.BUFFERIFY_THRESHOLD = Connector.BUFFERIFY_THRESHOLD;\n        _Connector_handle.set(this, (payload, connection) => {\n            const method = payload.method;\n            if (method === \"eth_subscribe\") {\n                if (isHttp(connection)) {\n                    return Promise.reject(new ethereum_utils_1.CodedError(\"notifications not supported\", utils_1.JsonRpcErrorCode.METHOD_NOT_SUPPORTED));\n                }\n            }\n            const params = payload.params;\n            return __classPrivateFieldGet(this, _Connector_provider, \"f\")._requestRaw({ method, params });\n        });\n        __classPrivateFieldSet(this, _Connector_provider, new provider_1.EthereumProvider(providerOptions, executor), \"f\");\n    }\n    get provider() {\n        return __classPrivateFieldGet(this, _Connector_provider, \"f\");\n    }\n    async connect() {\n        await __classPrivateFieldGet(this, _Connector_provider, \"f\").initialize();\n        // no need to wait for #provider.once(\"connect\") as the initialize()\n        // promise has already accounted for that after the promise is resolved\n        await this.emit(\"ready\");\n    }\n    parse(message) {\n        try {\n            return JSON.parse(message);\n        }\n        catch (e) {\n            throw new ethereum_utils_1.CodedError(e.message, utils_1.JsonRpcErrorCode.PARSE_ERROR);\n        }\n    }\n    handle(payload, connection) {\n        if (Array.isArray(payload)) {\n            // handle batch transactions\n            const promises = payload.map(payload => __classPrivateFieldGet(this, _Connector_handle, \"f\").call(this, payload, connection)\n                .then(({ value }) => value)\n                .catch(e => e));\n            return Promise.resolve({ value: Promise.all(promises) });\n        }\n        else {\n            return __classPrivateFieldGet(this, _Connector_handle, \"f\").call(this, payload, connection);\n        }\n    }\n    format(results, payload) {\n        if (Array.isArray(payload)) {\n            return JSON.stringify(payload.map((payload, i) => {\n                const result = results[i];\n                if (result instanceof Error) {\n                    return (0, utils_1.makeError)(payload.id, result);\n                }\n                else {\n                    return (0, utils_1.makeResponse)(payload.id, result);\n                }\n            }));\n        }\n        else {\n            const json = (0, utils_1.makeResponse)(payload.id, results);\n            if (payload.method === \"debug_traceTransaction\" &&\n                typeof results === \"object\" &&\n                Array.isArray(results.structLogs) &&\n                // for \"large\" debug_traceTransaction results we convert to individual\n                // parts of the response to Buffers, yielded via a Generator function,\n                // instead of using JSON.stringify. This is necessary because we:\n                //   * avoid V8's maximum string length limit of 1GB\n                //   * avoid and the max Buffer length limit of ~2GB (on 64bit\n                //     architectures).\n                //   * avoid heap allocation failures due to trying to hold too much\n                //     data in memory (which can happen if we don't immediately consume\n                //     the `format` result -- by buffering everything into one array,\n                //     for example)\n                //\n                // We don't do this for everything because the bufferfication is so very\n                // very slow.\n                //\n                // TODO(perf): an even better way of solving this would be to convert\n                // `debug_traceTransaction` to a generator that yields chunks (of\n                // Buffer) as soon as they're available. We could then `write` these\n                // individual chunks immediately and our memory use would stay\n                // relatively low and constant.\n                results.structLogs.length > this.BUFFERIFY_THRESHOLD) {\n                return (0, bufferify_1.bufferify)(json, \"\");\n            }\n            else {\n                return JSON.stringify(json);\n            }\n        }\n    }\n    formatError(error, payload) {\n        const json = (0, utils_1.makeError)(payload && payload.id ? payload.id : null, error);\n        return JSON.stringify(json);\n    }\n    close() {\n        return __classPrivateFieldGet(this, _Connector_provider, \"f\").disconnect();\n    }\n}\nexports.Connector = Connector;\n_Connector_provider = new WeakMap(), _Connector_handle = new WeakMap();\nConnector.BUFFERIFY_THRESHOLD = 100000;\n//# sourceMappingURL=connector.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AccountManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nclass AccountManager {\n    constructor(blockchain) {\n        _AccountManager_blockchain.set(this, void 0);\n        __classPrivateFieldSet(this, _AccountManager_blockchain, blockchain, \"f\");\n    }\n    async get(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const raw = await this.getRaw(address, blockNumber);\n        if (raw == null)\n            return null;\n        return ethereum_utils_1.Account.fromBuffer(raw);\n    }\n    async getRaw(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const { trie, blocks } = __classPrivateFieldGet(this, _AccountManager_blockchain, \"f\");\n        // get the block, its state root, and the trie at that state root\n        const { stateRoot, number } = (await blocks.get(blockNumber)).header;\n        const trieCopy = trie.copy(false);\n        trieCopy.setContext(stateRoot.toBuffer(), null, number);\n        // get the account from the trie\n        return await trieCopy.get(address.toBuffer());\n    }\n    async getStorageAt(address, key, blockNumber = ethereum_utils_1.Tag.latest) {\n        const { trie, blocks } = __classPrivateFieldGet(this, _AccountManager_blockchain, \"f\");\n        // get the block, its state root, and the trie at that state root\n        const { stateRoot, number } = (await blocks.get(blockNumber)).header;\n        const trieCopy = trie.copy(false);\n        trieCopy.setContext(stateRoot.toBuffer(), address.toBuffer(), number);\n        // get the account from the trie\n        return await trieCopy.get(key);\n    }\n    async getNonce(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return utils_1.Quantity.Zero;\n        const [nonce] = (0, rlp_1.decode)(data);\n        return nonce.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(nonce);\n    }\n    async getBalance(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return utils_1.Quantity.Zero;\n        const [, balance] = (0, rlp_1.decode)(data);\n        return balance.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(balance);\n    }\n    async getNonceAndBalance(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return { nonce: utils_1.Quantity.Zero, balance: utils_1.Quantity.Zero };\n        const [nonce, balance] = (0, rlp_1.decode)(data);\n        return {\n            nonce: nonce.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(nonce),\n            balance: balance.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(balance)\n        };\n    }\n    async getCode(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return utils_1.Data.Empty;\n        const [, , , codeHash] = (0, rlp_1.decode)(data);\n        if (codeHash.equals(ethereumjs_util_1.KECCAK256_NULL))\n            return utils_1.Data.Empty;\n        else\n            return __classPrivateFieldGet(this, _AccountManager_blockchain, \"f\").trie.db.get(codeHash).then(utils_1.Data.from);\n    }\n}\nexports.default = AccountManager;\n_AccountManager_blockchain = new WeakMap();\n//# sourceMappingURL=account-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _BlockManager_blockchain, _BlockManager_common, _BlockManager_blockIndexes;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst LATEST_INDEX_KEY = utils_1.BUFFER_ZERO;\nconst NOTFOUND = 404;\nconst EMPTY_BUFFER = Buffer.from([]);\nclass BlockManager extends manager_1.default {\n    constructor(blockchain, common, blockIndexes, base) {\n        super(base, ethereum_block_1.Block, common);\n        _BlockManager_blockchain.set(this, void 0);\n        _BlockManager_common.set(this, void 0);\n        _BlockManager_blockIndexes.set(this, void 0);\n        this.fromFallback = async (tagOrBlockNumber) => {\n            const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n            let blockNumber;\n            if (typeof tagOrBlockNumber === \"string\") {\n                blockNumber = tagOrBlockNumber;\n            }\n            else if (!fallback.isValidForkBlockNumber(tagOrBlockNumber)) {\n                // don't get the block if the requested block is _after_ our fallback's\n                // blocknumber because it doesn't exist in our local chain.\n                return null;\n            }\n            else {\n                blockNumber = tagOrBlockNumber.toString();\n            }\n            const json = await fallback.request(\"eth_getBlockByNumber\", [\n                blockNumber,\n                true\n            ]);\n            if (json == null) {\n                return null;\n            }\n            else {\n                const common = fallback.getCommonForBlockNumber(__classPrivateFieldGet(this, _BlockManager_common, \"f\"), BigInt(json.number));\n                return BlockManager.rawFromJSON(json, common);\n            }\n        };\n        __classPrivateFieldSet(this, _BlockManager_blockchain, blockchain, \"f\");\n        __classPrivateFieldSet(this, _BlockManager_common, common, \"f\");\n        __classPrivateFieldSet(this, _BlockManager_blockIndexes, blockIndexes, \"f\");\n    }\n    static async initialize(blockchain, common, blockIndexes, base) {\n        const bm = new BlockManager(blockchain, common, blockIndexes, base);\n        await bm.updateTaggedBlocks();\n        return bm;\n    }\n    static rawFromJSON(json, common) {\n        const header = [\n            utils_1.Data.toBuffer(json.parentHash),\n            utils_1.Data.toBuffer(json.sha3Uncles),\n            ethereum_address_1.Address.from(json.miner).toBuffer(),\n            utils_1.Data.toBuffer(json.stateRoot),\n            utils_1.Data.toBuffer(json.transactionsRoot),\n            utils_1.Data.toBuffer(json.receiptsRoot),\n            utils_1.Data.toBuffer(json.logsBloom),\n            utils_1.Quantity.toBuffer(json.difficulty),\n            utils_1.Quantity.toBuffer(json.number),\n            utils_1.Quantity.toBuffer(json.gasLimit),\n            utils_1.Quantity.toBuffer(json.gasUsed),\n            utils_1.Quantity.toBuffer(json.timestamp),\n            utils_1.Data.toBuffer(json.extraData),\n            utils_1.Data.toBuffer(json.mixHash),\n            utils_1.Data.toBuffer(json.nonce)\n        ];\n        // only add baseFeePerGas if the block's JSON already has it\n        if (json.baseFeePerGas !== undefined) {\n            header[15] = utils_1.Data.toBuffer(json.baseFeePerGas);\n        }\n        const totalDifficulty = utils_1.Quantity.toBuffer(json.totalDifficulty);\n        const txs = [];\n        const extraTxs = [];\n        json.transactions.forEach((tx, index) => {\n            const blockExtra = [\n                utils_1.Quantity.toBuffer(tx.from),\n                utils_1.Quantity.toBuffer(tx.hash)\n            ];\n            const txExtra = [\n                ...blockExtra,\n                utils_1.Data.toBuffer(json.hash),\n                utils_1.Quantity.toBuffer(json.number),\n                index\n            ];\n            const typedTx = ethereum_transaction_1.TransactionFactory.fromRpc(tx, common, txExtra);\n            const raw = typedTx.toEthRawTransaction(typedTx.v.toBuffer(), typedTx.r.toBuffer(), typedTx.s.toBuffer());\n            txs.push(raw);\n            extraTxs.push(blockExtra);\n        });\n        return (0, ethereum_block_1.serialize)([header, txs, [], totalDifficulty, extraTxs]).serialized;\n    }\n    getBlockByTag(tag) {\n        switch (tag) {\n            case \"latest\":\n                return this.latest;\n            case \"pending\":\n                // TODO: build a real pending block!\n                return this.latest; // this.createBlock(this.latest.header);\n            case \"earliest\":\n                return this.earliest;\n            default:\n                // the key is probably a hex string, let nature takes its course.\n                break;\n        }\n    }\n    getEffectiveNumber(tagOrBlockNumber = typeof ethereum_utils_1.Tag.latest) {\n        if (typeof tagOrBlockNumber === \"string\") {\n            const block = this.getBlockByTag(tagOrBlockNumber);\n            if (block) {\n                return block.header.number;\n            }\n        }\n        return utils_1.Quantity.from(tagOrBlockNumber);\n    }\n    async getNumberFromHash(hash) {\n        return __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").get(utils_1.Data.toBuffer(hash)).catch(e => {\n            if (e.status === NOTFOUND)\n                return null;\n            throw e;\n        });\n    }\n    async getByHash(hash) {\n        const number = await this.getNumberFromHash(hash);\n        if (number === null) {\n            const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n            if (fallback) {\n                const json = await fallback.request(\"eth_getBlockByHash\", [\n                    utils_1.Data.from(hash),\n                    true\n                ]);\n                if (json) {\n                    const blockNumber = BigInt(json.number);\n                    if (blockNumber <= fallback.blockNumber.toBigInt()) {\n                        const common = fallback.getCommonForBlockNumber(__classPrivateFieldGet(this, _BlockManager_common, \"f\"), blockNumber);\n                        return new ethereum_block_1.Block(BlockManager.rawFromJSON(json, common), common);\n                    }\n                }\n            }\n            return null;\n        }\n        else {\n            return this.get(number);\n        }\n    }\n    async getRawByBlockNumber(blockNumber) {\n        // TODO(perf): make the block's raw fields accessible on latest/earliest/pending so\n        // we don't have to fetch them from the db each time a block tag is used.\n        const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n        const numBuf = blockNumber.toBuffer();\n        return this.getRaw(numBuf).then(block => {\n            if (block == null && fallback) {\n                return this.fromFallback(blockNumber);\n            }\n            return block;\n        });\n    }\n    async get(tagOrBlockNumber) {\n        if (typeof tagOrBlockNumber === \"string\") {\n            const block = this.getBlockByTag(tagOrBlockNumber);\n            if (block)\n                return block;\n        }\n        const blockNumber = utils_1.Quantity.from(tagOrBlockNumber);\n        const block = await this.getRaw(blockNumber.toBuffer());\n        const common = __classPrivateFieldGet(this, _BlockManager_common, \"f\");\n        if (block)\n            return new ethereum_block_1.Block(block, common);\n        else {\n            const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n            if (fallback) {\n                const block = await this.fromFallback(blockNumber);\n                if (block) {\n                    return new ethereum_block_1.Block(block, fallback.getCommonForBlockNumber(common, blockNumber.toBigInt()));\n                }\n            }\n        }\n        throw new Error(\"header not found\");\n    }\n    /**\n     * Writes the block object to the underlying database.\n     * @param block -\n     */\n    async putBlock(number, hash, serialized) {\n        let key = number;\n        // ensure we can store Block #0 as key \"00\", not \"\"\n        if (EMPTY_BUFFER.equals(key)) {\n            key = Buffer.from([0]);\n        }\n        const secondaryKey = hash.toBuffer();\n        await Promise.all([\n            __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").put(secondaryKey, key),\n            super.set(key, serialized)\n        ]);\n    }\n    /**\n     * Updates the \"latest\" index to point to the given number.\n     * @param number the block number of the latest block\n     */\n    async updateLatestIndex(number) {\n        await __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").put(LATEST_INDEX_KEY, number);\n    }\n    /**\n     * Updates the this.latest and this.earliest properties with data\n     * from the database.\n     */\n    async updateTaggedBlocks() {\n        const [earliest, latestBlockNumber] = await Promise.all([\n            new Promise((resolve, reject) => {\n                let earliest;\n                this.base\n                    .createValueStream({ limit: 1 })\n                    .on(\"data\", (data) => {\n                    earliest = new ethereum_block_1.Block(data, __classPrivateFieldGet(this, _BlockManager_common, \"f\"));\n                })\n                    .on(\"error\", (err) => {\n                    reject(err);\n                })\n                    .on(\"end\", () => {\n                    resolve(earliest);\n                });\n            }),\n            __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").get(LATEST_INDEX_KEY).catch(e => null)\n        ]);\n        if (earliest)\n            this.earliest = earliest;\n        if (latestBlockNumber) {\n            this.latest = await this.get(latestBlockNumber);\n        }\n        else {\n            // TODO: remove this section for the Ganache 8.0 release\n            // Ganache v7.0.0 didn't save a pointer to the latest block correctly, so\n            // when a database was restarted it would pull the wrong block. This code\n            // iterates over all data in the data base and finds the block with the\n            // highest block number and updates the database with the pointer so we\n            // don't have to hit this code again next time.\n            const stream = this.base.createValueStream();\n            this.latest = await new Promise((resolve, reject) => {\n                let latest;\n                stream\n                    .on(\"data\", (data) => {\n                    const block = new ethereum_block_1.Block(data, __classPrivateFieldGet(this, _BlockManager_common, \"f\"));\n                    if (!latest ||\n                        block.header.number.toBigInt() > latest.header.number.toBigInt()) {\n                        latest = block;\n                    }\n                })\n                    .on(\"error\", (err) => {\n                    reject(err);\n                })\n                    .on(\"end\", () => {\n                    resolve(latest);\n                });\n            });\n            if (this.latest) {\n                // update the LATEST_INDEX_KEY index so we don't have to do this next time\n                await __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\")\n                    .put(LATEST_INDEX_KEY, this.latest.header.number.toBuffer())\n                    .catch(e => null);\n            }\n        }\n    }\n}\nexports.default = BlockManager;\n_BlockManager_blockchain = new WeakMap(), _BlockManager_common = new WeakMap(), _BlockManager_blockIndexes = new WeakMap();\n//# sourceMappingURL=block-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _BlockLogManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst filter_parsing_1 = require(\"../helpers/filter-parsing\");\nclass BlockLogManager extends manager_1.default {\n    constructor(base, blockchain) {\n        super(base, ethereum_utils_1.BlockLogs);\n        _BlockLogManager_blockchain.set(this, void 0);\n        __classPrivateFieldSet(this, _BlockLogManager_blockchain, blockchain, \"f\");\n    }\n    async get(key) {\n        const log = await super.get(key);\n        if (log) {\n            log.blockNumber = utils_1.Quantity.from(key);\n        }\n        else if (__classPrivateFieldGet(this, _BlockLogManager_blockchain, \"f\").fallback) {\n            const block = utils_1.Quantity.from(key);\n            const res = await __classPrivateFieldGet(this, _BlockLogManager_blockchain, \"f\").fallback.request(\"eth_getLogs\", [{ fromBlock: block, toBlock: block }]);\n            return ethereum_utils_1.BlockLogs.fromJSON(res);\n        }\n        return log;\n    }\n    async getLogs(filter) {\n        const blockchain = __classPrivateFieldGet(this, _BlockLogManager_blockchain, \"f\");\n        if (\"blockHash\" in filter) {\n            const { addresses, topics } = (0, filter_parsing_1.parseFilterDetails)(filter);\n            const blockNumber = await blockchain.blocks.getNumberFromHash(filter.blockHash);\n            if (!blockNumber)\n                return [];\n            const logs = await this.get(blockNumber);\n            return logs ? [...logs.filter(addresses, topics)] : [];\n        }\n        else {\n            const { addresses, topics, fromBlock, toBlockNumber } = (0, filter_parsing_1.parseFilter)(filter, blockchain);\n            const pendingLogsPromises = [\n                this.get(fromBlock.toBuffer())\n            ];\n            const fromBlockNumber = fromBlock.toNumber();\n            // if we have a range of blocks to search, do that here:\n            if (fromBlockNumber !== toBlockNumber) {\n                // fetch all the blockLogs in-between `fromBlock` and `toBlock` (excluding\n                // from, because we already started fetching that one)\n                for (let i = fromBlockNumber + 1, l = toBlockNumber + 1; i < l; i++) {\n                    pendingLogsPromises.push(this.get(utils_1.Quantity.toBuffer(i)));\n                }\n            }\n            // now filter and compute all the blocks' blockLogs (in block order)\n            return Promise.all(pendingLogsPromises).then(blockLogsRange => {\n                const filteredBlockLogs = [];\n                blockLogsRange.forEach(blockLogs => {\n                    // TODO(perf): this loops over all addresses for every block.\n                    // Maybe make it loop only once?\n                    if (blockLogs)\n                        filteredBlockLogs.push(...blockLogs.filter(addresses, topics));\n                });\n                return filteredBlockLogs;\n            });\n        }\n    }\n}\nexports.default = BlockLogManager;\n_BlockLogManager_blockchain = new WeakMap();\n//# sourceMappingURL=blocklog-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Manager_Type, _Manager_options;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"@ganache/utils\");\nconst NOTFOUND = 404;\nclass Manager {\n    constructor(base, type, options) {\n        _Manager_Type.set(this, void 0);\n        _Manager_options.set(this, void 0);\n        __classPrivateFieldSet(this, _Manager_Type, type, \"f\");\n        __classPrivateFieldSet(this, _Manager_options, options, \"f\");\n        this.base = base;\n    }\n    getRaw(key) {\n        if (typeof key === \"string\") {\n            key = utils_1.Data.toBuffer(key);\n        }\n        if (key.length === 0) {\n            key = utils_1.BUFFER_ZERO;\n        }\n        return this.base.get(key).catch(e => {\n            if (e.status === NOTFOUND)\n                return null;\n            throw e;\n        });\n    }\n    async get(key) {\n        const raw = await this.getRaw(key);\n        if (!raw)\n            return null;\n        return new (__classPrivateFieldGet(this, _Manager_Type, \"f\"))(raw, __classPrivateFieldGet(this, _Manager_options, \"f\"));\n    }\n    set(key, value) {\n        return this.base.put(key, value);\n    }\n    del(key) {\n        return this.base.del(key);\n    }\n}\nexports.default = Manager;\n_Manager_Type = new WeakMap(), _Manager_options = new WeakMap();\n//# sourceMappingURL=manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TransactionManager_queue, _TransactionManager_paused, _TransactionManager_resumer, _TransactionManager_resolver, _TransactionManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst transaction_pool_1 = __importDefault(require(\"../transaction-pool\"));\nconst promise_queue_1 = __importDefault(require(\"@ganache/promise-queue\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\n// since our Manager needs to receive and Instantiable class with a\n// consistent return type and our transaction factory can return\n// any number of transaction types, we pass in this empty\n// no op class to fool the Manager\nclass NoOp {\n}\nclass TransactionManager extends manager_1.default {\n    constructor(options, common, blockchain, base) {\n        super(base, ethereum_transaction_1.TransactionFactory, common);\n        _TransactionManager_queue.set(this, new promise_queue_1.default());\n        _TransactionManager_paused.set(this, false);\n        _TransactionManager_resumer.set(this, void 0);\n        _TransactionManager_resolver.set(this, void 0);\n        _TransactionManager_blockchain.set(this, void 0);\n        this.fromFallback = async (transactionHash) => {\n            const { fallback } = __classPrivateFieldGet(this, _TransactionManager_blockchain, \"f\");\n            const tx = await fallback.request(\"eth_getTransactionByHash\", [\n                utils_1.Data.toString(transactionHash)\n            ]);\n            if (tx == null)\n                return null;\n            const blockHash = utils_1.Data.from(tx.blockHash, 32);\n            const blockNumber = utils_1.Quantity.from(tx.blockNumber);\n            const index = utils_1.Quantity.from(tx.transactionIndex);\n            // don't get the transaction if the requested transaction is _after_ our\n            // fallback's blocknumber because it doesn't exist in our local chain.\n            if (!fallback.isValidForkBlockNumber(blockNumber))\n                return null;\n            const extra = [\n                ethereum_address_1.Address.toBuffer(tx.from),\n                utils_1.Data.toBuffer(tx.hash, 32),\n                blockHash.toBuffer(),\n                blockNumber.toBuffer(),\n                index.toBuffer(),\n                utils_1.Quantity.toBuffer(tx.gasPrice)\n            ];\n            const common = fallback.getCommonForBlockNumber(fallback.common, blockNumber.toBigInt());\n            const runTx = ethereum_transaction_1.TransactionFactory.fromRpc(tx, common, extra);\n            return runTx.serializeForDb(blockHash, blockNumber, index);\n        };\n        /**\n         * Resume processing transactions. Has no effect if not paused.\n         */\n        this.resume = () => {\n            if (!__classPrivateFieldGet(this, _TransactionManager_paused, \"f\"))\n                return;\n            __classPrivateFieldSet(this, _TransactionManager_paused, false, \"f\");\n            __classPrivateFieldGet(this, _TransactionManager_resolver, \"f\").call(this);\n        };\n        __classPrivateFieldSet(this, _TransactionManager_blockchain, blockchain, \"f\");\n        this.transactionPool = new transaction_pool_1.default(options, blockchain);\n    }\n    async getRaw(transactionHash) {\n        return super.getRaw(transactionHash).then(block => {\n            if (block == null && __classPrivateFieldGet(this, _TransactionManager_blockchain, \"f\").fallback) {\n                return this.fromFallback(transactionHash);\n            }\n            return block;\n        });\n    }\n    async get(key) {\n        const factory = (await super.get(key));\n        if (!factory)\n            return null;\n        return factory.tx;\n    }\n    /**\n     * Adds the transaction to the transaction pool.\n     *\n     * Returns a promise that is only resolved in the order it was added.\n     *\n     * @param transaction -\n     * @param secretKey -\n     * @returns `true` if the `transaction` is immediately executable, `false` if\n     * it may be valid in the future. Throws if the transaction is invalid.\n     */\n    async add(transaction, secretKey) {\n        if (__classPrivateFieldGet(this, _TransactionManager_paused, \"f\")) {\n            await __classPrivateFieldGet(this, _TransactionManager_resumer, \"f\");\n        }\n        // Because ganache requires determinism, we can't allow varying IO times to\n        // potentially affect the order in which transactions are inserted into the\n        // pool, so we use a FIFO queue to _return_ transaction insertions in the\n        // order the were received.\n        const insertion = this.transactionPool.prepareTransaction(transaction, secretKey);\n        const result = await __classPrivateFieldGet(this, _TransactionManager_queue, \"f\").add(insertion);\n        if (result) {\n            this.transactionPool.drain();\n        }\n        return result;\n    }\n    /**\n     * Immediately ignores all transactions that were in the process of being\n     * added to the pool. These transactions' `push` promises will be resolved\n     * immediately with the value `false` and will _not_ be added to the pool.\n     *\n     * Also clears all transactions that were already added to the pool.\n     *\n     * Transactions that are currently in the process of being mined may still be\n     * mined.\n     */\n    clear() {\n        __classPrivateFieldGet(this, _TransactionManager_queue, \"f\").clear(false);\n        this.transactionPool.clear();\n    }\n    /**\n     * Stop processing _new_ transactions; puts new requests in a queue. Has no\n     * affect if already paused.\n     */\n    async pause() {\n        if (!__classPrivateFieldGet(this, _TransactionManager_paused, \"f\")) {\n            // stop processing new transactions immediately\n            __classPrivateFieldSet(this, _TransactionManager_paused, true, \"f\");\n            __classPrivateFieldSet(this, _TransactionManager_resumer, new Promise(resolve => {\n                __classPrivateFieldSet(this, _TransactionManager_resolver, resolve, \"f\");\n            }), \"f\");\n        }\n        // then wait until all async things we were already processing are done\n        // before returning\n        if (__classPrivateFieldGet(this, _TransactionManager_queue, \"f\").isBusy()) {\n            await __classPrivateFieldGet(this, _TransactionManager_queue, \"f\").emit(\"idle\");\n        }\n    }\n}\nexports.default = TransactionManager;\n_TransactionManager_queue = new WeakMap(), _TransactionManager_paused = new WeakMap(), _TransactionManager_resumer = new WeakMap(), _TransactionManager_resolver = new WeakMap(), _TransactionManager_blockchain = new WeakMap();\n//# sourceMappingURL=transaction-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TransactionReceiptManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nclass TransactionReceiptManager extends manager_1.default {\n    constructor(base, blockchain) {\n        super(base, ethereum_transaction_1.InternalTransactionReceipt);\n        _TransactionReceiptManager_blockchain.set(this, void 0);\n        __classPrivateFieldSet(this, _TransactionReceiptManager_blockchain, blockchain, \"f\");\n    }\n    async get(key) {\n        const receipt = await super.get(key);\n        if (receipt) {\n            return receipt;\n        }\n        else if (__classPrivateFieldGet(this, _TransactionReceiptManager_blockchain, \"f\").fallback) {\n            const res = await __classPrivateFieldGet(this, _TransactionReceiptManager_blockchain, \"f\").fallback.request(\"eth_getTransactionReceipt\", [typeof key === \"string\" ? key : utils_1.Data.from(key)]);\n            if (!res)\n                return null;\n            const status = res.status === \"0x1\" ? utils_1.Quantity.One.toBuffer() : utils_1.BUFFER_ZERO;\n            const cumulativeGasUsed = utils_1.Quantity.toBuffer(res.cumulativeGasUsed);\n            const logsBloom = utils_1.Data.toBuffer(res.logsBloom, 256);\n            const logs = res.logs.map(log => [\n                ethereum_address_1.Address.from(log.address).toBuffer(),\n                log.topics.map(topic => utils_1.Data.toBuffer(topic)),\n                Array.isArray(log.data)\n                    ? log.data.map(data => utils_1.Data.toBuffer(data))\n                    : utils_1.Data.toBuffer(log.data)\n            ]);\n            const gasUsed = utils_1.Quantity.toBuffer(res.gasUsed);\n            const contractAddress = res.contractAddress == null\n                ? utils_1.BUFFER_EMPTY\n                : ethereum_address_1.Address.from(res.contractAddress).toBuffer();\n            return ethereum_transaction_1.InternalTransactionReceipt.fromValues(status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress);\n        }\n    }\n}\nexports.default = TransactionReceiptManager;\n_TransactionReceiptManager_blockchain = new WeakMap();\n//# sourceMappingURL=transaction-receipt-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Database_options, _Database_cleanupDirectory, _Database_closed, _Database_rootStore, _Database_cleanup;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst tmp_promise_1 = require(\"tmp-promise\");\nconst subleveldown_1 = __importDefault(require(\"subleveldown\"));\nconst encoding_down_1 = __importDefault(require(\"encoding-down\"));\nconst leveldown_1 = __importDefault(require(\"leveldown\"));\nconst levelup = require(\"levelup\");\n(0, tmp_promise_1.setGracefulCleanup)();\nconst tmpOptions = { prefix: \"ganache_\", unsafeCleanup: true };\nconst noop = () => Promise.resolve();\nclass Database extends emittery_1.default {\n    /**\n     * The Database handles the creation of the database, and all access to it.\n     * Once the database has been fully initialized it will emit a `ready`\n     * event.\n     * @param options - Supports one of two options: `db` (a leveldown compliant\n     * store instance) or `dbPath` (the path to store/read the db instance)\n     * @param blockchain -\n     */\n    constructor(options, blockchain) {\n        super();\n        _Database_options.set(this, void 0);\n        _Database_cleanupDirectory.set(this, noop);\n        _Database_closed.set(this, false);\n        this.directory = null;\n        this.db = null;\n        _Database_rootStore.set(this, void 0);\n        this.initialize = async () => {\n            const levelupOptions = {\n                keyEncoding: \"binary\",\n                valueEncoding: \"binary\"\n            };\n            const store = __classPrivateFieldGet(this, _Database_options, \"f\").db;\n            let db;\n            if (store) {\n                __classPrivateFieldSet(this, _Database_rootStore, (0, encoding_down_1.default)(store, levelupOptions), \"f\");\n                db = levelup(__classPrivateFieldGet(this, _Database_rootStore, \"f\"), {});\n            }\n            else {\n                let directory = __classPrivateFieldGet(this, _Database_options, \"f\").dbPath;\n                if (!directory) {\n                    const dirInfo = await (0, tmp_promise_1.dir)(tmpOptions);\n                    directory = dirInfo.path;\n                    __classPrivateFieldSet(this, _Database_cleanupDirectory, dirInfo.cleanup, \"f\");\n                    // don't continue if we closed while we were waiting for the dir\n                    if (__classPrivateFieldGet(this, _Database_closed, \"f\"))\n                        return __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n                }\n                this.directory = directory;\n                // specify an empty `prefix` for browser-based leveldown (level-js)\n                const leveldownOpts = { prefix: \"\" };\n                const store = (0, encoding_down_1.default)((0, leveldown_1.default)(directory, leveldownOpts), levelupOptions);\n                __classPrivateFieldSet(this, _Database_rootStore, store, \"f\");\n                db = levelup(store);\n            }\n            // don't continue if we closed while we were waiting for the db\n            if (__classPrivateFieldGet(this, _Database_closed, \"f\"))\n                return __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n            const open = db.open();\n            this.trie = (0, subleveldown_1.default)(db, \"T\", levelupOptions);\n            this.db = db;\n            await open;\n            // don't continue if we closed while we were waiting for it to open\n            if (__classPrivateFieldGet(this, _Database_closed, \"f\"))\n                return __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n            this.blocks = (0, subleveldown_1.default)(db, \"b\", levelupOptions);\n            this.blockIndexes = (0, subleveldown_1.default)(db, \"i\", levelupOptions);\n            this.blockLogs = (0, subleveldown_1.default)(db, \"l\", levelupOptions);\n            this.transactions = (0, subleveldown_1.default)(db, \"t\", levelupOptions);\n            this.transactionReceipts = (0, subleveldown_1.default)(db, \"r\", levelupOptions);\n            this.storageKeys = (0, subleveldown_1.default)(db, \"s\", levelupOptions);\n            return this.emit(\"ready\");\n        };\n        /**\n         * Cleans up the database connections and our tmp directory.\n         */\n        _Database_cleanup.set(this, async () => {\n            const db = this.db;\n            if (db) {\n                await new Promise((resolve, reject) => db.close(err => {\n                    if (err)\n                        return void reject(err);\n                    resolve(void 0);\n                }));\n                await Promise.all([\n                    this.blocks.close(),\n                    this.blockIndexes.close(),\n                    this.blockIndexes.close(),\n                    this.transactionReceipts.close(),\n                    this.transactions.close(),\n                    this.storageKeys.close(),\n                    this.trie.close()\n                ]);\n            }\n            return __classPrivateFieldGet(this, _Database_cleanupDirectory, \"f\").call(this);\n        });\n        __classPrivateFieldSet(this, _Database_options, options, \"f\");\n        this.blockchain = blockchain;\n    }\n    /**\n     * Call `batch` to batch `put` and `del` operations within the same\n     * event loop tick of the provided function. All db operations within the\n     * batch _must_ be executed synchronously.\n     * @param fn - Within this function's event loop tick, all `put` and\n     * `del` database operations are applied in a single atomic operation. This\n     * provides a single write call and if any individual put/del's fail the\n     * entire operation fails and no modifications are made.\n     * @returns a Promise that resolves to the return value\n     * of the provided function.\n     */\n    batch(fn) {\n        const rootDb = __classPrivateFieldGet(this, _Database_rootStore, \"f\").db;\n        const batch = this.db.batch();\n        const originalPut = rootDb.put;\n        const originalDel = rootDb.del;\n        rootDb.put = batch.put.bind(batch);\n        rootDb.del = batch.del.bind(batch);\n        let prom;\n        try {\n            const ret = fn();\n            // PSA: don't let vscode (or yourself) rewrite this to `await` the\n            // `batch.write` call. The `finally` block needs to run _before_ the\n            // write promise has resolved.\n            prom = batch.write().then(() => ret);\n        }\n        finally {\n            rootDb.put = originalPut;\n            rootDb.del = originalDel;\n        }\n        return prom;\n    }\n    /**\n     * Gracefully closes the database and cleans up the file system and waits for\n     * it to fully shut down. Emits a `close` event once complete.\n     * Note: only emits `close` once.\n     */\n    async close() {\n        const wasClosed = __classPrivateFieldGet(this, _Database_closed, \"f\");\n        __classPrivateFieldSet(this, _Database_closed, true, \"f\");\n        await __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n        // only emit `close` once\n        if (!wasClosed) {\n            this.emit(\"close\");\n            return;\n        }\n    }\n}\nexports.default = Database;\n_Database_options = new WeakMap(), _Database_cleanupDirectory = new WeakMap(), _Database_closed = new WeakMap(), _Database_rootStore = new WeakMap(), _Database_cleanup = new WeakMap();\n//# sourceMappingURL=database.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkCache = void 0;\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst cache_1 = __importDefault(require(\"@ethereumjs/vm/dist/state/cache\"));\nclass ForkCache extends cache_1.default {\n    constructor(trie) {\n        /**\n         * Looks up address in underlying trie.\n         * @param address - Address of account\n         */\n        const lookupAccount = async (address) => {\n            const rlp = await trie.get(address.buf);\n            return rlp ? ethereumjs_util_1.Account.fromRlpSerializedAccount(rlp) : new ethereumjs_util_1.Account();\n        };\n        super({ getCb: lookupAccount, putCb: trie.put.bind(trie), deleteCb: trie.del.bind(trie) });\n    }\n}\nexports.ForkCache = ForkCache;\n//# sourceMappingURL=cache.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction Deferred() {\n    const deferred = {};\n    deferred.promise = new Promise((resolve, reject) => {\n        deferred.resolve = resolve;\n        deferred.reject = reject;\n    });\n    return deferred;\n}\nexports.default = Deferred;\n//# sourceMappingURL=deferred.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Fork_abortController, _Fork_handler, _Fork_options, _Fork_accounts, _Fork_hardfork, _Fork_setCommonFromChain, _Fork_setBlockDataFromChainAndOptions, _Fork_syncAccounts;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Fork = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst abort_controller_1 = __importDefault(require(\"abort-controller\"));\nconst common_1 = __importDefault(require(\"@ethereumjs/common\"));\nconst http_handler_1 = require(\"./handlers/http-handler\");\nconst ws_handler_1 = require(\"./handlers/ws-handler\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst block_manager_1 = __importDefault(require(\"../data-managers/block-manager\"));\nconst provider_handler_1 = require(\"./handlers/provider-handler\");\nconst persistent_cache_1 = require(\"./persistent-cache/persistent-cache\");\nconst url_1 = require(\"url\");\nasync function fetchChainId(fork) {\n    const chainIdHex = await fork.request(\"eth_chainId\", []);\n    return parseInt(chainIdHex, 16);\n}\nasync function fetchNetworkId(fork) {\n    const networkIdStr = await fork.request(\"net_version\", []);\n    return parseInt(networkIdStr, 10);\n}\nfunction fetchBlockNumber(fork) {\n    // {disableCache: true} required so we never cache the blockNumber, as forking\n    // shouldn't ever cache a method that can change!\n    return fork.request(\"eth_blockNumber\", [], { disableCache: true });\n}\nfunction fetchBlock(fork, blockNumber) {\n    return fork.request(\"eth_getBlockByNumber\", [blockNumber, true]);\n}\nasync function fetchNonce(fork, address, blockNumber) {\n    const nonce = await fork.request(\"eth_getTransactionCount\", [\n        address,\n        blockNumber\n    ]);\n    return utils_1.Quantity.from(nonce);\n}\nclass Fork {\n    constructor(options, accounts) {\n        _Fork_abortController.set(this, new abort_controller_1.default());\n        _Fork_handler.set(this, void 0);\n        _Fork_options.set(this, void 0);\n        _Fork_accounts.set(this, void 0);\n        _Fork_hardfork.set(this, void 0);\n        _Fork_setCommonFromChain.set(this, async (chainIdPromise) => {\n            const [chainId, networkId] = await Promise.all([\n                chainIdPromise,\n                fetchNetworkId(this)\n            ]);\n            this.chainId = chainId;\n            this.common = common_1.default.forCustomChain(utils_1.KNOWN_CHAINIDS.has(chainId) ? chainId : 1, {\n                name: \"ganache-fork\",\n                defaultHardfork: __classPrivateFieldGet(this, _Fork_hardfork, \"f\"),\n                // use the remote chain's network id mostly because truffle's debugger\n                // needs it to match in order to fetch sources\n                networkId,\n                // we use ganache's own chain id for blocks _after_ the fork to prevent\n                // replay attacks\n                chainId: __classPrivateFieldGet(this, _Fork_options, \"f\").chain.chainId,\n                comment: \"Local test network fork\"\n            });\n            // disable listeners to common since we don't actually cause any `emit`s,\n            // but other EVM parts to listen and will make node complain about too\n            // many listeners.\n            this.common.on = () => { };\n        });\n        _Fork_setBlockDataFromChainAndOptions.set(this, async (chainIdPromise) => {\n            const { fork: options } = __classPrivateFieldGet(this, _Fork_options, \"f\");\n            if (options.blockNumber === ethereum_utils_1.Tag.latest) {\n                const [latestBlock, chainId] = await Promise.all([\n                    fetchBlock(this, ethereum_utils_1.Tag.latest),\n                    chainIdPromise\n                ]);\n                let blockNumber = parseInt(latestBlock.number, 16);\n                const effectiveBlockNumber = utils_1.KNOWN_CHAINIDS.has(chainId)\n                    ? Math.max(blockNumber - options.preLatestConfirmations, 0)\n                    : blockNumber;\n                let block;\n                if (effectiveBlockNumber !== blockNumber) {\n                    block = await fetchBlock(this, utils_1.Quantity.from(effectiveBlockNumber));\n                }\n                else {\n                    block = latestBlock;\n                }\n                options.blockNumber = effectiveBlockNumber;\n                this.blockNumber = utils_1.Quantity.from(effectiveBlockNumber);\n                this.stateRoot = utils_1.Data.from(block.stateRoot);\n                await __classPrivateFieldGet(this, _Fork_syncAccounts, \"f\").call(this, this.blockNumber);\n                return block;\n            }\n            else if (Number.isInteger(options.blockNumber) &&\n                options.blockNumber >= 0) {\n                const blockNumber = utils_1.Quantity.from(options.blockNumber);\n                const [block] = await Promise.all([\n                    fetchBlock(this, blockNumber).then(async (block) => {\n                        this.stateRoot = block.stateRoot;\n                        await __classPrivateFieldGet(this, _Fork_syncAccounts, \"f\").call(this, blockNumber);\n                        return block;\n                    }),\n                    fetchBlockNumber(this).then((latestBlockNumberHex) => {\n                        const latestBlockNumberInt = parseInt(latestBlockNumberHex, 16);\n                        // if our block number option is _after_ the current block number\n                        // throw, as it likely wasn't intentional and doesn't make sense.\n                        if (options.blockNumber > latestBlockNumberInt) {\n                            throw new Error(`\\`fork.blockNumber\\` (${options.blockNumber}) must not be greater than the current block number (${latestBlockNumberInt})`);\n                        }\n                        else {\n                            this.blockNumber = blockNumber;\n                        }\n                    })\n                ]);\n                return block;\n            }\n            else {\n                throw new Error(`Invalid value for \\`fork.blockNumber\\` option: \"${options.blockNumber}\". Must be a positive integer or the string \"latest\".`);\n            }\n        });\n        _Fork_syncAccounts.set(this, (blockNumber) => {\n            return Promise.all(__classPrivateFieldGet(this, _Fork_accounts, \"f\").map(async (account) => {\n                const nonce = await fetchNonce(this, account.address, blockNumber);\n                account.nonce = nonce;\n            }));\n        });\n        __classPrivateFieldSet(this, _Fork_options, options, \"f\");\n        const forkingOptions = options.fork;\n        __classPrivateFieldSet(this, _Fork_hardfork, options.chain.hardfork, \"f\");\n        __classPrivateFieldSet(this, _Fork_accounts, accounts, \"f\");\n        const { url, network } = forkingOptions;\n        if (url) {\n            const { protocol } = url;\n            switch (protocol) {\n                case \"ws:\":\n                case \"wss:\":\n                    __classPrivateFieldSet(this, _Fork_handler, new ws_handler_1.WsHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n                    break;\n                case \"http:\":\n                case \"https:\":\n                    __classPrivateFieldSet(this, _Fork_handler, new http_handler_1.HttpHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n                    break;\n                default: {\n                    throw new Error(`Unsupported protocol: ${protocol}`);\n                }\n            }\n        }\n        else if (forkingOptions.provider) {\n            __classPrivateFieldSet(this, _Fork_handler, new provider_handler_1.ProviderHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n        }\n        else if (network) {\n            let normalizedNetwork;\n            if (network === \"görli\") {\n                forkingOptions.network = normalizedNetwork = \"goerli\";\n            }\n            else {\n                normalizedNetwork = network;\n            }\n            // Note: `process.env.INFURA_KEY` is replaced by webpack with an infura\n            // key.\n            const infuraKey = process.env.INFURA_KEY;\n            if (!infuraKey) {\n                throw new Error(\"The INFURA_KEY environment variable was not given and is required when using Ganache's integrated archive network feature.\");\n            }\n            // any because the `network` check above narrowed the type to one\n            // that doesn't include `url`, but we still want to add it.\n            forkingOptions.url = new url_1.URL(`wss://${normalizedNetwork}.infura.io/ws/v3/${infuraKey}`);\n            __classPrivateFieldSet(this, _Fork_handler, new ws_handler_1.WsHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n        }\n    }\n    async initialize() {\n        let cacheProm;\n        const { fork: forkOptions, chain: chainOptions, miner: minerOptions } = __classPrivateFieldGet(this, _Fork_options, \"f\");\n        if (forkOptions.deleteCache)\n            await persistent_cache_1.PersistentCache.deleteDb();\n        if (forkOptions.disableCache === false) {\n            // ignore cache start up errors as it is possible there is an `open`\n            // conflict if another ganache fork is running at the time this one is\n            // started. The cache isn't required (though performance will be\n            // degraded without it)\n            cacheProm = persistent_cache_1.PersistentCache.create().catch(_e => null);\n        }\n        else {\n            cacheProm = null;\n        }\n        const chainIdPromise = fetchChainId(this);\n        const [block, cache] = await Promise.all([\n            __classPrivateFieldGet(this, _Fork_setBlockDataFromChainAndOptions, \"f\").call(this, chainIdPromise),\n            cacheProm,\n            __classPrivateFieldGet(this, _Fork_setCommonFromChain, \"f\").call(this, chainIdPromise)\n        ]);\n        const common = this.getCommonForBlockNumber(this.common, this.blockNumber.toBigInt());\n        this.block = new ethereum_block_1.Block(block_manager_1.default.rawFromJSON(block, common), common);\n        if (!chainOptions.time && minerOptions.timestampIncrement !== \"clock\") {\n            chainOptions.time = new Date((this.block.header.timestamp.toNumber() +\n                minerOptions.timestampIncrement.toNumber()) *\n                1000);\n        }\n        if (cache)\n            await this.initCache(cache);\n    }\n    async initCache(cache) {\n        await cache.initialize(this.block.header.number, this.block.hash(), this.request.bind(this));\n        __classPrivateFieldGet(this, _Fork_handler, \"f\").setCache(cache);\n    }\n    request(method, params, options = { disableCache: false }) {\n        return __classPrivateFieldGet(this, _Fork_handler, \"f\").request(method, params, options);\n    }\n    abort() {\n        return __classPrivateFieldGet(this, _Fork_abortController, \"f\").abort();\n    }\n    close() {\n        return __classPrivateFieldGet(this, _Fork_handler, \"f\").close();\n    }\n    isValidForkBlockNumber(blockNumber) {\n        return blockNumber.toBigInt() <= this.blockNumber.toBigInt();\n    }\n    selectValidForkBlockNumber(blockNumber) {\n        return this.isValidForkBlockNumber(blockNumber)\n            ? blockNumber\n            : this.blockNumber;\n    }\n    /**\n     * If the `blockNumber` is before our `fork.blockNumber`, return a `Common`\n     * instance, applying the rules from the remote chain's `common` via its\n     * original `chainId`. If the remote chain's `chainId` is now \"known\", return\n     * a `Common` with our local `common`'s rules applied, but with the remote\n     * chain's `chainId`. If the block is greater than or equal to our\n     * `fork.blockNumber` return `common`.\n     * @param common -\n     * @param blockNumber -\n     */\n    getCommonForBlockNumber(common, blockNumber) {\n        if (blockNumber <= this.blockNumber.toBigInt()) {\n            // we are at or before our fork block\n            if (utils_1.KNOWN_CHAINIDS.has(this.chainId)) {\n                // we support this chain id, so let's use its rules\n                let hardfork;\n                // hardforks are iterated from earliest to latest\n                for (const hf of common.hardforks()) {\n                    if (hf.block === null)\n                        continue;\n                    if (blockNumber >= BigInt(hf.block)) {\n                        hardfork = hf.name;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                return new common_1.default({ chain: this.chainId, hardfork });\n            }\n            // we don't know about this chain or hardfork, so just carry on per usual,\n            // but with the fork's chainId (instead of our local chainId)\n            return common_1.default.forCustomChain(1, {\n                chainId: this.chainId\n            }, common.hardfork());\n        }\n        else {\n            return common;\n        }\n    }\n}\nexports.Fork = Fork;\n_Fork_abortController = new WeakMap(), _Fork_handler = new WeakMap(), _Fork_options = new WeakMap(), _Fork_accounts = new WeakMap(), _Fork_hardfork = new WeakMap(), _Fork_setCommonFromChain = new WeakMap(), _Fork_setBlockDataFromChainAndOptions = new WeakMap(), _Fork_syncAccounts = new WeakMap();\n//# sourceMappingURL=fork.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseHandler = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst rate_limiter_1 = __importDefault(require(\"../rate-limiter/rate-limiter\"));\nconst lru_cache_1 = __importDefault(require(\"lru-cache\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst INVALID_RESPONSE = \"Invalid response from fork provider: \";\nconst INVALID_AUTH_ERROR = \"Authentication via both username/password (Basic) and JWT (Bearer) is not possible\";\nconst WINDOW_SECONDS = 30;\nclass BaseHandler {\n    constructor(options, abortSignal) {\n        this.id = 1;\n        this.requestCache = new Map();\n        this.fireForget = new Set();\n        const forkingOptions = options.fork;\n        const { requestsPerSecond, url, userAgent, origin } = forkingOptions;\n        this.abortSignal = abortSignal;\n        this.limiter = new rate_limiter_1.default(\n        // convert `requestsPerSecond` to \"requests per window\"\n        requestsPerSecond * WINDOW_SECONDS, WINDOW_SECONDS * 1000, abortSignal);\n        this.valueCache = new lru_cache_1.default({\n            max: 1073741824,\n            length: (value, key) => {\n                return value.length + key.length;\n            }\n        });\n        // we don't need header-related things if we are using a provider\n        // instead of a url since we aren't in charge of sending requests at the\n        // header level.\n        if (url) {\n            const headers = {\n                \"user-agent\": userAgent\n            };\n            if (origin) {\n                headers[\"origin\"] = origin;\n            }\n            // we set our own Authentication headers, so username and password must be\n            // removed from the url. (The values have already been copied to the options)\n            url.password = url.username = \"\";\n            const isInfura = url.host.endsWith(\".infura.io\");\n            BaseHandler.setAuthHeaders(forkingOptions, headers);\n            BaseHandler.setUserHeaders(forkingOptions, headers, !isInfura);\n            this.headers = headers;\n        }\n    }\n    setCache(cache) {\n        this.persistentCache = cache;\n    }\n    /**\n     * Adds Authorization headers from the given options to the provided `headers`\n     * object. Overwrites an existing `Authorization` header value.\n     *\n     * @param options -\n     * @param headers -\n     */\n    static setAuthHeaders(options, headers) {\n        if (options.username != null || options.password != null) {\n            if (options.jwt != null)\n                throw new Error(INVALID_AUTH_ERROR);\n            headers.authorization = `Basic ${Buffer.from(`${options.username || \"\"}:${options.password || \"\"}`).toString(\"base64\")}`;\n        }\n        else if (options.jwt) {\n            headers.authorization = `Bearer ${options.jwt}`;\n        }\n    }\n    /**\n     * Adds user provided headers to the provided `headers`\n     * object.\n     *\n     * If the headers already contain an existing `Authorization` header\n     * value and the incoming values have compatible schemes\n     * (Bearer===Bearer, Basic===Basic) the values are merged. Note: if the\n     * `permitMultiAuth` option is `false` Bearer tokens can not be merged.\n     *\n     * @param options -\n     * @param headers -\n     * @param permitMultiAuth -\n     */\n    static setUserHeaders(options, headers, permitMultiAuth) {\n        // copy the user-provided headers over to the connection's headers\n        const userHeaders = options.headers;\n        if (userHeaders) {\n            for (let i = 0, l = userHeaders.length; i < l; i++) {\n                let { name, value } = userHeaders[i];\n                const key = name.toLowerCase();\n                // if the user specified multiple Authentication headers (.e.g, via\n                // username/password or the jwt field) we need to join them when\n                // they are both of the same scheme, otherwise we throw an exception.\n                if (key === \"authorization\" && \"authorization\" in headers) {\n                    if (!permitMultiAuth) {\n                        throw new Error(`Authentication with multiple auth-params is not allowed.`);\n                    }\n                    const currentScheme = headers.authorization.split(\" \", 1)[0];\n                    const [incomingScheme, authParams] = value.split(/\\.(?:.+)/);\n                    if (incomingScheme.toLowerCase() === currentScheme.toLowerCase()) {\n                        headers.authorization += \",\" + authParams;\n                    }\n                    else {\n                        throw new Error(`Authentication via both ${currentScheme} and ${incomingScheme} is not allowed.`);\n                    }\n                }\n                else {\n                    headers[key] = value;\n                }\n            }\n        }\n    }\n    getFromMemCache(key) {\n        const cachedRequest = this.requestCache.get(key);\n        if (cachedRequest !== undefined)\n            return cachedRequest;\n        const cachedValue = this.valueCache.get(key);\n        if (cachedValue !== undefined)\n            return JSON.parse(cachedValue).result;\n    }\n    async getFromSlowCache(method, params, key) {\n        if (!this.persistentCache)\n            return;\n        const raw = await this.persistentCache.get(method, params, key).catch(e => {\n            if (e.notFound)\n                return null;\n            // I/O or other error, throw as things are getting weird and the cache may\n            // have lost integrity\n            throw e;\n        });\n        if (raw != null)\n            return { result: JSON.parse(raw).result, raw };\n    }\n    async queueRequest(method, params, key, send, options = { disableCache: false }) {\n        if (!options.disableCache) {\n            const memCached = this.getFromMemCache(key);\n            if (memCached !== undefined)\n                return memCached;\n            const diskCached = await this.getFromSlowCache(method, params, key);\n            if (diskCached !== undefined) {\n                this.valueCache.set(key, Buffer.from(diskCached.raw));\n                return diskCached.result;\n            }\n        }\n        const promise = this.limiter\n            .handle(send)\n            .then(async ({ response, raw }) => {\n            if (this.abortSignal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            if ((0, utils_1.hasOwn)(response, \"result\")) {\n                if (!options.disableCache) {\n                    // cache non-error responses only\n                    this.valueCache.set(key, raw);\n                    // swallow errors for the persistentCache, since it's not vital that\n                    // it always works\n                    if (this.persistentCache) {\n                        const prom = this.persistentCache\n                            .put(method, params, key, typeof raw === \"string\" ? Buffer.from(raw) : raw)\n                            .catch(_ => {\n                            // the cache.put may fail if the db is closed while a request\n                            // is in flight. This is a \"fire and forget\" method.\n                        });\n                        // track these unawaited `puts`\n                        this.fireForget.add(prom);\n                        // clean up once complete\n                        prom.finally(() => {\n                            this.fireForget.delete(prom);\n                        });\n                    }\n                }\n                return response.result;\n            }\n            else if ((0, utils_1.hasOwn)(response, \"error\") && response.error != null) {\n                const { error } = response;\n                throw new ethereum_utils_1.CodedError(error.message, error.code);\n            }\n            throw new Error(`${INVALID_RESPONSE}\\`${JSON.stringify(response)}\\``);\n        });\n        this.requestCache.set(key, promise);\n        return await promise;\n    }\n    async close() {\n        await Promise.all(this.fireForget.keys());\n        this.persistentCache && (await this.persistentCache.close());\n    }\n}\nexports.BaseHandler = BaseHandler;\nBaseHandler.JSONRPC_PREFIX = '{\"jsonrpc\":\"2.0\",\"id\":';\n//# sourceMappingURL=base-handler.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpHandler = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\n// TODO: support http2\nconst http_1 = __importStar(require(\"http\"));\nconst https_1 = __importStar(require(\"https\"));\nconst base_handler_1 = require(\"./base-handler\");\nconst deferred_1 = __importDefault(require(\"../deferred\"));\nconst { JSONRPC_PREFIX } = base_handler_1.BaseHandler;\nclass HttpHandler extends base_handler_1.BaseHandler {\n    constructor(options, abortSignal) {\n        super(options, abortSignal);\n        this.url = options.fork.url;\n        this.headers.accept = this.headers[\"content-type\"] = \"application/json\";\n        if (this.url.protocol === \"http:\") {\n            this._request = http_1.default.request;\n            this.agent = new http_1.Agent({\n                keepAlive: true,\n                scheduling: \"fifo\"\n            });\n        }\n        else {\n            this._request = https_1.default.request;\n            this.agent = new https_1.Agent({\n                keepAlive: true,\n                scheduling: \"fifo\"\n            });\n        }\n    }\n    async handleLengthedResponse(res, length) {\n        return await new Promise((resolve, reject) => {\n            const buffer = Buffer.allocUnsafe(length);\n            let offset = 0;\n            function data(message) {\n                const messageLength = message.length;\n                // note: Node will NOT send us more data than the content-length header\n                // denotes, so we don't have to worry about it.\n                message.copy(buffer, offset, 0, messageLength);\n                offset += messageLength;\n            }\n            function end() {\n                // note: Node doesn't check if the content-length matches (we might\n                // receive less data than expected), so we do that here\n                if (offset !== length) {\n                    // if we didn't receive enough data, throw\n                    reject(new Error(\"content-length mismatch\"));\n                }\n                else {\n                    resolve(buffer);\n                }\n            }\n            res.on(\"data\", data);\n            res.on(\"end\", end);\n            res.on(\"error\", reject);\n        });\n    }\n    async handleChunkedResponse(res) {\n        const chunks = [];\n        let totalLength = 0;\n        for await (let chunk of res) {\n            chunks.push(chunk);\n            totalLength += chunk.length;\n        }\n        return chunks.length === 1 ? chunks[0] : Buffer.concat(chunks, totalLength);\n    }\n    async request(method, params, options = { disableCache: false }) {\n        const key = JSON.stringify({ method, params });\n        const { protocol, hostname: host, port, pathname, search } = this.url;\n        const requestOptions = {\n            protocol,\n            host,\n            port,\n            path: pathname + search,\n            headers: this.headers,\n            method: \"POST\",\n            agent: this.agent,\n            // Node v15 supports AbortSignals directly\n            signal: this.abortSignal\n        };\n        const send = () => {\n            if (this.abortSignal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            const deferred = (0, deferred_1.default)();\n            const postData = `${JSONRPC_PREFIX}${this.id++},${key.slice(1)}`;\n            this.headers[\"content-length\"] = postData.length;\n            const req = this._request(requestOptions);\n            req.on(\"response\", res => {\n                const { headers } = res;\n                let buffer;\n                // in the browser we can't detect if the response is compressed (gzip),\n                // but it doesn't matter since the browser has decompressed already\n                // anyway\n                if (process.env.IS_BROWSER) {\n                    buffer = this.handleChunkedResponse(res);\n                }\n                else {\n                    // if we have a transfer-encoding we don't care about \"content-length\"\n                    // (per HTTP spec). We also don't care about invalid lengths\n                    if (\"transfer-encoding\" in headers) {\n                        buffer = this.handleChunkedResponse(res);\n                    }\n                    else {\n                        const length = headers[\"content-length\"] / 1;\n                        if (isNaN(length) || length <= 0) {\n                            buffer = this.handleChunkedResponse(res);\n                        }\n                        else {\n                            // we have a content-length; use it to pre-allocate the required memory\n                            buffer = this.handleLengthedResponse(res, length);\n                        }\n                    }\n                }\n                // TODO: handle invalid JSON (throws on parse)?\n                buffer.then(buffer => {\n                    try {\n                        deferred.resolve({\n                            response: JSON.parse(buffer),\n                            raw: buffer\n                        });\n                    }\n                    catch {\n                        const resStr = buffer.toString();\n                        let shortStr;\n                        if (resStr.length > 340) {\n                            // truncate long errors so we don't blow up the user's logs\n                            shortStr = resStr.slice(0, 320) + \"…\";\n                        }\n                        else {\n                            shortStr = resStr;\n                        }\n                        let msg = `Invalid JSON response from fork provider:\\n\\n ${shortStr}`;\n                        if ((resStr.startsWith(\"invalid project id\") ||\n                            resStr.startsWith(\"project id required in the url\")) &&\n                            this.url.host.endsWith(\"infura.io\")) {\n                            msg += `\\n\\nThe provided fork url, ${this.url}, may be an invalid or incorrect Infura endpoint.`;\n                            msg += `\\nVisit https://infura.io/docs/ethereum for Infura documentation.`;\n                        }\n                        deferred.reject(new Error(msg));\n                    }\n                });\n            });\n            // after 5 seconds of idle abort the request\n            req.setTimeout(5000, req.abort.bind(req, null));\n            req.on(\"error\", deferred.reject);\n            req.write(postData);\n            req.end();\n            return deferred.promise.finally(() => this.requestCache.delete(key));\n        };\n        return await this.queueRequest(method, params, key, send, options);\n    }\n}\nexports.HttpHandler = HttpHandler;\n//# sourceMappingURL=http-handler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProviderHandler = void 0;\nconst base_handler_1 = require(\"./base-handler\");\nclass ProviderHandler extends base_handler_1.BaseHandler {\n    constructor(options, abortSignal) {\n        super(options, abortSignal);\n        const provider = options.fork.provider;\n        if (typeof provider.request === \"function\") {\n            this._request = async (method, params) => {\n                try {\n                    const result = await provider.request({ method, params });\n                    const response = { result };\n                    return { response, raw: JSON.stringify(response) };\n                }\n                catch (error) {\n                    // if this doesn't appear to be a JSON-RPC \"coded\" error it might be\n                    // a network level error, or something else we don't know how to\n                    // handle. Throw so stack traces are preserved.\n                    if (typeof error.code !== \"number\")\n                        throw error;\n                    return {\n                        response: { error },\n                        raw: null\n                    };\n                }\n            };\n        }\n        else if (typeof provider.send === \"function\") {\n            this._request = async (method, params) => {\n                return await new Promise((resolve, reject) => {\n                    const request = {\n                        id: this.id++,\n                        jsonrpc: \"2.0\",\n                        method,\n                        params\n                    };\n                    provider.send(request, (err, response) => {\n                        if (err)\n                            return void reject(err);\n                        resolve({\n                            response,\n                            raw: JSON.stringify(response)\n                        });\n                    });\n                });\n            };\n        }\n        else {\n            throw new Error(\"Forking `provider` must be EIP-1193 compatible\");\n        }\n    }\n    async request(method, params, options = { disableCache: false }) {\n        // format params via JSON stringification because the params might\n        // be Quantity or Data, which aren't valid as `params` themselves,\n        // but when JSON stringified they are\n        const strParams = JSON.stringify(params);\n        return await this.queueRequest(method, params, `${method}:${strParams}`, () => this._request(method, JSON.parse(strParams)), options);\n    }\n}\nexports.ProviderHandler = ProviderHandler;\n//# sourceMappingURL=provider-handler.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsHandler = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ws_1 = __importDefault(require(\"ws\"));\nconst base_handler_1 = require(\"./base-handler\");\nconst deferred_1 = __importDefault(require(\"../deferred\"));\nconst { JSONRPC_PREFIX } = base_handler_1.BaseHandler;\nclass WsHandler extends base_handler_1.BaseHandler {\n    constructor(options, abortSignal) {\n        super(options, abortSignal);\n        this.inFlightRequests = new Map();\n        const { url, origin } = options.fork;\n        this.connection = new ws_1.default(url.toString(), {\n            origin,\n            headers: this.headers\n        });\n        // `nodebuffer` is already the default, but I just wanted to be explicit\n        // here because when `nodebuffer` is the binaryType the `message` event's\n        // data type is guaranteed to be a `Buffer`. We don't need to check for\n        // different types of data.\n        // I mention all this because if `arraybuffer` or `fragment` is used for the\n        // binaryType the `\"message\"` event's `data` may end up being\n        // `ArrayBuffer | Buffer`, or `Buffer[] | Buffer`, respectively.\n        // If you need to change this, you probably need to change our `onMessage`\n        // handler too.\n        this.connection.binaryType = \"nodebuffer\";\n        this.open = this.connect(this.connection);\n        this.connection.onclose = () => {\n            // try to connect again...\n            // TODO: backoff and eventually fail\n            this.open = this.connect(this.connection);\n        };\n        this.abortSignal.addEventListener(\"abort\", () => {\n            this.connection.onclose = null;\n            this.connection.close(1000);\n        });\n        this.connection.onmessage = this.onMessage.bind(this);\n    }\n    async request(method, params, options = { disableCache: false }) {\n        await this.open;\n        if (this.abortSignal.aborted)\n            return Promise.reject(new ethereum_utils_1.AbortError());\n        const key = JSON.stringify({ method, params });\n        const send = () => {\n            if (this.abortSignal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            const messageId = this.id++;\n            const deferred = (0, deferred_1.default)();\n            // TODO: timeout an in-flight request after some amount of time\n            this.inFlightRequests.set(messageId, deferred);\n            this.connection.send(`${JSONRPC_PREFIX}${messageId},${key.slice(1)}`);\n            return deferred.promise.finally(() => this.requestCache.delete(key));\n        };\n        return await this.queueRequest(method, params, key, send, options);\n    }\n    onMessage(event) {\n        if (event.type !== \"message\")\n            return;\n        // data is always a `Buffer` because the websocket's binaryType is set to\n        // `nodebuffer`\n        const raw = event.data;\n        // TODO: handle invalid JSON (throws on parse)?\n        const response = JSON.parse(raw);\n        const id = response.id;\n        const prom = this.inFlightRequests.get(id);\n        if (prom) {\n            this.inFlightRequests.delete(id);\n            prom.resolve({ response, raw: raw });\n        }\n    }\n    connect(connection) {\n        let open = new Promise((resolve, reject) => {\n            connection.onopen = resolve;\n            connection.onerror = reject;\n        });\n        open.then(() => {\n            connection.onopen = null;\n            connection.onerror = null;\n        }, err => {\n            console.log(err);\n        });\n        return open;\n    }\n    async close() {\n        await super.close();\n        this.connection.close();\n    }\n}\nexports.WsHandler = WsHandler;\n//# sourceMappingURL=ws-handler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nfunction encode(parts) {\n    const l = parts.length;\n    let totalLength = 0;\n    const pieces = [];\n    for (let i = 0; i < l; i++) {\n        const part = parts[i];\n        if (part === null) {\n            totalLength += 2; // {length of the length} (`1`) + {length} (`0`)\n            pieces.push([utils_1.BUFFER_ZERO, utils_1.BUFFER_EMPTY]);\n        }\n        else {\n            const length = part.length;\n            const lengthBuffer = utils_1.Quantity.toBuffer(length);\n            const lengthLength = lengthBuffer.length;\n            totalLength += 1 + lengthLength + length;\n            pieces.push([lengthBuffer, part]);\n        }\n    }\n    const encoded = Buffer.allocUnsafe(totalLength);\n    let offset = 0;\n    for (let i = 0; i < l; i++) {\n        const [lengthBuffer, part] = pieces[i];\n        const lengthLength = lengthBuffer.length;\n        encoded[offset++] = lengthLength;\n        lengthBuffer.copy(encoded, offset, 0, lengthLength);\n        part.copy(encoded, (offset += lengthLength), 0, part.length);\n        offset += part.length;\n    }\n    return encoded;\n}\nexports.encode = encode;\nfunction decode(encoded) {\n    const parts = [];\n    for (let i = 0, l = encoded.length; i < l;) {\n        const lengthLength = encoded[i++];\n        const length = utils_1.Quantity.from(encoded.slice(i, (i += lengthLength))).toNumber();\n        parts.push(encoded.slice(i, (i += length)));\n    }\n    return parts;\n}\nexports.decode = decode;\n//# sourceMappingURL=lexicographic-key-codec.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Ancestry = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst tree_1 = require(\"./tree\");\nclass Ancestry {\n    constructor(db, parent) {\n        /**\n         * Prevents fetching the same key from the database simultaneously.\n         */\n        this.cacheLock = new Map();\n        this.db = db;\n        if (parent == null) {\n            this.next = null;\n            this.knownAncestors = new Set();\n        }\n        else {\n            this.next = parent.closestKnownAncestor.equals(utils_1.BUFFER_EMPTY)\n                ? null\n                : parent.closestKnownAncestor;\n            this.knownAncestors = new Set([parent.hash.toString(\"hex\")]);\n        }\n    }\n    async loadNextAncestor(next) {\n        const k = next.toString(\"hex\");\n        if (this.cacheLock.has(k)) {\n            throw new Error(\"couldn't load next ancestor as it is locked\");\n        }\n        let resolver;\n        this.cacheLock.set(k, new Promise(resolve => {\n            resolver = resolve;\n        }));\n        const value = await this.db.get(next);\n        const node = tree_1.Tree.deserialize(next, value);\n        this.next = node.closestKnownAncestor.equals(utils_1.BUFFER_EMPTY)\n            ? null\n            : node.closestKnownAncestor;\n        this.knownAncestors.add(node.hash.toString(\"hex\"));\n        this.cacheLock.delete(k);\n        resolver();\n    }\n    async has(key) {\n        const strKey = key.toString(\"hex\");\n        if (this.knownAncestors.has(strKey)) {\n            return true;\n        }\n        else if (this.next) {\n            const cacheLock = this.cacheLock.get(this.next.toString(\"hex\"));\n            if (cacheLock) {\n                await cacheLock;\n                return this.has(key);\n            }\n            await this.loadNextAncestor(this.next);\n            return this.has(key);\n        }\n        else {\n            return false;\n        }\n    }\n}\nexports.Ancestry = Ancestry;\n//# sourceMappingURL=ancestry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBlockByNumber = exports.findClosestDescendants = exports.findClosestAncestor = exports.findRelated = exports.resolveTargetAndClosestAncestor = exports.setDbVersion = exports.getBlockNumberFromParams = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst tree_1 = require(\"./tree\");\nfunction getBlockNumberFromParams(method, params) {\n    // get the request's block number\n    switch (method) {\n        case \"eth_getBlockByNumber\":\n            return params[0];\n        case \"eth_getTransactionCount\":\n        case \"eth_getCode\":\n        case \"eth_getBalance\":\n            return params[1];\n        case \"eth_getStorageAt\":\n            return params[2];\n        default:\n            return null;\n    }\n}\nexports.getBlockNumberFromParams = getBlockNumberFromParams;\nasync function setDbVersion(db, version) {\n    // set the version if the DB was just created, or error if we already have\n    // a version, but it isn't what we expected\n    try {\n        const recordedVersion = await db.get(\"version\");\n        if (!version.equals(recordedVersion)) {\n            // in the future this is where database migrations would go\n            throw new Error(`Persistent cache version \"${version.toString()}\"\" is not understood.`);\n        }\n    }\n    catch (e) {\n        if (!e.notFound)\n            throw e;\n        // if we didn't have a `version` key we need to set one\n        await db.put(\"version\", version);\n    }\n}\nexports.setDbVersion = setDbVersion;\nasync function resolveTargetAndClosestAncestor(db, request, targetHeight, targetHash) {\n    let targetBlock;\n    let closestAncestor;\n    let previousClosestAncestor;\n    try {\n        const key = tree_1.Tree.encodeKey(targetHeight, targetHash);\n        targetBlock = tree_1.Tree.deserialize(key, await db.get(key));\n        if (targetBlock.closestKnownAncestor.equals(utils_1.BUFFER_EMPTY)) {\n            // we are the genesis/earliest block\n            closestAncestor = null;\n            previousClosestAncestor = null;\n        }\n        else {\n            previousClosestAncestor = tree_1.Tree.deserialize(targetBlock.closestKnownAncestor, await db.get(targetBlock.closestKnownAncestor));\n            // check if we are still the closest known ancestor\n            closestAncestor =\n                (await findClosestAncestor(db, request, targetHeight, previousClosestAncestor.key)) || previousClosestAncestor;\n        }\n    }\n    catch (e) {\n        // something bad happened (I/O failure?), bail\n        if (!e.notFound)\n            throw e;\n        previousClosestAncestor = null;\n        // we couldn't find our target block in the database so we need to figure\n        // out it's relationships via the blockchain.\n        // In order to avoid requesting the \"earliest\" block unnecessarily, we\n        // assume the \"earliest\" block can't be before block 0 (which seems like a\n        // reasonable assumption to me!).\n        // If our target is block `0` then we can't have a closest ancestor since\n        // we are the first block\n        if (targetHeight.toBigInt() === 0n) {\n            closestAncestor = null;\n            targetBlock = new tree_1.Tree(targetHeight, targetHash);\n        }\n        else {\n            const earliestBlock = await getBlockByNumber(request, ethereum_utils_1.Tag.earliest);\n            if (!earliestBlock)\n                throw new Error('Could not find \"earliest\" block.');\n            const { hash: earliestHash, number: earliestNumber } = earliestBlock;\n            const hash = utils_1.Data.from(earliestHash, 32);\n            const earliest = new tree_1.Tree(utils_1.Quantity.from(earliestNumber), hash);\n            closestAncestor =\n                (await findClosestAncestor(db, request, targetHeight, earliest.key)) ||\n                    earliest;\n            targetBlock = new tree_1.Tree(targetHeight, targetHash, closestAncestor.key);\n        }\n    }\n    return {\n        targetBlock,\n        closestAncestor,\n        previousClosestAncestor\n    };\n}\nexports.resolveTargetAndClosestAncestor = resolveTargetAndClosestAncestor;\nasync function* findRelated(db, request, options) {\n    const readStream = db.createReadStream({\n        keys: true,\n        values: true,\n        ...options\n    });\n    for await (const pair of readStream) {\n        const { key, value } = pair;\n        const node = tree_1.Tree.deserialize(key, value);\n        const { height: candidateHeight } = node.decodeKey();\n        const block = await getBlockByNumber(request, candidateHeight);\n        // if the chain has a block at this height, and the hash of the\n        // block is the same as the one in the db we've found our closest\n        // ancestor!\n        if (block != null && block.hash === utils_1.Data.toString(node.hash)) {\n            yield node;\n        }\n    }\n}\nexports.findRelated = findRelated;\n/**\n *\n * @param height - Search only before this block height (exclusive)\n * @param upTo - Search up to this key (inclusive)\n * @returns the closest known ancestor, or `upTo` if we know of no ancestors\n */\nasync function findClosestAncestor(db, request, height, upTo) {\n    const generator = findRelated(db, request, {\n        gte: upTo,\n        lt: tree_1.Tree.encodeKey(height, utils_1.Data.Empty),\n        reverse: true\n    });\n    const first = await generator.next();\n    await generator.return();\n    return first.value;\n}\nexports.findClosestAncestor = findClosestAncestor;\n/**\n *\n * @param height - Search only after this block height (exclusive)\n * @returns the closest known descendants, or null\n */\nasync function* findClosestDescendants(db, request, height) {\n    const generator = findRelated(db, request, {\n        gte: tree_1.Tree.encodeKey(utils_1.Quantity.from(height.toBigInt() + 1n), utils_1.Data.Empty),\n        reverse: false\n    });\n    for await (const node of generator) {\n        yield node;\n    }\n}\nexports.findClosestDescendants = findClosestDescendants;\nasync function getBlockByNumber(request, blockNumber) {\n    return await request(\"eth_getBlockByNumber\", [blockNumber.toString(), false]);\n}\nexports.getBlockByNumber = getBlockByNumber;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PersistentCache = void 0;\nconst tree_1 = require(\"./tree\");\nconst fs_1 = require(\"fs\");\nconst env_paths_1 = __importDefault(require(\"env-paths\"));\nconst leveldown_1 = __importDefault(require(\"leveldown\"));\nconst subleveldown_1 = __importDefault(require(\"subleveldown\"));\nconst encoding_down_1 = __importDefault(require(\"encoding-down\"));\nconst lexico = __importStar(require(\"../lexicographic-key-codec\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ancestry_1 = require(\"./ancestry\");\nconst helpers_1 = require(\"./helpers\");\nconst levelup = require(\"levelup\");\nconst levelupOptions = {\n    keyEncoding: \"binary\",\n    valueEncoding: \"binary\"\n};\nconst leveldownOpts = { prefix: \"\" };\nconst maxValueByteBuffer = Buffer.from([0xff]);\n/**\n * A leveldb-backed cache that enables associating immutable data as it existed\n * at a specific height on a blockchain.\n *\n * The design affords faster db reads (one read to get known closest ancestors\n * and descendants) and fast db writes (one write per node in a relationship).\n */\nclass PersistentCache {\n    constructor() {\n        this.version = utils_1.BUFFER_ZERO;\n        /**\n         * `reBalancePromise` is used at shutdown to ensure we are done balancing the\n         * tree\n         *\n         */\n        this._reBalancePromise = null;\n        this.status = \"open\";\n    }\n    static async deleteDb(dbSuffix) {\n        return new Promise((resolve, reject) => {\n            const directory = PersistentCache.getDbDirectory(dbSuffix);\n            leveldown_1.default.destroy(directory, err => {\n                if (err)\n                    return void reject(err);\n                resolve(void 0);\n            });\n        });\n    }\n    /**\n     * Serializes the entire database world state into a JSON tree\n     */\n    static async serializeDb(dbSuffix) {\n        const cache = await PersistentCache.create(dbSuffix);\n        return await new Promise(async (resolve) => {\n            const rs = cache.ancestorDb.createReadStream({\n                gte: utils_1.BUFFER_ZERO,\n                keys: true,\n                values: true\n            });\n            const tree = {};\n            const collection = {};\n            for await (const data of rs) {\n                const { key, value } = data;\n                const node = tree_1.Tree.deserialize(key, value);\n                node.height = node.decodeKey().height.toNumber();\n                const keyHex = key.toString(\"hex\");\n                const parentKeyHex = node.closestKnownAncestor.toString(\"hex\");\n                collection[keyHex] = node;\n                if (node.closestKnownAncestor.length === 0) {\n                    tree[keyHex] = node;\n                }\n                else {\n                    const descendants = collection[parentKeyHex].descendants || {};\n                    descendants[keyHex] = node;\n                    collection[parentKeyHex].descendants = descendants;\n                }\n                node.hash = utils_1.Data.toString(node.hash);\n                node.parent =\n                    node.closestKnownAncestor.length > 0\n                        ? utils_1.Data.toString(collection[parentKeyHex].hash)\n                        : null;\n                delete node.key;\n                // delete node.hash;\n                delete node.closestKnownDescendants;\n                delete node.closestKnownAncestor;\n            }\n            await cache.close();\n            resolve(JSON.parse(JSON.stringify(tree)));\n        });\n    }\n    static getDbDirectory(suffix = \"\") {\n        const { data: directory } = (0, env_paths_1.default)(\"Ganache/db\", {\n            suffix\n        });\n        return directory;\n    }\n    static async create(dbSuffix) {\n        const cache = new PersistentCache();\n        const directory = PersistentCache.getDbDirectory(dbSuffix);\n        await fs_1.promises.mkdir(directory, { recursive: true });\n        const store = (0, encoding_down_1.default)((0, leveldown_1.default)(directory, leveldownOpts), levelupOptions);\n        const db = await new Promise((resolve, reject) => {\n            const db = levelup(store, (err) => {\n                if (err)\n                    return void reject(err);\n                resolve(db);\n            });\n        });\n        cache.db = db;\n        cache.cacheDb = (0, subleveldown_1.default)(db, \"c\", levelupOptions);\n        cache.ancestorDb = (0, subleveldown_1.default)(db, \"a\", levelupOptions);\n        await cache.cacheDb.open();\n        await cache.ancestorDb.open();\n        await (0, helpers_1.setDbVersion)(cache.db, cache.version);\n        return cache;\n    }\n    async initialize(height, hash, request) {\n        this.hashBuffer = hash.toBuffer();\n        this.request = request;\n        const { targetBlock, closestAncestor, previousClosestAncestor } = await (0, helpers_1.resolveTargetAndClosestAncestor)(this.ancestorDb, this.request, height, hash);\n        this.ancestry = new ancestry_1.Ancestry(this.ancestorDb, closestAncestor);\n        const atomicBatch = this.ancestorDb.batch();\n        // if we changed closest ancestors remove our targetBlock from the previous\n        // ancestor so our target block doesn't appear in the database more than\n        // once, and update our targetBlock to point to this new ancestor\n        if (previousClosestAncestor &&\n            !previousClosestAncestor.key.equals(closestAncestor.key)) {\n            targetBlock.closestKnownAncestor = closestAncestor.key;\n            const index = previousClosestAncestor.closestKnownDescendants.findIndex(buf => buf.equals(targetBlock.key));\n            previousClosestAncestor.closestKnownDescendants.splice(index, 1);\n            atomicBatch.put(previousClosestAncestor.key, previousClosestAncestor.serialize());\n        }\n        let allKnownDescendants = [...targetBlock.closestKnownDescendants];\n        // if we don't have a closestAncestor it because the target block is block 0\n        if (closestAncestor == null) {\n            atomicBatch.put(targetBlock.key, targetBlock.serialize());\n        }\n        else {\n            const ancestorsDescendants = [targetBlock.key];\n            await Promise.all(closestAncestor.closestKnownDescendants.map(async (descendantKey) => {\n                // don't match ourself\n                if (descendantKey.equals(targetBlock.key))\n                    return;\n                const { height: descendantHeight } = tree_1.Tree.decodeKey(descendantKey);\n                // if the block number is less than our own it can't be our descendant\n                if (descendantHeight.toBigInt() <= height.toBigInt()) {\n                    ancestorsDescendants.push(descendantKey);\n                    return;\n                }\n                const descendantValue = await this.ancestorDb.get(descendantKey);\n                const descendantNode = tree_1.Tree.deserialize(descendantKey, descendantValue);\n                const descendantRawBlock = await this.getBlock(descendantHeight);\n                // if the block doesn't exist on our chain, it can't be our child,\n                // keep it in the parent\n                if (descendantRawBlock == null ||\n                    descendantRawBlock.hash !== utils_1.Data.toString(descendantNode.hash, 32)) {\n                    ancestorsDescendants.push(descendantKey);\n                }\n                else {\n                    targetBlock.closestKnownDescendants.push(descendantNode.key);\n                    // keep track of *all* known descendants so we don't bother\n                    // checking if they are a known closest descendant later on\n                    allKnownDescendants.push(...descendantNode.closestKnownDescendants);\n                    descendantNode.closestKnownAncestor = targetBlock.key;\n                    // update the descendant node with its newly assigned\n                    // closestKnownAncestor\n                    atomicBatch.put(descendantNode.key, descendantNode.serialize());\n                }\n            }));\n            closestAncestor.closestKnownDescendants = ancestorsDescendants;\n            atomicBatch.put(closestAncestor.key, closestAncestor.serialize());\n        }\n        // TODO(perf): we always re-save the targetBlock but could optimize to only\n        // resave if it is needed.\n        atomicBatch.put(targetBlock.key, targetBlock.serialize());\n        await atomicBatch.write();\n        // we DO want to re-balance the descendants, but we don't want to wait for\n        // it because it can't effect our current fork block's cache results since\n        // these caches will be for blocks higher than our own fork block\n        // Do not `await` this.\n        this._reBalancePromise = this.reBalanceDescendantTree(height, targetBlock, allKnownDescendants)\n            // we don't care if it fails because this is an optimization that only\n            // matters for _future_ runs of ganache for blocks beyond our current fork\n            // block\n            .catch(_ => { })\n            .finally(() => {\n            this._reBalancePromise = null;\n        });\n    }\n    async getBlock(height) {\n        return await (0, helpers_1.getBlockByNumber)(this.request, height);\n    }\n    async reBalanceDescendantTree(height, targetBlock, allKnownDescendants) {\n        const atomicBatch = this.ancestorDb.batch();\n        const closestKnownDescendants = targetBlock.closestKnownDescendants;\n        const startSize = closestKnownDescendants.length;\n        for await (const maybeDescendant of (0, helpers_1.findClosestDescendants)(this.ancestorDb, this.request, height)) {\n            const key = maybeDescendant.key;\n            // don't match with our own self\n            if (targetBlock.key.equals(key))\n                continue;\n            // this possibleDescendent's descendants can't be our direct descendants\n            // because trees can't merge\n            allKnownDescendants.push(...maybeDescendant.closestKnownDescendants);\n            // if this already is a descendent of ours we can skip it\n            if (closestKnownDescendants.some(d => d.equals(key)))\n                continue;\n            // if this already is a descendent of one of our descendants skip it\n            if (allKnownDescendants.some(d => d.equals(key)))\n                continue;\n            // move the descendant from the parent to the target\n            const parentTree = tree_1.Tree.deserialize(maybeDescendant.closestKnownAncestor, await this.ancestorDb.get(maybeDescendant.closestKnownAncestor));\n            parentTree.closestKnownDescendants.splice(parentTree.closestKnownDescendants.findIndex(d => d.equals(key)), 1);\n            maybeDescendant.closestKnownAncestor = targetBlock.key;\n            closestKnownDescendants.push(maybeDescendant.key);\n            atomicBatch.put(parentTree.key, parentTree.serialize());\n            atomicBatch.put(maybeDescendant.key, maybeDescendant.serialize());\n            // if the cache has been closed stop doing work so we can flush what we\n            // have to the database; descendant resolution shouldn't prevent us from\n            // fulling closing.\n            if (this.status === \"closed\") {\n                break;\n            }\n        }\n        // only write if we have changes to write\n        if (startSize !== closestKnownDescendants.length) {\n            atomicBatch.put(targetBlock.key, targetBlock.serialize());\n            // check `this.ancestorDb.isOpen()` as we don't need to try to write if\n            // the db was shutdown in the meantime. This can happen if ganache was\n            // closed while we were still updating the descendants\n            if (atomicBatch.length > 0 && this.ancestorDb.isOpen())\n                await atomicBatch.write();\n        }\n    }\n    async get(method, params, key) {\n        const blockNumber = (0, helpers_1.getBlockNumberFromParams)(method, params);\n        if (blockNumber == null)\n            return;\n        const height = utils_1.Quantity.from(blockNumber);\n        const bufKey = Buffer.from(key);\n        const start = lexico.encode([height.toBuffer(), bufKey]);\n        const end = Buffer.concat([start, maxValueByteBuffer]);\n        const readStream = this.cacheDb.createReadStream({\n            gt: start,\n            lt: end,\n            keys: true,\n            values: true\n        });\n        for await (const data of readStream) {\n            const { key: k, value } = data;\n            const [_height, _key, blockHash] = lexico.decode(k);\n            // if our key no longer matches make sure we don't keep searching\n            if (!_key.equals(bufKey))\n                return;\n            if (this.hashBuffer.equals(blockHash) ||\n                (await this.ancestry.has(blockHash))) {\n                return value;\n            }\n        }\n    }\n    async put(method, params, key, value) {\n        const blockNumber = (0, helpers_1.getBlockNumberFromParams)(method, params);\n        if (blockNumber == null)\n            return false;\n        const height = utils_1.Quantity.from(blockNumber);\n        const dbKey = lexico.encode([\n            height.toBuffer(),\n            Buffer.from(key),\n            this.hashBuffer\n        ]);\n        await this.cacheDb.put(dbKey, value);\n        return true;\n    }\n    async close() {\n        if (this.status === \"closed\")\n            return;\n        this.status = \"closed\";\n        if (this.cacheDb) {\n            await this.cacheDb.close();\n        }\n        if (this.ancestorDb) {\n            await this._reBalancePromise;\n            await this.ancestorDb.close();\n        }\n        if (this.db) {\n            await this.db.close();\n        }\n    }\n}\nexports.PersistentCache = PersistentCache;\n//# sourceMappingURL=persistent-cache.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tree = void 0;\nconst lexico = __importStar(require(\"../lexicographic-key-codec\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp = __importStar(require(\"@ganache/rlp\"));\n/**\n * A tree: https://en.wikipedia.org/wiki/Rose_tree\n * One parent, multiple children\n */\nclass Tree {\n    constructor(height, hash, closestKnownAncestor = utils_1.BUFFER_EMPTY) {\n        this.closestKnownDescendants = [];\n        this.key = Tree.encodeKey(height, hash);\n        this.hash = hash.toBuffer();\n        this.closestKnownAncestor = closestKnownAncestor;\n    }\n    serialize() {\n        return rlp.encode([\n            this.hash,\n            this.closestKnownAncestor,\n            this.closestKnownDescendants\n        ]);\n    }\n    decodeKey() {\n        return Tree.decodeKey(this.key);\n    }\n    static decodeKey(key) {\n        const [height, hash] = lexico.decode(key);\n        return {\n            height: utils_1.Quantity.from(height),\n            hash: utils_1.Data.from(hash)\n        };\n    }\n    static deserialize(key, value) {\n        const [hash, parent, children] = rlp.decode(value);\n        const tree = Object.create(Tree.prototype);\n        tree.key = key;\n        tree.hash = hash;\n        tree.closestKnownAncestor = parent;\n        tree.closestKnownDescendants = children;\n        return tree;\n    }\n    static encodeKey(height, hash) {\n        return lexico.encode([height.toBuffer(), hash.toBuffer()]);\n    }\n}\nexports.Tree = Tree;\n//# sourceMappingURL=tree.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LimitCounter = void 0;\n/**\n * @param timestamp -\n * @returns the milliseconds that have elapsed since `timestamp`\n */\nfunction timeSince(timestamp) {\n    return Date.now() - timestamp;\n}\nclass LimitCounter {\n    constructor(windowLength) {\n        this.counters = new Map();\n        this.windowLength = windowLength;\n    }\n    evict() {\n        const d = this.windowLength * 3;\n        if (timeSince(this.lastEvict) < d) {\n            return;\n        }\n        this.lastEvict = Date.now();\n        const counters = this.counters;\n        counters.forEach((v, k) => {\n            if (timeSince(v.updatedAt) >= d) {\n                counters.delete(k);\n            }\n        });\n    }\n    increment(currentWindow) {\n        this.evict();\n        let v = this.counters.get(currentWindow);\n        if (v == null) {\n            this.counters.set(currentWindow, { value: 1, updatedAt: Date.now() });\n        }\n        else {\n            v.value += 1;\n            v.updatedAt = Date.now();\n        }\n    }\n    get(currentWindow, previousWindow) {\n        let curr = this.counters.get(currentWindow);\n        if (curr == null) {\n            curr = { value: 0, updatedAt: Date.now() };\n        }\n        let prev = this.counters.get(previousWindow);\n        if (prev == null) {\n            prev = { value: 0, updatedAt: Date.now() };\n        }\n        return [curr.value, prev.value];\n    }\n}\nexports.LimitCounter = LimitCounter;\n//# sourceMappingURL=limit-counter.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst semaphore_1 = __importDefault(require(\"semaphore\"));\nconst limit_counter_1 = require(\"./limit-counter\");\n/**\n * Sleeps the specified number of milliseconds, then resolves the Promise.\n * Rejects with an `AbortError` if the provided `signal` is already aborted. If\n * the signal's `\"abort\"` event is invoked while sleeping, the the promise\n * rejects with an `AbortError`.\n *\n * @param ms - the number of milliseconds to wait before resolving\n * @param abortSignal - the\n * @returns a promise that resolves when `ms`milliseconds have elapsed, or\n * rejects if the `signal` is aborted.\n */\nconst sleep = (ms, signal) => {\n    if (signal.aborted)\n        return Promise.reject(new ethereum_utils_1.AbortError());\n    return new Promise((resolve, reject) => {\n        function abort() {\n            clearTimeout(timer);\n            signal.removeEventListener(\"abort\", abort);\n            reject(new ethereum_utils_1.AbortError());\n        }\n        const timer = setTimeout(() => {\n            signal.removeEventListener(\"abort\", abort);\n            resolve();\n        }, ms);\n        signal.addEventListener(\"abort\", abort);\n    });\n};\n/**\n * @param timestamp -\n * @param duration -\n * @returns the result of rounding `timestamp` toward zero to a multiple of\n * `duration`.\n */\nfunction timeTruncate(timestamp, duration) {\n    return timestamp - (timestamp % duration);\n}\n/**\n * @param result -\n * @returns true if the result is a JSON-RPC LIMIT_EXCEEDED error\n */\nfunction isExceededLimitError(response) {\n    return ((0, utils_1.hasOwn)(response, \"error\") &&\n        response.error != null &&\n        response.error.code === utils_1.JsonRpcErrorCode.LIMIT_EXCEEDED);\n}\n/**\n * A sliding window rate limiter.\n *\n * Rate estimation from\n * https://blog.cloudflare.com/counting-things-a-lot-of-different-things/\n *\n * Let's say we set a limit of 50 requests per minute. The counter can be\n * thought of like this:\n *\n * ```ascii\n *         ╔══════════════════════════════════╗\n *         ║   sampling period: 60 seconds    ║\n * ╭───────╫────────────────────────┬─────────╫──────────────────────╮\n * │       ║previous minute         │         current minute         │\n * │       ║  42 requests           │         ║18 requests           │\n * ╰───────╫────────────────────────┼─────────╫──────────────────────╯\n *         ║         45 secs        │ 15 secs ║\n *         ╚════════════════════════╧═════════╝\n * ```\n *\n * In this situation, we did 18 requests during the current minute, which\n * started 15 seconds ago, and 42 requests during the entire previous minute.\n * Based on this information, the rate approximation is calculated like this:\n *\n * ```javascript\n * rate = (42 * (45 / 60)) + 18\n *      = (42 * 0.75) + 18\n *      = 49.5 // requests\n *\n *      = 59.5 // requests\n * ```\n *\n * One more request during the next second and the rate limiter will kick in.\n *\n * This algorithm assumes a constant rate of requests during the previous\n * sampling period (which can be any time span), so the result is only\n * an approximation of the actual rate, but it is quick to calculate and\n * lightweight.\n */\nclass RateLimiter {\n    constructor(requestLimit, windowSizeMs, abortSignal) {\n        this.sem = (0, semaphore_1.default)(1);\n        this.take = () => new Promise(resolve => this.sem.take(resolve));\n        this.mustBackoff = null;\n        this.counter = 0;\n        this.requestLimit = requestLimit;\n        // the rate limiter splits the window in 2 to measure the RPS\n        this.windowSizeMs = windowSizeMs / 2;\n        this.limitCounter = new limit_counter_1.LimitCounter(this.windowSizeMs);\n        this.abortSignal = abortSignal;\n    }\n    /**\n     * @param now -\n     * @param currentWindow -\n     * @returns the current request rate and the allowed execution time of the\n     * next request\n     */\n    status(now, currentWindow) {\n        const limit = this.requestLimit;\n        const windowSizeMs = this.windowSizeMs;\n        const currWindow = currentWindow;\n        const prevWindow = currWindow - windowSizeMs;\n        const [currCount, prevCount] = this.limitCounter.get(currWindow, prevWindow);\n        let rate;\n        if (prevCount === 0) {\n            rate = currCount;\n        }\n        else {\n            // use the average for the previous window, plus everything for this\n            // window\n            rate =\n                prevCount * ((windowSizeMs - (now - currWindow)) / windowSizeMs) +\n                    currCount;\n        }\n        // limit <= 0 means the limiter is disabled\n        if (limit > 0 && rate + 1 > limit) {\n            const nextCount = currCount + 1;\n            const nextLimit = limit + 1;\n            const next = prevCount === 0\n                ? currWindow + windowSizeMs + windowSizeMs / nextLimit\n                : (windowSizeMs * (prevCount + nextCount - nextLimit)) / prevCount +\n                    currWindow;\n            return { rate, next };\n        }\n        return { rate, next: now };\n    }\n    /**\n     * Executes the given fn within the confines of the configured rate limit. If\n     * the function's return value is a JSON-RPC LIMIT_EXCEEDED error, it will\n     * automatically retry with the given `backoff_seconds`\n     * @param fn -\n     */\n    async handle(fn) {\n        // allow scheduling one fn at a time\n        await this.take();\n        try {\n            return await this.schedule(fn);\n        }\n        finally {\n            this.sem.leave();\n        }\n    }\n    async schedule(fn) {\n        const signal = this.abortSignal;\n        while (true) {\n            if (signal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            if (this.mustBackoff)\n                await this.mustBackoff;\n            const now = Date.now();\n            const currentWindow = timeTruncate(now, this.windowSizeMs);\n            const { rate, next } = this.status(now, currentWindow);\n            // process.stdout.write(\n            //   `rate: ${rate}, wait: ${next - now}              \\r`\n            // );\n            // if this request would be over the rate limit and the amount of time\n            // we'd need to back off is > 1ms we need to schedule this in the future\n            if (rate + 1 > this.requestLimit && next > now) {\n                await sleep(Date.now() - next, signal);\n            }\n            else {\n                this.limitCounter.increment(currentWindow);\n                const result = await fn();\n                if (isExceededLimitError(result.response)) {\n                    if ((0, utils_1.hasOwn)(result.response.error.data, \"rate\")) {\n                        const backoffSeconds = result.response.error.data.rate.backoff_seconds;\n                        // console.log(`backing off for ${backoffSeconds}`);\n                        // console.log(result.error.data.rate);\n                        // TODO: I need to make all in-flight requests that will soon return\n                        // a LIMIT_EXCEEDED error behave, otherwise we'll just send ALL\n                        // requests back to Infura simultaneously after their initial 30\n                        // backoff_seconds have elapsed.\n                        //\n                        // When we are *not* self-rate limited (meaning fork.rps isn't set)\n                        // we need to be able to go at full speed until we are, and THEN we\n                        // need to go at whatever infura wants.\n                        //\n                        // TODO: TODO: ask infura to add the X-Rate-Limit* headers to all\n                        // HTTP responses so we can poll for info to help us avoid ever\n                        // getting rate limited in the first place.\n                        // this is part of an attempt at solving the above comment\n                        this.requestLimit =\n                            result.response.error.data.rate.allowed_rps *\n                                (this.windowSizeMs / 1000);\n                        const limiter = (this.mustBackoff = sleep(backoffSeconds * 1000, signal));\n                        await this.mustBackoff;\n                        if (this.mustBackoff === limiter) {\n                            this.mustBackoff = null;\n                        }\n                        continue;\n                    }\n                    else {\n                        // we don't know how to parse this error, so we do nothing, I guess?\n                    }\n                }\n                return result;\n            }\n        }\n    }\n}\nexports.default = RateLimiter;\n//# sourceMappingURL=rate-limiter.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkStateManager = void 0;\nconst rlp_1 = require(\"rlp\");\nconst stateManager_1 = __importDefault(require(\"@ethereumjs/vm/dist/state/stateManager\"));\nconst cache_1 = require(\"./cache\");\n/**\n * Interface for getting and setting data from an underlying\n * state trie.\n */\nclass ForkStateManager extends stateManager_1.default {\n    /**\n     * Instantiate the StateManager interface.\n     */\n    constructor(opts) {\n        super(opts);\n        this._cache = new cache_1.ForkCache(opts.trie);\n    }\n    /**\n     * Copies the current instance of the `StateManager`\n     * at the last fully committed point, i.e. as if all current\n     * checkpoints were reverted.\n     */\n    copy() {\n        return new ForkStateManager({\n            trie: this._trie.copy(false),\n            common: this._common\n        });\n    }\n    /**\n     * Creates a storage trie from the primary storage trie\n     * for an account and saves this in the storage cache.\n     * @private\n     */\n    async _lookupStorageTrie(address) {\n        // from state trie\n        const account = await this.getAccount(address);\n        const storageTrie = this._trie.copy(true);\n        storageTrie.setContext(account.stateRoot, address.buf, storageTrie.blockNumber);\n        // we copy checkpoints over only for the metadata checkpoints, not the trie\n        // checkpoints.\n        storageTrie.db.checkpoints = [];\n        return storageTrie;\n    }\n    /**\n     * Gets the storage value associated with the provided `address` and `key`.\n     * This method returns the shortest representation of the stored value.\n     * @param address - Address of the account to get the storage for\n     * @param key - Key in the account's storage to get the value for. Must be 32\n     * bytes long.\n     * @returns {Promise<Buffer>} - The storage value for the account\n     * corresponding to the provided address at the provided key. If this does not\n     * exist an empty `Buffer` is returned.\n     */\n    async getContractStorage(address, key) {\n        const trie = (await this._getStorageTrie(address));\n        const value = await trie.get(key);\n        return (0, rlp_1.decode)(value);\n    }\n}\nexports.ForkStateManager = ForkStateManager;\n//# sourceMappingURL=state-manager.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkTrie = void 0;\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst utils_1 = require(\"@ganache/utils\");\nconst trie_1 = require(\"../helpers/trie\");\nconst subleveldown_1 = __importDefault(require(\"subleveldown\"));\nconst checkpointDb_1 = require(\"merkle-patricia-tree/dist/checkpointDb\");\nconst lexico = __importStar(require(\"./lexicographic-key-codec\"));\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst DELETED_VALUE = Buffer.allocUnsafe(1).fill(1);\nconst GET_CODE = \"eth_getCode\";\nconst GET_NONCE = \"eth_getTransactionCount\";\nconst GET_BALANCE = \"eth_getBalance\";\nconst GET_STORAGE_AT = \"eth_getStorageAt\";\nconst MetadataSingletons = new WeakMap();\nconst LEVELDOWN_OPTIONS = {\n    keyEncoding: \"binary\",\n    valueEncoding: \"binary\"\n};\nfunction isEqualKey(encodedKey, address, key) {\n    const decodedKey = lexico.decode(encodedKey);\n    const [_, keyAddress, deletedKey] = decodedKey;\n    return keyAddress.equals(address) && deletedKey.equals(key);\n}\nclass ForkTrie extends trie_1.GanacheTrie {\n    constructor(db, root, blockchain) {\n        super(db, root, blockchain);\n        this.address = null;\n        this.isPreForkBlock = false;\n        /**\n         * Gets an account from the fork/fallback.\n         *\n         * @param address - the address of the account\n         * @param blockNumber - the block number at which to query the fork/fallback.\n         * @param stateRoot - the state root at the given blockNumber\n         */\n        this.accountFromFallback = async (address, blockNumber) => {\n            const { fallback } = this.blockchain;\n            const number = this.blockchain.fallback.selectValidForkBlockNumber(blockNumber);\n            // get nonce, balance, and code from the fork/fallback\n            const codeProm = fallback.request(GET_CODE, [address, number]);\n            const promises = [\n                fallback.request(GET_NONCE, [address, number]),\n                fallback.request(GET_BALANCE, [address, number]),\n                null\n            ];\n            // create an account so we can serialize everything later\n            const account = new ethereum_utils_1.Account(address);\n            // because code requires additional asynchronous processing, we await and\n            // process it ASAP\n            try {\n                const codeHex = await codeProm;\n                if (codeHex !== \"0x\") {\n                    const code = utils_1.Data.toBuffer(codeHex);\n                    // the codeHash is just the keccak hash of the code itself\n                    account.codeHash = (0, utils_1.keccak)(code);\n                    if (!account.codeHash.equals(ethereumjs_util_1.KECCAK256_NULL)) {\n                        // insert the code directly into the database with a key of `codeHash`\n                        promises[2] = this.db.put(account.codeHash, code);\n                    }\n                }\n            }\n            catch (e) {\n                // Since we fired off some promises that may throw themselves we need to\n                // catch these errors and discard them.\n                Promise.all(promises).catch(e => { });\n                throw e;\n            }\n            // finally, set the `nonce` and `balance` on the account before returning\n            // the serialized data\n            const [nonce, balance] = await Promise.all(promises);\n            account.nonce =\n                nonce === \"0x0\" ? utils_1.Quantity.Empty : utils_1.Quantity.from(nonce, true);\n            account.balance =\n                balance === \"0x0\" ? utils_1.Quantity.Empty : utils_1.Quantity.from(balance);\n            return account.serialize();\n        };\n        this.storageFromFallback = async (address, key, blockNumber) => {\n            const result = await this.blockchain.fallback.request(GET_STORAGE_AT, [\n                `0x${address.toString(\"hex\")}`,\n                `0x${key.toString(\"hex\")}`,\n                this.blockchain.fallback.selectValidForkBlockNumber(blockNumber)\n            ]);\n            if (!result)\n                return null;\n            // remove the `0x` and all leading 0 pairs:\n            const compressed = result.replace(/^0x(00)*/, \"\");\n            const buf = Buffer.from(compressed, \"hex\");\n            return (0, rlp_1.encode)(buf);\n        };\n        this.accounts = blockchain.accounts;\n        this.blockNumber = this.blockchain.fallback.blockNumber;\n        this.forkBlockNumber = this.blockNumber.toBigInt();\n        if (MetadataSingletons.has(db)) {\n            this.metadata = new checkpointDb_1.CheckpointDB(MetadataSingletons.get(db));\n        }\n        else {\n            const metadataDb = (0, subleveldown_1.default)(db, \"f\", LEVELDOWN_OPTIONS);\n            MetadataSingletons.set(db, metadataDb);\n            this.metadata = new checkpointDb_1.CheckpointDB(metadataDb);\n        }\n    }\n    set root(value) {\n        this._root = value;\n    }\n    get root() {\n        return this._root;\n    }\n    checkpoint() {\n        super.checkpoint();\n        this.metadata.checkpoint(this.root);\n    }\n    async commit() {\n        await Promise.all([super.commit(), this.metadata.commit()]);\n    }\n    async revert() {\n        await Promise.all([super.revert(), this.metadata.revert()]);\n    }\n    setContext(stateRoot, address, blockNumber) {\n        this._root = stateRoot;\n        this.address = address;\n        this.blockNumber = blockNumber;\n        this.isPreForkBlock = blockNumber.toBigInt() < this.forkBlockNumber;\n    }\n    async put(key, val) {\n        return super.put(key, val);\n    }\n    /**\n     * Removes saved metadata from the given block range (inclusive)\n     * @param startBlockNumber - (inclusive)\n     * @param endBlockNumber - (inclusive)\n     */\n    async revertMetaData(startBlockNumber, endBlockNumber) {\n        const db = this.metadata._leveldb;\n        const stream = db.createKeyStream({\n            gte: lexico.encode([startBlockNumber.toBuffer()]),\n            lt: lexico.encode([\n                utils_1.Quantity.from(endBlockNumber.toBigInt() + 1n).toBuffer()\n            ])\n        });\n        const batch = db.batch();\n        for await (const key of stream)\n            batch.del(key);\n        await batch.write();\n    }\n    createDelKey(key) {\n        const blockNum = this.blockNumber.toBuffer();\n        return lexico.encode([blockNum, this.address, key]);\n    }\n    /**\n     * Checks if the key was deleted (locally -- not on the fork)\n     * @param key -\n     */\n    async keyWasDeleted(key) {\n        const selfAddress = this.address === null ? utils_1.BUFFER_EMPTY : this.address;\n        // check the uncommitted checkpoints for deleted keys before\n        // checking the database itself\n        // TODO(perf): there is probably a better/faster way of doing this for the\n        // common case.\n        const checkpoints = this.metadata.checkpoints;\n        for (let i = checkpoints.length - 1; i >= 0; i--) {\n            for (let [encodedKeyStr, value] of checkpoints[i].keyValueMap.entries()) {\n                if (!value || !value.equals(DELETED_VALUE))\n                    continue;\n                const encodedKey = Buffer.from(encodedKeyStr, \"binary\");\n                if (isEqualKey(encodedKey, selfAddress, key))\n                    return true;\n            }\n        }\n        // since we didn't find proof of deletion in a checkpoint let's check the\n        // database for it.\n        // We start searching from our database key (blockNum + address + key)\n        // down to the earliest block we know about.\n        // TODO(perf): this is just going to be slow once we get lots of keys\n        // because it just checks every single key we've ever deleted (before this\n        // one).\n        const stream = this.metadata._leveldb.createReadStream({\n            lte: this.createDelKey(key),\n            reverse: true\n        });\n        for await (const data of stream) {\n            const { key: encodedKey, value } = data;\n            if (!value || !value.equals(DELETED_VALUE))\n                continue;\n            if (isEqualKey(encodedKey, selfAddress, key))\n                return true;\n        }\n        // we didn't find proof of deletion so we return `false`\n        return false;\n    }\n    async del(key) {\n        await this.lock.wait();\n        // we only track if the key was deleted (locally) for state tries _after_\n        // the fork block because we can't possibly delete keys _before_ the fork\n        // block, since those happened before ganache was even started\n        // This little optimization can cut debug_traceTransaction time _in half_.\n        if (!this.isPreForkBlock) {\n            const delKey = this.createDelKey(key);\n            const metaDataPutPromise = this.metadata.put(delKey, DELETED_VALUE);\n            const hash = (0, utils_1.keccak)(key);\n            const { node, stack } = await this.findPath(hash);\n            if (node)\n                await this._deleteNode(hash, stack);\n            await metaDataPutPromise;\n        }\n        else {\n            const hash = (0, utils_1.keccak)(key);\n            const { node, stack } = await this.findPath(hash);\n            if (node)\n                await this._deleteNode(hash, stack);\n        }\n        this.lock.signal();\n    }\n    async get(key) {\n        const value = await super.get(key);\n        if (value != null)\n            return value;\n        // since we don't have this key in our local trie check if we've have\n        // deleted it (locally)\n        // we only check if the key was deleted (locally) for state tries _after_\n        // the fork block because we can't possibly delete keys _before_ the fork\n        // block, since those happened before ganache was even started\n        // This little optimization can cut debug_traceTransaction time _in half_.\n        if (!this.isPreForkBlock && (await this.keyWasDeleted(key)))\n            return null;\n        if (this.address === null) {\n            // if the trie context's address isn't set, our key represents an address:\n            return this.accountFromFallback(ethereum_address_1.Address.from(key), this.blockNumber);\n        }\n        else {\n            // otherwise the key represents storage at the given address:\n            return this.storageFromFallback(this.address, key, this.blockNumber);\n        }\n    }\n    /**\n     * Returns a copy of the underlying trie with the interface of ForkTrie.\n     * @param includeCheckpoints - If true and during a checkpoint, the copy will\n     * contain the checkpointing metadata and will use the same scratch as\n     * underlying db.\n     */\n    copy(includeCheckpoints = true) {\n        const db = this.db.copy();\n        const secureTrie = new ForkTrie(db._leveldb, this.root, this.blockchain);\n        secureTrie.accounts = this.accounts;\n        secureTrie.address = this.address;\n        secureTrie.blockNumber = this.blockNumber;\n        if (includeCheckpoints && this.isCheckpoint) {\n            secureTrie.db.checkpoints = [...this.db.checkpoints];\n            // Our `metadata.checkpoints` needs to be the same reference to the\n            // parent's metadata.checkpoints so that we can continue to track these\n            // changes on this copy, otherwise deletions made to a contract's storage\n            // may not be tracked.\n            // Note: db.checkpoints don't need this same treatment because of the way\n            // the statemanager uses a contract's trie: it doesn't ever save to it.\n            // Instead, it saves to its own internal cache, which eventually gets\n            // reverted or committed (flushed). Our metadata doesn't utilize a central\n            // cache.\n            secureTrie.metadata.checkpoints = this.metadata.checkpoints;\n        }\n        return secureTrie;\n    }\n}\nexports.ForkTrie = ForkTrie;\n//# sourceMappingURL=trie.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deriveFromIndex = exports.deriveFromPath = exports.createAccountFromSeed = exports.createAccountGeneratorFromSeedAndPath = void 0;\nconst crypto_1 = require(\"crypto\");\nconst secp256k1_1 = __importDefault(require(\"@ganache/secp256k1\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst HARDENED_OFFSET = 0x80000000;\nconst MASTER_SECRET = Buffer.from(\"Bitcoin seed\", \"utf8\");\nfunction createAccountGeneratorFromSeedAndPath(seedBuffer, hdPath) {\n    const parent = createAccountFromSeed(seedBuffer);\n    const path = deriveFromPath(hdPath, parent);\n    return (index) => {\n        return deriveFromIndex(index, path);\n    };\n}\nexports.createAccountGeneratorFromSeedAndPath = createAccountGeneratorFromSeedAndPath;\nfunction createAccountFromSeed(seedBuffer) {\n    const I = (0, crypto_1.createHmac)(\"sha512\", MASTER_SECRET).update(seedBuffer).digest();\n    const privateKey = I.slice(0, 32);\n    const chainCode = I.slice(32);\n    const publicKey = makePublicKey(privateKey);\n    return {\n        privateKey,\n        chainCode,\n        publicKey\n    };\n}\nexports.createAccountFromSeed = createAccountFromSeed;\nfunction deriveFromPath(fullPath, child) {\n    fullPath.forEach(function (c, i) {\n        if (i === 0) {\n            if (!/^[mM]{1}/.test(c)) {\n                throw new Error('Path must start with \"m\" or \"M\"');\n            }\n            return;\n        }\n        const hardened = c.length > 1 && c[c.length - 1] === \"'\";\n        let childIndex = parseInt(c, 10);\n        if (childIndex >= HARDENED_OFFSET)\n            throw new Error(\"Invalid index\");\n        if (hardened)\n            childIndex += HARDENED_OFFSET;\n        child = deriveChild(childIndex, hardened, child.privateKey, child.publicKey, child.chainCode);\n    });\n    return child;\n}\nexports.deriveFromPath = deriveFromPath;\nfunction deriveFromIndex(index, child) {\n    if (index >= HARDENED_OFFSET)\n        throw new Error(\"Invalid index\");\n    return deriveChild(index, false, child.privateKey, child.publicKey, child.chainCode);\n}\nexports.deriveFromIndex = deriveFromIndex;\nfunction makePublicKey(privateKey) {\n    const publicKey = Buffer.allocUnsafe(33);\n    switch (secp256k1_1.default.publicKeyCreate(publicKey, privateKey)) {\n        case 0:\n            return publicKey;\n        case 1:\n            throw new Error(\"Private Key is invalid\");\n        case 2:\n            throw new Error(\"Public Key serialization error\");\n    }\n}\n/**\n * A buffer of size 4 that can be reused as long as all changes are consumed\n * within the same event loop.\n */\nconst SHARED_BUFFER_4 = Buffer.allocUnsafe(4);\nfunction deriveChild(index, isHardened, privateKey, publicKey, chainCode) {\n    const indexBuffer = SHARED_BUFFER_4;\n    indexBuffer.writeUInt32BE(index, 0);\n    let data;\n    const privateKeyLength = privateKey.length;\n    if (isHardened) {\n        // Hardened child\n        // privateKeyLength + 1 (BUFFER_ZERO.length) + 4 (indexBuffer.length)\n        const dataLength = privateKeyLength + 1 + 4;\n        data = Buffer.concat([utils_1.BUFFER_ZERO, privateKey, indexBuffer], dataLength);\n    }\n    else {\n        // Normal child\n        data = Buffer.concat([publicKey, indexBuffer], publicKey.length + 4);\n    }\n    const I = (0, crypto_1.createHmac)(\"sha512\", chainCode).update(data).digest();\n    const IL = I.slice(0, 32);\n    try {\n        const newPrivK = Buffer.allocUnsafe(privateKeyLength);\n        privateKey.copy(newPrivK, 0, 0, privateKeyLength);\n        switch (secp256k1_1.default.privateKeyTweakAdd(newPrivK, IL)) {\n            case 0:\n                return {\n                    privateKey: newPrivK,\n                    publicKey: makePublicKey(newPrivK),\n                    chainCode: I.slice(32)\n                };\n            case 1:\n                throw new Error(\"The tweak was out of range or the resulted private key is invalid\");\n        }\n    }\n    catch {\n        return deriveChild(index + 1, isHardened, privateKey, publicKey, chainCode);\n    }\n}\n//# sourceMappingURL=hdkey.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertArgLength = void 0;\nfunction assertArgLength(min, max = min) {\n    return function (target, propertyKey, descriptor) {\n        const original = descriptor.value;\n        descriptor.value = function () {\n            const length = arguments.length;\n            if (length < min || length > max) {\n                throw new Error(`Incorrect number of arguments. '${propertyKey}' requires ${min === max\n                    ? `exactly ${min} ${min === 1 ? \"argument\" : \"arguments\"}.`\n                    : `between ${min} and ${max} arguments.`}`);\n            }\n            return Reflect.apply(original, this, arguments);\n        };\n        return descriptor;\n    };\n}\nexports.assertArgLength = assertArgLength;\n//# sourceMappingURL=assert-arg-length.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferify = void 0;\nconst PARTS = Buffer.from('[]{},\"\":null');\nconst SQUARE_BRACKET_PAIR = PARTS.slice(0, 2);\nconst SQUARE_BRACKET_OPEN = SQUARE_BRACKET_PAIR.slice(0, 1);\nconst SQUARE_BRACKET_CLOSE = SQUARE_BRACKET_PAIR.slice(1, 2);\nconst CURLY_BRACKET_PAIR = PARTS.slice(2, 4);\nconst CURLY_BRACKET_OPEN = CURLY_BRACKET_PAIR.slice(0, 1);\nconst CURLY_BRACKET_CLOSE = CURLY_BRACKET_PAIR.slice(1, 2);\nconst COMMA_QUOTE = PARTS.slice(4, 6);\nconst COMMA = COMMA_QUOTE.slice(0, 1);\nconst QUOTE_PAIR = PARTS.slice(5, 7);\nconst QUOTE_COLON = PARTS.slice(6, 8);\nconst COLON = QUOTE_COLON.slice(1, 2);\nconst NULL = PARTS.slice(8, 12);\nconst _EMPTY = PARTS.slice(0, 0);\nconst toStr = Object.prototype.toString;\nconst isObj = (val) => toStr.call(val) === \"[object Object]\";\nfunction numberToBuffer(value) {\n    const str = value.toString();\n    const { length } = str;\n    if (length > 0) {\n        const buf = Buffer.allocUnsafe(length);\n        buf.utf8Write(str, 0, length);\n        return buf;\n    }\n    else {\n        return _EMPTY;\n    }\n}\nfunction stringToQuotedBuffer(value) {\n    const { length } = value;\n    if (length > 0) {\n        const buf = Buffer.allocUnsafe(length + 2); // + 2 for the quotation marks\n        buf[0] = 34; // DOUBLE QUOTE\n        buf[length + 1] = 34; // DOUBLE QUOTE\n        buf.utf8Write(value, 1, length);\n        return buf;\n    }\n    else {\n        return QUOTE_PAIR;\n    }\n}\nfunction* arrayToBuffer(value) {\n    const { length } = value;\n    if (length === 0) {\n        yield SQUARE_BRACKET_PAIR;\n        return;\n    }\n    else {\n        yield SQUARE_BRACKET_OPEN;\n        // sends the first array value:\n        for (const chunkified of bufferify(value[0], \"0\")) {\n            // if the value ends up being nothing (undefined), return null\n            yield chunkified.length === 0 ? NULL : chunkified;\n        }\n        // sends the rest of the array values:\n        for (let i = 1; i < length; i++) {\n            yield COMMA;\n            for (const chunkified of bufferify(value[i], i.toString())) {\n                // if the value ends up being nothing (undefined), return null\n                yield chunkified.length === 0 ? NULL : chunkified;\n            }\n        }\n        yield SQUARE_BRACKET_CLOSE;\n        return;\n    }\n}\nfunction bufferToQuotedBuffer(value) {\n    const { length } = value;\n    const buf = Buffer.allocUnsafe(length + 2);\n    buf[0] = 34;\n    value.copy(buf, 1, 0, length);\n    buf[length + 1] = 34;\n    return buf;\n}\nfunction* objectToBuffer(obj, nameOrIndex) {\n    if (\"toJSON\" in obj) {\n        yield* bufferify(obj.toJSON(nameOrIndex), nameOrIndex);\n        return;\n    }\n    let yieldedOpen = false;\n    for (const key in obj) {\n        const value = obj[key];\n        let yieldPrefix = true;\n        for (const chunkified of bufferify(value, key)) {\n            // if the chunkified value ends up being nothing (undefined) ignore\n            // the property\n            const chunkLength = chunkified.length;\n            if (chunkLength === 0)\n                continue;\n            // only yield the prefix once per `key`\n            if (yieldPrefix) {\n                yieldPrefix = false;\n                const quotedKey = stringToQuotedBuffer(key);\n                if (!yieldedOpen) {\n                    yield Buffer.concat([\n                        CURLY_BRACKET_OPEN,\n                        quotedKey,\n                        COLON,\n                        chunkified\n                    ]);\n                    yieldedOpen = true;\n                }\n                else {\n                    yield Buffer.concat([COMMA, quotedKey, COLON, chunkified]);\n                }\n            }\n            else {\n                yield chunkified;\n            }\n        }\n    }\n    // if we yielded the\n    if (yieldedOpen) {\n        yield CURLY_BRACKET_CLOSE;\n        return;\n    }\n    else {\n        yield CURLY_BRACKET_PAIR;\n        return;\n    }\n}\n/**\n * Converts a JavaScript value to a JavaScript Object Notation (JSON) Buffer\n * (utf-8 encoded).\n *\n * This is a hack. It:\n *  * Does not support circular references.\n *  * Does not support double quotes within Object keys; only alphanumerics are\n *    considered safe to use\n *  * Probably doesn't support non-ASCII characters\n *  * Is only tested on transaction traces\n *\n * Only useful if the `JSON.stringify`ed version would create a string larger\n * than what the JavaScript engine can handle.\n *\n * What is the maximum string size in Node/V8? It depends on the version! Some\n * versions are 256MB, some are ~1GB, and others are ~0.5GB.\n * See: https://stackoverflow.com/a/47781288/160173\n *\n * CAUTION: This method is approx 3 - 20 times slower than using:\n * `Buffer.from(JSON.stringify(value), \"utf-8\")`\n *\n * @param value - A JavaScript value, usually an object or array, to be converted.\n * @param nameOrIndex - JSON.stringify calls an object's toJSON method, and this\n * property is used by internal recursive calls to bufferify.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#tojson_behavior\n */\nfunction* bufferify(value, nameOrIndex) {\n    const type = typeof value;\n    if (type === \"number\" || type === \"boolean\") {\n        yield numberToBuffer(value);\n    }\n    else if (type === \"string\") {\n        yield stringToQuotedBuffer(value);\n    }\n    else if (Buffer.isBuffer(value)) {\n        yield bufferToQuotedBuffer(value);\n    }\n    else if (Array.isArray(value)) {\n        yield* arrayToBuffer(value);\n    }\n    else if (isObj(value)) {\n        yield* objectToBuffer(value, nameOrIndex);\n    }\n    else if (value === null) {\n        yield NULL;\n    }\n    else if (type === \"undefined\") {\n        // nothing is returned for undefined\n        yield _EMPTY;\n    }\n    else if (\"toJSON\" in value && typeof value.toJSON === \"function\") {\n        yield* bufferify(value.toJSON(), nameOrIndex);\n    }\n    else {\n        throw new Error(\"unsupported value in bufferify\");\n    }\n}\nexports.bufferify = bufferify;\n//# sourceMappingURL=bufferify.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseFilter = exports.parseFilterRange = exports.parseFilterDetails = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nfunction parseFilterDetails(filter) {\n    // `filter.address` may be a single address or an array\n    const addresses = filter.address\n        ? (Array.isArray(filter.address) ? filter.address : [filter.address]).map(a => ethereum_address_1.Address.from(a.toLowerCase()).toBuffer())\n        : [];\n    const topics = filter.topics ? filter.topics : [];\n    return { addresses, topics };\n}\nexports.parseFilterDetails = parseFilterDetails;\nfunction parseFilterRange(filter, blockchain) {\n    const latestBlock = blockchain.blocks.latest.header.number;\n    const fromBlock = blockchain.blocks.getEffectiveNumber(filter.fromBlock || ethereum_utils_1.Tag.latest);\n    const latestBlockNumber = latestBlock.toNumber();\n    const toBlock = blockchain.blocks.getEffectiveNumber(filter.toBlock || ethereum_utils_1.Tag.latest);\n    let toBlockNumber;\n    // don't search after the \"latest\" block, unless it's \"pending\", of course.\n    if (toBlock > latestBlock) {\n        toBlockNumber = latestBlockNumber;\n    }\n    else {\n        toBlockNumber = toBlock.toNumber();\n    }\n    return {\n        fromBlock,\n        toBlock,\n        toBlockNumber\n    };\n}\nexports.parseFilterRange = parseFilterRange;\nfunction parseFilter(filter = { address: [], topics: [] }, blockchain) {\n    const { addresses, topics } = parseFilterDetails(filter);\n    const { fromBlock, toBlock, toBlockNumber } = parseFilterRange(filter, blockchain);\n    return {\n        addresses,\n        fromBlock,\n        toBlock,\n        toBlockNumber,\n        topics\n    };\n}\nexports.parseFilter = parseFilter;\n//# sourceMappingURL=filter-parsing.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst bn = (val = 0) => new ethereumjs_util_1.BN(val);\nconst STIPEND = bn(2300);\nconst MULTIPLE = 64 / 63;\nconst check = set => opname => set.has(opname);\nconst isCall = check(new Set([\"CALL\", \"DELEGATECALL\", \"STATICCALL\", \"CALLCODE\"]));\nconst isCallOrCallcode = check(new Set([\"CALL\", \"CALLCODE\"]));\nconst isCreate = check(new Set([\"CREATE\", \"CREATE2\"]));\nconst isTerminator = check(new Set([\"STOP\", \"RETURN\", \"REVERT\", \"INVALID\", \"SELFDESTRUCT\"]));\nconst stepTracker = () => {\n    const sysOps = [];\n    const allOps = [];\n    const preCompile = new Set();\n    let preCompileCheck = false;\n    let precompileCallDepth = 0;\n    return {\n        collect: info => {\n            if (preCompileCheck) {\n                if (info.depth === precompileCallDepth) {\n                    // If the current depth is unchanged.\n                    // we record its position.\n                    preCompile.add(allOps.length - 1);\n                }\n                // Reset the flag immediately here\n                preCompileCheck = false;\n            }\n            if (isCall(info.opcode.name)) {\n                info.stack = info.stack.map(val => val.clone());\n                preCompileCheck = true;\n                precompileCallDepth = info.depth;\n                sysOps.push({\n                    index: allOps.length,\n                    depth: info.depth,\n                    name: info.opcode.name\n                });\n            }\n            else if (isCreate(info.opcode.name) || isTerminator(info.opcode.name)) {\n                sysOps.push({\n                    index: allOps.length,\n                    depth: info.depth,\n                    name: info.opcode.name\n                });\n            }\n            // This goes last so we can use the length for the index ^\n            allOps.push(info);\n        },\n        isPrecompile: index => preCompile.has(index),\n        done: () => !allOps.length ||\n            sysOps.length < 2 ||\n            !isTerminator(allOps[allOps.length - 1].opcode.name),\n        ops: allOps,\n        systemOps: sysOps\n    };\n};\nconst estimateGas = (generateVM, runArgs, callback) => {\n    exactimate(generateVM(), runArgs, (err, result) => {\n        if (err)\n            return callback(err);\n        binSearch(generateVM, runArgs, result, (err, result) => {\n            if (err)\n                return callback(err);\n            callback(null, result);\n        });\n    });\n};\nconst binSearch = async (generateVM, runArgs, result, callback) => {\n    const MAX = runArgs.block.header.gasLimit;\n    const gasRefund = result.execResult.gasRefund;\n    const startingGas = gasRefund\n        ? result.gasEstimate.add(gasRefund)\n        : result.gasEstimate;\n    const range = { lo: startingGas, hi: startingGas };\n    const isEnoughGas = async (gas) => {\n        const vm = generateVM(); // Generate fresh VM\n        runArgs.tx.gasLimit = new ethereumjs_util_1.BN(gas.toArrayLike(Buffer));\n        await vm.stateManager.checkpoint();\n        const result = await vm.runTx(runArgs).catch(vmerr => ({ vmerr }));\n        await vm.stateManager.revert();\n        return !result.vmerr && !result.execResult.exceptionError;\n    };\n    if (!(await isEnoughGas(range.hi))) {\n        do {\n            range.hi = range.hi.muln(MULTIPLE);\n        } while (!(await isEnoughGas(range.hi)));\n        while (range.lo.addn(1).lt(range.hi)) {\n            const mid = range.lo.add(range.hi).divn(2);\n            if (await isEnoughGas(mid)) {\n                range.hi = mid;\n            }\n            else {\n                range.lo = mid;\n            }\n        }\n        if (range.hi.gte(MAX)) {\n            if (!(await isEnoughGas(range.hi))) {\n                return callback(new Error(\"gas required exceeds allowance or always failing transaction\"));\n            }\n        }\n    }\n    result.gasEstimate = range.hi;\n    callback(null, result);\n};\nconst exactimate = async (vm, runArgs, callback) => {\n    const steps = stepTracker();\n    vm.on(\"step\", steps.collect);\n    const Context = (index, fee) => {\n        const base = index === 0;\n        let start = index;\n        let stop = 0;\n        const cost = bn();\n        let sixtyFloorths = bn();\n        const op = steps.ops[index];\n        const next = steps.ops[index + 1];\n        const intermediateCost = op.gasLeft.sub(next.gasLeft);\n        const callingFee = fee || bn();\n        let compositeContext = false;\n        function addGas(val) {\n            // Add to our current context, but accounted for in sixtyfloorths\n            if (sixtyFloorths.gtn(0)) {\n                if (val.gte(sixtyFloorths)) {\n                    sixtyFloorths = bn();\n                }\n                else {\n                    sixtyFloorths.isub(val);\n                }\n            }\n            cost.iadd(val);\n        }\n        return {\n            start: () => start,\n            stop: () => stop,\n            setStart: val => {\n                start = val;\n                compositeContext = true;\n            },\n            setStop: val => {\n                stop = val;\n            },\n            getCost: () => ({ cost, sixtyFloorths }),\n            transfer: ctx => {\n                const values = ctx.getCost();\n                addGas(values.cost);\n                sixtyFloorths.iadd(values.sixtyFloorths);\n            },\n            addSixtyFloorth: sixtyFloorth => {\n                sixtyFloorths.iadd(sixtyFloorth);\n            },\n            addRange: (fee = bn()) => {\n                // only occurs on stack increasing ops\n                addGas(steps.ops[base || compositeContext ? start : start + 1].gasLeft\n                    .sub(steps.ops[stop].gasLeft)\n                    .add(fee));\n            },\n            finalizeRange: () => {\n                let range;\n                // if we have a composite context and we are NOT at the final terminator\n                if (compositeContext && stop !== steps.ops.length - 1) {\n                    range = steps.ops[start].gasLeft.sub(steps.ops[stop - 1].gasLeft);\n                    addGas(range);\n                    const tail = steps.ops[stop - 1].gasLeft.sub(steps.ops[stop].gasLeft);\n                    range = tail.add(intermediateCost);\n                }\n                else {\n                    range = steps.ops[start].gasLeft.sub(steps.ops[stop].gasLeft);\n                }\n                range.isub(callingFee);\n                addGas(range);\n                if (isCallOrCallcode(op.opcode.name) &&\n                    !op.stack[op.stack.length - 3].isZero()) {\n                    cost.iadd(sixtyFloorths);\n                    const innerCost = next.gasLeft.sub(steps.ops[stop - 1].gasLeft);\n                    if (innerCost.gt(STIPEND)) {\n                        sixtyFloorths = cost.divn(63);\n                    }\n                    else if (innerCost.lte(STIPEND)) {\n                        sixtyFloorths = STIPEND.sub(innerCost);\n                    }\n                }\n                else if (stop !== steps.ops.length - 1) {\n                    cost.iadd(sixtyFloorths);\n                    sixtyFloorths = cost.divn(63);\n                }\n            }\n        };\n    };\n    const getTotal = () => {\n        const sysops = steps.systemOps;\n        const ops = steps.ops;\n        const opIndex = cursor => sysops[cursor].index;\n        const stack = [];\n        let cursor = 0;\n        let context = Context(0);\n        while (cursor < sysops.length) {\n            const currentIndex = opIndex(cursor);\n            const current = ops[currentIndex];\n            const name = current.opcode.name;\n            if (isCall(name) || isCreate(name)) {\n                if (steps.isPrecompile(currentIndex)) {\n                    context.setStop(currentIndex + 1);\n                    context.addRange();\n                    context.setStart(currentIndex + 1);\n                    context.addSixtyFloorth(STIPEND);\n                }\n                else {\n                    context.setStop(currentIndex);\n                    context.addRange(bn(current.opcode.fee));\n                    stack.push(context);\n                    context = Context(currentIndex, bn(current.opcode.fee)); // setup next context\n                }\n            }\n            else if (isTerminator(name)) {\n                // only on the last operation\n                context.setStop(currentIndex + 1 < steps.ops.length ? currentIndex + 1 : currentIndex);\n                context.finalizeRange();\n                const ctx = stack.pop();\n                if (ctx) {\n                    ctx.transfer(context);\n                    context = ctx;\n                    context.setStart(currentIndex + 1);\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                throw new Error(\"INVALID OPCODE\");\n            }\n            cursor++;\n        }\n        const gas = context.getCost();\n        return gas.cost.add(gas.sixtyFloorths);\n    };\n    await vm.stateManager.checkpoint();\n    const result = await vm.runTx(runArgs).catch(vmerr => ({ vmerr }));\n    await vm.stateManager.revert();\n    const vmerr = result.vmerr;\n    if (vmerr) {\n        return callback(vmerr);\n    }\n    else if (result.execResult.exceptionError) {\n        const error = new ethereum_utils_1.RuntimeError(\n        // erroneous gas estimations don't have meaningful hashes\n        utils_1.Quantity.Empty, result, ethereum_utils_1.RETURN_TYPES.RETURN_VALUE);\n        return callback(error, result);\n    }\n    else if (steps.done()) {\n        const estimate = result.gasUsed;\n        result.gasEstimate = estimate;\n    }\n    else {\n        const actualUsed = steps.ops[0].gasLeft.sub(steps.ops[steps.ops.length - 1].gasLeft);\n        const sixtyFloorths = getTotal().sub(actualUsed);\n        result.gasEstimate = result.gasUsed.add(sixtyFloorths);\n    }\n    callback(vmerr, result);\n};\nexports.default = estimateGas;\n//# sourceMappingURL=gas-estimator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.warmPrecompiles = exports.activatePrecompiles = void 0;\nconst NUM_PRECOMPILES = 18;\n/**\n * An account with a balance of 1\n */\nconst SERIALIZED_PRECOMPILE = Uint8Array.from([\n    248,\n    68,\n    128,\n    1,\n    160,\n    86,\n    232,\n    31,\n    23,\n    27,\n    204,\n    85,\n    166,\n    255,\n    131,\n    69,\n    230,\n    146,\n    192,\n    248,\n    110,\n    91,\n    72,\n    224,\n    27,\n    153,\n    108,\n    173,\n    192,\n    1,\n    98,\n    47,\n    181,\n    227,\n    99,\n    180,\n    33,\n    160,\n    197,\n    210,\n    70,\n    1,\n    134,\n    247,\n    35,\n    60,\n    146,\n    126,\n    125,\n    178,\n    220,\n    199,\n    3,\n    192,\n    229,\n    0,\n    182,\n    83,\n    202,\n    130,\n    39,\n    59,\n    123,\n    250,\n    216,\n    4,\n    93,\n    133,\n    164,\n    112\n]);\nconst PRECOMPILED_ACCOUNT = {\n    serialize: () => SERIALIZED_PRECOMPILE\n};\nconst accountCache = [];\nconst makeAccount = (i) => {\n    if (accountCache[i])\n        return accountCache[i];\n    // 10 bytes, the first 19 are 0, the last byte is the address\n    const buf = Buffer.allocUnsafe(20).fill(0, 0, 19);\n    buf[19] = i;\n    return (accountCache[i] = { buf });\n};\n/**\n * Puts the precompile accounts into the state tree\n * @param stateManager -\n */\nconst activatePrecompiles = async (stateManager) => {\n    await stateManager.checkpoint();\n    const cache = stateManager._cache;\n    for (let i = 1; i <= NUM_PRECOMPILES; i++) {\n        const account = makeAccount(i);\n        cache.put(account, PRECOMPILED_ACCOUNT);\n        stateManager.touchAccount(account);\n    }\n    await stateManager.commit();\n};\nexports.activatePrecompiles = activatePrecompiles;\n/**\n * Puts the precompile accounts into the warmed addresses\n * @param stateManager -\n */\nconst warmPrecompiles = async (stateManager) => {\n    for (let i = 1; i <= NUM_PRECOMPILES; i++) {\n        const account = makeAccount(i);\n        stateManager.addWarmedAddress(account.buf);\n    }\n};\nexports.warmPrecompiles = warmPrecompiles;\n//# sourceMappingURL=precompiles.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applySimulationOverrides = exports.runCall = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst message_1 = __importDefault(require(\"@ethereumjs/vm/dist/evm/message\"));\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst evm_1 = __importDefault(require(\"@ethereumjs/vm/dist/evm/evm\"));\nconst ethereumjs_util_2 = require(\"ethereumjs-util\");\n/**\n * Executes a message/transaction against the vm.\n * @param vm -\n * @param transaction -\n * @param gasLeft -\n * @returns\n */\nfunction runCall(vm, transaction, gasLeft) {\n    const caller = { buf: transaction.from.toBuffer() };\n    const to = transaction.to == null ? undefined : { buf: transaction.to.toBuffer() };\n    const value = new ethereumjs_util_1.BN(transaction.value == null ? 0 : transaction.value.toBuffer());\n    const txContext = {\n        gasPrice: new ethereumjs_util_1.BN(transaction.gasPrice.toBuffer()),\n        origin: caller\n    };\n    const message = new message_1.default({\n        caller,\n        gasLimit: new ethereumjs_util_1.BN(utils_1.Quantity.toBuffer(gasLeft)),\n        to,\n        value,\n        data: transaction.data && transaction.data.toBuffer()\n    });\n    const evm = new evm_1.default(vm, txContext, transaction.block);\n    return evm.executeMessage(message);\n}\nexports.runCall = runCall;\nconst validateStorageOverride = (slot, value, fieldName) => {\n    // assume Quantity will handle other types, these are just special string cases\n    if (typeof slot === \"string\" && slot !== \"\" && slot.indexOf(\"0x\") === 0) {\n        // assume we're starting with 0x cause Quantity will verify if not\n        if (slot.length != 66) {\n            throw new Error(`${fieldName} override slot must be a 64 character hex string. Received ${slot.length - 2} character string.`);\n        }\n    }\n    if (value === null || value === undefined) {\n        throw new Error(`${fieldName} override data not valid. Received: ${value}`);\n    }\n    // assume Quantity will handle other types, these are just special string cases\n    if (typeof value === \"string\" && value !== \"\" && value.indexOf(\"0x\") === 0) {\n        if (value.length != 66) {\n            throw new Error(`${fieldName} override data must be a 64 character hex string. Received ${value.length - 2} character string.`);\n        }\n    }\n};\nasync function applySimulationOverrides(stateTrie, vm, overrides) {\n    const stateManager = vm.stateManager;\n    for (const address in overrides) {\n        if (!(0, utils_1.hasOwn)(overrides, address))\n            continue;\n        const { balance, nonce, code, state, stateDiff } = overrides[address];\n        const vmAddr = { buf: ethereum_address_1.Address.from(address).toBuffer() };\n        // group together overrides that update the account\n        if (nonce != null || balance != null || code != null) {\n            const account = await stateManager.getAccount(vmAddr);\n            if (nonce != null) {\n                account.nonce = {\n                    toArrayLike: () => \n                    // geth treats empty strings as \"0x0\" nonce for overrides\n                    nonce === \"\" ? utils_1.BUFFER_EMPTY : utils_1.Quantity.toBuffer(nonce)\n                };\n            }\n            if (balance != null) {\n                account.balance = {\n                    toArrayLike: () => \n                    // geth treats empty strings as \"0x0\" balance for overrides\n                    balance === \"\" ? utils_1.BUFFER_EMPTY : utils_1.Quantity.toBuffer(balance)\n                };\n            }\n            if (code != null) {\n                // geth treats empty strings as \"0x\" code for overrides\n                const codeBuffer = utils_1.Data.toBuffer(code === \"\" ? \"0x\" : code);\n                // The ethereumjs-vm StateManager does not allow to set empty code,\n                // therefore we will manually set the code hash when \"clearing\" the contract code\n                const codeHash = codeBuffer.length > 0 ? (0, utils_1.keccak)(codeBuffer) : ethereumjs_util_2.KECCAK256_NULL;\n                account.codeHash = codeHash;\n                await stateTrie.db.put(codeHash, codeBuffer);\n            }\n            await stateManager.putAccount(vmAddr, account);\n        }\n        // group together overrides that update storage\n        if (state || stateDiff) {\n            if (state) {\n                // state and stateDiff fields are mutually exclusive\n                if (stateDiff) {\n                    throw new Error(\"both state and stateDiff overrides specified\");\n                }\n                // it's possible that the user fed an override with a valid address\n                // and slot, but not a value we can actually set in the storage. if\n                // so, we don't want to set the storage, and we also don't want to\n                // clear it out\n                let clearedState = false;\n                for (const slot in state) {\n                    if (!(0, utils_1.hasOwn)(state, slot))\n                        continue;\n                    const value = state[slot];\n                    validateStorageOverride(slot, value, \"State\");\n                    if (!clearedState) {\n                        // override.state clears all storage and sets just the specified slots\n                        await stateManager.clearContractStorage(vmAddr);\n                        clearedState = true;\n                    }\n                    const slotBuf = utils_1.Data.toBuffer(slot, 32);\n                    const valueBuf = utils_1.Data.toBuffer(value);\n                    await stateManager.putContractStorage(vmAddr, slotBuf, valueBuf);\n                }\n            }\n            else {\n                for (const slot in stateDiff) {\n                    // don't set storage for invalid values\n                    if (!(0, utils_1.hasOwn)(stateDiff, slot))\n                        continue;\n                    const value = stateDiff[slot];\n                    validateStorageOverride(slot, value, \"StateDiff\");\n                    const slotBuf = utils_1.Data.toBuffer(slot, 32);\n                    const valueBuf = utils_1.Data.toBuffer(value);\n                    await stateManager.putContractStorage(vmAddr, slotBuf, valueBuf);\n                }\n            }\n        }\n    }\n}\nexports.applySimulationOverrides = applySimulationOverrides;\n//# sourceMappingURL=run-call.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GanacheTrie = void 0;\nconst merkle_patricia_tree_1 = require(\"merkle-patricia-tree\");\nclass GanacheTrie extends merkle_patricia_tree_1.SecureTrie {\n    constructor(db, root, blockchain) {\n        super(db, root);\n        this.blockchain = blockchain;\n    }\n    setContext(stateRoot, address, blockNumber) {\n        this.root = stateRoot;\n    }\n    /**\n     * Returns a copy of the underlying trie with the interface of GanacheTrie.\n     * @param includeCheckpoints - If true and during a checkpoint, the copy will contain the checkpointing metadata and will use the same scratch as underlying db.\n     */\n    copy(includeCheckpoints = true) {\n        const db = this.db.copy();\n        const secureTrie = new GanacheTrie(db._leveldb, this.root, this.blockchain);\n        if (includeCheckpoints && this.isCheckpoint) {\n            secureTrie.db.checkpoints = [...this.db.checkpoints];\n        }\n        return secureTrie;\n    }\n}\nexports.GanacheTrie = GanacheTrie;\n//# sourceMappingURL=trie.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Miner_currentlyExecutingPrice, _Miner_origins, _Miner_pending, _Miner_isBusy, _Miner_paused, _Miner_resumer, _Miner_currentBlockBaseFeePerGas, _Miner_resolver, _Miner_emitStepEvent, _Miner_executables, _Miner_options, _Miner_vm, _Miner_createBlock, _Miner_priced, _Miner_mine, _Miner_mineTxs, _Miner_runTx, _Miner_removeBestAndOrigin, _Miner_reset, _Miner_setPricedHeap, _Miner_updatePricedHeap, _Miner_setCurrentBlockBaseFeePerGas;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Capacity = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst merkle_patricia_tree_1 = require(\"merkle-patricia-tree\");\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst replace_from_heap_1 = __importDefault(require(\"./replace-from-heap\"));\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst provider_events_1 = require(\"../provider-events\");\n/**\n * How many transactions should be in the block.\n */\nvar Capacity;\n(function (Capacity) {\n    /**\n     * Keep mining transactions until there are no more transactions that can fit\n     * in the block, or there are no transactions left to mine.\n     */\n    Capacity[Capacity[\"FillBlock\"] = -1] = \"FillBlock\";\n    /**\n     * Mine an empty block, even if there are executable transactions available to\n     * mine.\n     */\n    Capacity[Capacity[\"Empty\"] = 0] = \"Empty\";\n    /**\n     * Mine a block with a single transaction, or empty if there are no executable\n     * transactions available to mine.\n     */\n    Capacity[Capacity[\"Single\"] = 1] = \"Single\";\n})(Capacity = exports.Capacity || (exports.Capacity = {}));\nconst updateBloom = (blockBloom, bloom) => {\n    let i = 256;\n    while (--i)\n        blockBloom[i] |= bloom[i];\n};\nconst sortByPrice = (values, a, b) => values[a].effectiveGasPrice > values[b].effectiveGasPrice;\nconst refresher = (item, context) => item.updateEffectiveGasPrice(context);\nclass Miner extends emittery_1.default {\n    /*\n     * @param executables - A live Map of pending transactions from the transaction\n     * pool. The miner will update this Map by removing the best transactions\n     * and putting them in new blocks.\n     */\n    constructor(options, executables, vm, createBlock) {\n        super();\n        _Miner_currentlyExecutingPrice.set(this, 0n);\n        _Miner_origins.set(this, new Set());\n        _Miner_pending.set(this, void 0);\n        _Miner_isBusy.set(this, false);\n        _Miner_paused.set(this, false);\n        _Miner_resumer.set(this, void 0);\n        _Miner_currentBlockBaseFeePerGas.set(this, void 0);\n        _Miner_resolver.set(this, void 0);\n        /**\n         * Because step events are expensive, CPU-wise, to create and emit we only do\n         * it conditionally.\n         */\n        _Miner_emitStepEvent.set(this, false);\n        _Miner_executables.set(this, void 0);\n        _Miner_options.set(this, void 0);\n        _Miner_vm.set(this, void 0);\n        _Miner_createBlock.set(this, void 0);\n        // create a Heap that sorts by gasPrice\n        _Miner_priced.set(this, new utils_1.Heap(sortByPrice, refresher));\n        _Miner_mine.set(this, async (block, maxTransactions = Capacity.FillBlock, onlyOneBlock = false) => {\n            const { block: lastBlock, transactions } = await __classPrivateFieldGet(this, _Miner_mineTxs, \"f\").call(this, block, maxTransactions, onlyOneBlock);\n            // if there are more txs to mine, start mining them without awaiting their\n            // result.\n            if (__classPrivateFieldGet(this, _Miner_pending, \"f\")) {\n                __classPrivateFieldGet(this, _Miner_setPricedHeap, \"f\").call(this);\n                __classPrivateFieldSet(this, _Miner_pending, false, \"f\");\n                if (!onlyOneBlock && __classPrivateFieldGet(this, _Miner_priced, \"f\").length > 0) {\n                    const nextBlock = __classPrivateFieldGet(this, _Miner_createBlock, \"f\").call(this, lastBlock);\n                    await __classPrivateFieldGet(this, _Miner_mine, \"f\").call(this, nextBlock, maxTransactions);\n                }\n            }\n            return transactions;\n        });\n        _Miner_mineTxs.set(this, async (runtimeBlock, maxTransactions, onlyOneBlock) => {\n            let block;\n            const vm = __classPrivateFieldGet(this, _Miner_vm, \"f\");\n            const { pending, inProgress } = __classPrivateFieldGet(this, _Miner_executables, \"f\");\n            const options = __classPrivateFieldGet(this, _Miner_options, \"f\");\n            let keepMining = true;\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            const storageKeys = new Map();\n            let blockTransactions;\n            do {\n                keepMining = false;\n                __classPrivateFieldSet(this, _Miner_isBusy, true, \"f\");\n                blockTransactions = [];\n                const transactionsTrie = new merkle_patricia_tree_1.BaseTrie(null, null);\n                const receiptTrie = new merkle_patricia_tree_1.BaseTrie(null, null);\n                // don't mine anything at all if maxTransactions is `0`\n                if (maxTransactions === Capacity.Empty) {\n                    await vm.stateManager.checkpoint();\n                    await vm.stateManager.commit();\n                    const finalizedBlockData = runtimeBlock.finalize(transactionsTrie.root, receiptTrie.root, utils_1.BUFFER_256_ZERO, vm.stateManager._trie.root, 0n, // gas used\n                    options.extraData, [], storageKeys);\n                    this.emit(\"block\", finalizedBlockData);\n                    __classPrivateFieldGet(this, _Miner_reset, \"f\").call(this);\n                    return { block: finalizedBlockData.block, transactions: [] };\n                }\n                let numTransactions = 0;\n                let blockGasLeft = options.blockGasLimit.toBigInt();\n                let blockGasUsed = 0n;\n                const blockBloom = Buffer.allocUnsafe(256).fill(0);\n                const promises = [];\n                // Set a block-level checkpoint so our unsaved trie doesn't update the\n                // vm's \"live\" trie.\n                await vm.stateManager.checkpoint();\n                const TraceData = (0, ethereum_utils_1.TraceDataFactory)();\n                // We need to listen for any SSTORE opcodes so we can grab the raw, unhashed version\n                // of the storage key and save it to the db along with it's keccak hashed version of\n                // the storage key. Why you might ask? So we can reference the raw version in\n                // debug_storageRangeAt.\n                const stepListener = (event, next) => {\n                    if (event.opcode.name === \"SSTORE\") {\n                        const key = TraceData.from(event.stack[event.stack.length - 1].toArrayLike(Buffer)).toBuffer();\n                        const hashedKey = (0, utils_1.keccak)(key);\n                        storageKeys.set(hashedKey.toString(), { key, hashedKey });\n                    }\n                    next();\n                };\n                vm.on(\"step\", stepListener);\n                // Run until we run out of items, or until the inner loop stops us.\n                // we don't call `shift()` here because we will may need to `replace`\n                // this `best` transaction with the next best transaction from the same\n                // origin later.\n                let best;\n                while ((best = priced.peek())) {\n                    const origin = best.from.toString();\n                    if (best.calculateIntrinsicGas() > blockGasLeft) {\n                        // if the current best transaction can't possibly fit in this block\n                        // go ahead and run the next best transaction, ignoring all other\n                        // pending transactions from this account for this block.\n                        //  * We don't replace this \"best\" transaction with another from the\n                        // same account.\n                        //  * We do \"unlock\" this transaction in the transaction pool's `pending`\n                        // queue so it can be replaced, if needed.\n                        best.locked = false;\n                        __classPrivateFieldGet(this, _Miner_removeBestAndOrigin, \"f\").call(this, origin);\n                        continue;\n                    }\n                    __classPrivateFieldSet(this, _Miner_currentlyExecutingPrice, best.effectiveGasPrice.toBigInt(), \"f\");\n                    // Set a transaction-level checkpoint so we can undo state changes in\n                    // the case where the transaction is rejected by the VM.\n                    await vm.stateManager.checkpoint();\n                    // Set the internal trie's block number (for forking)\n                    vm.stateManager._trie.blockNumber = utils_1.Quantity.from(runtimeBlock.header.number.toArrayLike(Buffer));\n                    const result = await __classPrivateFieldGet(this, _Miner_runTx, \"f\").call(this, best, runtimeBlock, origin, pending);\n                    if (result !== null) {\n                        const gasUsed = utils_1.Quantity.from(result.gasUsed.toArrayLike(Buffer)).toBigInt();\n                        if (blockGasLeft >= gasUsed) {\n                            // if the transaction will fit in the block, commit it!\n                            await vm.stateManager.commit();\n                            blockTransactions[numTransactions] = best;\n                            blockGasLeft -= gasUsed;\n                            blockGasUsed += gasUsed;\n                            // calculate receipt and tx tries\n                            const txKey = (0, rlp_1.encode)(numTransactions === 0\n                                ? utils_1.BUFFER_EMPTY\n                                : (0, utils_1.uintToBuffer)(numTransactions));\n                            promises.push(transactionsTrie.put(txKey, best.serialized));\n                            const receipt = best.fillFromResult(result, blockGasUsed);\n                            promises.push(receiptTrie.put(txKey, receipt));\n                            // update the block's bloom\n                            updateBloom(blockBloom, result.bloom.bitvector);\n                            numTransactions++;\n                            const pendingOrigin = pending.get(origin);\n                            inProgress.add(best);\n                            best.once(\"finalized\").then(() => {\n                                // it is in the database (or thrown out) so delete it from the\n                                // `inProgress` Set\n                                inProgress.delete(best);\n                            });\n                            // since this transaction was successful, remove it from the \"pending\"\n                            // transaction pool.\n                            const hasMoreFromOrigin = pendingOrigin.removeBest();\n                            if (hasMoreFromOrigin) {\n                                // remove the newest (`best`) tx from this account's pending queue\n                                // as we know we can fit another transaction in the block. Stick\n                                // this tx into our `priced` heap.\n                                keepMining = (0, replace_from_heap_1.default)(priced, pendingOrigin);\n                            }\n                            else {\n                                // since we don't have any more txs from this account, just get the\n                                // next best transaction sorted in our `priced` heap.\n                                keepMining = __classPrivateFieldGet(this, _Miner_removeBestAndOrigin, \"f\").call(this, origin);\n                            }\n                            // if we:\n                            //  * don't have enough gas left for even the smallest of transactions\n                            //  * Or if we've mined enough transactions\n                            // we're done with this block!\n                            // notice: when `maxTransactions` is `-1` (AKA infinite), `numTransactions === maxTransactions`\n                            // will always return false, so this comparison works out fine.\n                            if (blockGasLeft <= ethereum_transaction_1.Params.TRANSACTION_GAS ||\n                                numTransactions === maxTransactions) {\n                                break;\n                            }\n                        }\n                        else {\n                            // didn't fit in the current block\n                            await vm.stateManager.revert();\n                            // unlock the transaction so the transaction pool can reconsider this\n                            // transaction\n                            best.locked = false;\n                            // didn't fit. remove it from the priced transactions without replacing\n                            // it with another from the account. This transaction will have to be\n                            // run again in another block.\n                            keepMining = priced.removeBest();\n                        }\n                    }\n                    else {\n                        // no result means the transaction is an \"always failing tx\", so we\n                        // revert its changes here.\n                        // Note: we don't clean up (`removeBest`, etc) because `runTx`'s\n                        // error handler does the clean up itself.\n                        await vm.stateManager.revert();\n                    }\n                }\n                await Promise.all(promises);\n                await vm.stateManager.commit();\n                vm.removeListener(\"step\", stepListener);\n                const finalizedBlockData = runtimeBlock.finalize(transactionsTrie.root, receiptTrie.root, blockBloom, vm.stateManager._trie.root, blockGasUsed, options.extraData, blockTransactions, storageKeys);\n                block = finalizedBlockData.block;\n                this.emit(\"block\", finalizedBlockData);\n                if (onlyOneBlock) {\n                    __classPrivateFieldSet(this, _Miner_currentlyExecutingPrice, 0n, \"f\");\n                    __classPrivateFieldGet(this, _Miner_reset, \"f\").call(this);\n                    break;\n                }\n                else {\n                    __classPrivateFieldSet(this, _Miner_currentlyExecutingPrice, 0n, \"f\");\n                    __classPrivateFieldGet(this, _Miner_updatePricedHeap, \"f\").call(this);\n                    if (priced.length !== 0) {\n                        runtimeBlock = __classPrivateFieldGet(this, _Miner_createBlock, \"f\").call(this, block);\n                        // if baseFeePerGas is undefined, we are pre london hard fork.\n                        // no need to refresh the order of the heap because all Txs only have gasPrice.\n                        if (__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\") !== undefined) {\n                            priced.refresh(__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\"));\n                        }\n                    }\n                    else {\n                        // reset the miner\n                        __classPrivateFieldGet(this, _Miner_reset, \"f\").call(this);\n                    }\n                }\n            } while (keepMining);\n            return { block, transactions: blockTransactions };\n        });\n        _Miner_runTx.set(this, async (tx, block, origin, pending) => {\n            const context = {};\n            const vm = __classPrivateFieldGet(this, _Miner_vm, \"f\");\n            this.emit(\"ganache:vm:tx:before\", { context });\n            // we always listen to the step event even if `#emitStepEvent` is false in\n            // case the user starts listening in the middle of the transaction.\n            const stepListener = event => {\n                if (!__classPrivateFieldGet(this, _Miner_emitStepEvent, \"f\"))\n                    return;\n                this.emit(\"ganache:vm:tx:step\", (0, provider_events_1.makeStepEvent)(context, event));\n            };\n            vm.on(\"step\", stepListener);\n            try {\n                return await vm.runTx({\n                    tx: tx.toVmTransaction(),\n                    block: block\n                });\n            }\n            catch (err) {\n                const errorMessage = err.message;\n                // We do NOT want to re-run this transaction.\n                // Update the `priced` heap with the next best transaction from this\n                // account\n                const pendingOrigin = pending.get(origin);\n                if (pendingOrigin.removeBest()) {\n                    (0, replace_from_heap_1.default)(__classPrivateFieldGet(this, _Miner_priced, \"f\"), pendingOrigin);\n                }\n                else {\n                    // if there are no more transactions from this origin remove this tx\n                    // from the priced heap and clear out it's origin so it can accept new\n                    // transactions from this origin.\n                    __classPrivateFieldGet(this, _Miner_removeBestAndOrigin, \"f\").call(this, origin);\n                }\n                const e = {\n                    execResult: {\n                        runState: { programCounter: 0 },\n                        exceptionError: { error: errorMessage },\n                        returnValue: utils_1.BUFFER_EMPTY\n                    }\n                };\n                const error = new ethereum_utils_1.RuntimeError(tx.hash, e, ethereum_utils_1.RETURN_TYPES.TRANSACTION_HASH);\n                tx.finalize(\"rejected\", error);\n                return null;\n            }\n            finally {\n                vm.removeListener(\"step\", stepListener);\n                this.emit(\"ganache:vm:tx:after\", { context });\n            }\n        });\n        _Miner_removeBestAndOrigin.set(this, (origin) => {\n            __classPrivateFieldGet(this, _Miner_origins, \"f\").delete(origin);\n            return __classPrivateFieldGet(this, _Miner_priced, \"f\").removeBest();\n        });\n        _Miner_reset.set(this, () => {\n            __classPrivateFieldGet(this, _Miner_origins, \"f\").clear();\n            // HACK: see: https://github.com/trufflesuite/ganache/issues/3093\n            //\n            //When the priced heap is reset, meaning we're clearing out the heap\n            // and origins list to be set again when the miner is called, loop over\n            // the priced heap transactions and \"unlock\" them (set tx.locked = false)\n            //\n            // The real fix would include fixing the use of locked, as it's\n            // currently overloaded to mean \"is in priced heap\" and also \"is being\n            // mined\".\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            const length = priced.length;\n            const pricedArray = priced.array;\n            for (let i = 0; i < length; i++) {\n                const bestFromOrigin = pricedArray[i];\n                bestFromOrigin.locked = false;\n            }\n            priced.clear();\n            __classPrivateFieldSet(this, _Miner_isBusy, false, \"f\");\n        });\n        /**\n         * Adds one transaction from each origin into the \"priced\" heap, which\n         * sorts each tx by gasPrice (high to low)\n         */\n        _Miner_setPricedHeap.set(this, () => {\n            const { pending } = __classPrivateFieldGet(this, _Miner_executables, \"f\");\n            const origins = __classPrivateFieldGet(this, _Miner_origins, \"f\");\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            for (let mapping of pending) {\n                const heap = mapping[1];\n                const next = heap.peek();\n                if (next && !next.locked) {\n                    const origin = next.from.toString();\n                    origins.add(origin);\n                    next.updateEffectiveGasPrice(__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\"));\n                    priced.push(next);\n                    next.locked = true;\n                }\n            }\n        });\n        /**\n         * Updates the \"priced\" heap with transactions from origins it doesn't yet\n         * contain.\n         */\n        _Miner_updatePricedHeap.set(this, () => {\n            const { pending } = __classPrivateFieldGet(this, _Miner_executables, \"f\");\n            const origins = __classPrivateFieldGet(this, _Miner_origins, \"f\");\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            // Note: the `pending` Map passed here is \"live\", meaning it is constantly\n            // being updated by the `transactionPool`. This allows us to begin\n            // processing a block with the _current_ pending transactions, and while\n            // that is processing, to receive new transactions, updating our `priced`\n            // heap with these new pending transactions.\n            for (let mapping of pending) {\n                const heap = mapping[1];\n                const next = heap.peek();\n                if (next && !next.locked) {\n                    const price = next.effectiveGasPrice.toBigInt();\n                    if (__classPrivateFieldGet(this, _Miner_currentlyExecutingPrice, \"f\") > price) {\n                        // don't insert a transaction into the miner's `priced` heap\n                        // if it will be better than its last\n                        continue;\n                    }\n                    const origin = next.from.toString();\n                    if (origins.has(origin)) {\n                        // don't insert a transaction into the miner's `priced` heap if it\n                        // has already queued up transactions for that origin\n                        continue;\n                    }\n                    origins.add(origin);\n                    next.updateEffectiveGasPrice(__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\"));\n                    priced.push(next);\n                    next.locked = true;\n                }\n            }\n        });\n        /**\n         * Sets the #currentBlockBaseFeePerGas property if the current block\n         * has a baseFeePerGas property\n         */\n        _Miner_setCurrentBlockBaseFeePerGas.set(this, (block) => {\n            const baseFeePerGas = block.header.baseFeePerGas;\n            // before london hard fork, there will be no baseFeePerGas on the block\n            __classPrivateFieldSet(this, _Miner_currentBlockBaseFeePerGas, baseFeePerGas === undefined\n                ? undefined\n                : utils_1.Quantity.from(baseFeePerGas.buf), \"f\");\n        });\n        __classPrivateFieldSet(this, _Miner_vm, vm, \"f\");\n        __classPrivateFieldSet(this, _Miner_options, options, \"f\");\n        __classPrivateFieldSet(this, _Miner_executables, executables, \"f\");\n        __classPrivateFieldSet(this, _Miner_createBlock, (previousBlock) => {\n            const newBlock = createBlock(previousBlock);\n            __classPrivateFieldGet(this, _Miner_setCurrentBlockBaseFeePerGas, \"f\").call(this, newBlock);\n            return newBlock;\n        }, \"f\");\n        // initialize the heap with an empty array\n        __classPrivateFieldGet(this, _Miner_priced, \"f\").init([]);\n    }\n    async pause() {\n        if (!__classPrivateFieldGet(this, _Miner_paused, \"f\")) {\n            __classPrivateFieldSet(this, _Miner_paused, true, \"f\");\n            __classPrivateFieldSet(this, _Miner_resumer, new Promise(resolve => {\n                __classPrivateFieldSet(this, _Miner_resolver, resolve, \"f\");\n            }), \"f\");\n        }\n        if (__classPrivateFieldGet(this, _Miner_isBusy, \"f\")) {\n            await this.once(\"idle\");\n        }\n    }\n    resume() {\n        if (!__classPrivateFieldGet(this, _Miner_paused, \"f\"))\n            return;\n        __classPrivateFieldSet(this, _Miner_paused, false, \"f\");\n        __classPrivateFieldGet(this, _Miner_resolver, \"f\").call(this);\n    }\n    /**\n     * @param maxTransactions: - maximum number of transactions per block. If `-1`,\n     * unlimited.\n     * @param onlyOneBlock: - set to `true` if only 1 block should be mined.\n     *\n     * @returns the transactions mined in the _first_ block\n     */\n    async mine(block, maxTransactions = Capacity.FillBlock, onlyOneBlock = false) {\n        if (__classPrivateFieldGet(this, _Miner_paused, \"f\")) {\n            await __classPrivateFieldGet(this, _Miner_resumer, \"f\");\n        }\n        // only allow mining a single block at a time (per miner)\n        if (__classPrivateFieldGet(this, _Miner_isBusy, \"f\")) {\n            // if we are currently mining a block, set the `pending` property\n            // so the miner knows it can immediately start mining another block once\n            // it is done with its current work.\n            __classPrivateFieldSet(this, _Miner_pending, true, \"f\");\n            __classPrivateFieldGet(this, _Miner_updatePricedHeap, \"f\").call(this);\n            return;\n        }\n        else {\n            __classPrivateFieldGet(this, _Miner_setCurrentBlockBaseFeePerGas, \"f\").call(this, block);\n            __classPrivateFieldGet(this, _Miner_setPricedHeap, \"f\").call(this);\n            const result = await __classPrivateFieldGet(this, _Miner_mine, \"f\").call(this, block, maxTransactions, onlyOneBlock);\n            this.emit(\"idle\");\n            return result;\n        }\n    }\n    toggleStepEvent(enable) {\n        __classPrivateFieldSet(this, _Miner_emitStepEvent, enable, \"f\");\n    }\n}\nexports.default = Miner;\n_Miner_currentlyExecutingPrice = new WeakMap(), _Miner_origins = new WeakMap(), _Miner_pending = new WeakMap(), _Miner_isBusy = new WeakMap(), _Miner_paused = new WeakMap(), _Miner_resumer = new WeakMap(), _Miner_currentBlockBaseFeePerGas = new WeakMap(), _Miner_resolver = new WeakMap(), _Miner_emitStepEvent = new WeakMap(), _Miner_executables = new WeakMap(), _Miner_options = new WeakMap(), _Miner_vm = new WeakMap(), _Miner_createBlock = new WeakMap(), _Miner_priced = new WeakMap(), _Miner_mine = new WeakMap(), _Miner_mineTxs = new WeakMap(), _Miner_runTx = new WeakMap(), _Miner_removeBestAndOrigin = new WeakMap(), _Miner_reset = new WeakMap(), _Miner_setPricedHeap = new WeakMap(), _Miner_updatePricedHeap = new WeakMap(), _Miner_setCurrentBlockBaseFeePerGas = new WeakMap();\n//# sourceMappingURL=miner.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction replaceFromHeap(priced, source) {\n    // get the next best for this account, removing from the source Heap:\n    const next = source.peek();\n    if (next) {\n        // remove the current best priced transaction from this account and replace\n        // it with the account's next lowest nonce transaction:\n        priced.replaceBest(next);\n        next.locked = true;\n        return true;\n    }\n    else {\n        // since we don't have a next, just remove this item from priced\n        return priced.removeBest();\n    }\n}\nexports.default = replaceFromHeap;\n//# sourceMappingURL=replace-from-heap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeStepEvent = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nfunction normalizeEvent(event) {\n    const { account, memory: originalMemory, opcode } = event;\n    const memoryLength = originalMemory.length;\n    // We need to copy some buffers so the user can't mutate them on us:\n    // Instead of making a bunch of individual buffers, we just make 1 and then\n    // fill it in as needed.\n    const sharedBuffer = Buffer.allocUnsafe(104 + memoryLength);\n    account.stateRoot.copy(sharedBuffer, 0, 0, 32); // always 32 bytes\n    account.codeHash.copy(sharedBuffer, 32, 0, 32); // always 32 bytes\n    event.address.buf.copy(sharedBuffer, 64, 0, 20); // always 20 bytes\n    event.codeAddress.buf.copy(sharedBuffer, 84, 0, 20); // always 20 bytes\n    const stateRoot = sharedBuffer.slice(0, 32);\n    const codeHash = sharedBuffer.slice(32, 64);\n    const address = sharedBuffer.slice(64, 84);\n    const codeAddress = sharedBuffer.slice(84, 104);\n    let memory;\n    if (memoryLength !== 0) {\n        originalMemory.copy(sharedBuffer, 104, 0, memoryLength);\n        memory = sharedBuffer.slice(104, 104 + memoryLength);\n    }\n    else {\n        memory = utils_1.BUFFER_ZERO;\n    }\n    return {\n        account: {\n            nonce: utils_1.Quantity.from(account.nonce.toArrayLike(Buffer)).toBigInt(),\n            balance: utils_1.Quantity.from(account.balance.toArrayLike(Buffer)).toBigInt(),\n            stateRoot,\n            codeHash\n        },\n        address,\n        codeAddress,\n        depth: BigInt(event.depth),\n        gasLeft: utils_1.Quantity.from(event.gasLeft.toArrayLike(Buffer)).toBigInt(),\n        gasRefund: utils_1.Quantity.from(event.gasRefund.toArrayLike(Buffer)).toBigInt(),\n        memory,\n        memoryWordCount: utils_1.Quantity.from(event.memoryWordCount.toArrayLike(Buffer)).toBigInt(),\n        opcode: {\n            name: opcode.name,\n            fee: opcode.fee\n        },\n        pc: BigInt(event.pc),\n        returnStack: event.returnStack.map(rs => rs.toArrayLike(Buffer)),\n        stack: event.stack.map(s => s.toArrayLike(Buffer))\n    };\n}\nfunction makeStepEvent(context, event) {\n    return {\n        context,\n        data: normalizeEvent(event)\n    };\n}\nexports.makeStepEvent = makeStepEvent;\n//# sourceMappingURL=provider-events.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _EthereumProvider_options, _EthereumProvider_api, _EthereumProvider_executor, _EthereumProvider_wallet, _EthereumProvider_blockchain, _EthereumProvider_send, _EthereumProvider_logRequest, _EthereumProvider_legacySendPayloads, _EthereumProvider_legacySendPayload;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthereumProvider = void 0;\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst api_1 = __importDefault(require(\"./api\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_options_1 = require(\"@ganache/ethereum-options\");\nconst lodash_clonedeep_1 = __importDefault(require(\"lodash.clonedeep\"));\nconst wallet_1 = __importDefault(require(\"./wallet\"));\nconst blockchain_1 = __importDefault(require(\"./blockchain\"));\nconst fork_1 = require(\"./forking/fork\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nfunction parseCoinbase(coinbase, initialAccounts) {\n    switch (typeof coinbase) {\n        case \"object\":\n            return coinbase;\n        case \"number\":\n            const account = initialAccounts[coinbase];\n            if (account) {\n                return account.address;\n            }\n            else {\n                throw new Error(`invalid coinbase address index: ${coinbase}`);\n            }\n        case \"string\":\n            return ethereum_address_1.Address.from(coinbase);\n        default: {\n            throw new Error(`coinbase address must be string or number, received: ${coinbase}`);\n        }\n    }\n}\n/**\n * Detects when a ganache:vm:tx:step listener is active and signals the onChange\n * function when the status changes\n * @param provider -\n * @param onChange -\n */\nfunction hookEventSystem(provider, onChange) {\n    let listenerCount = 0;\n    provider.on(emittery_1.default.listenerAdded, ({ eventName }) => {\n        if (eventName === \"ganache:vm:tx:step\" || eventName === undefined) {\n            if (listenerCount === 0) {\n                onChange(true);\n            }\n            listenerCount++;\n        }\n    });\n    provider.on(emittery_1.default.listenerRemoved, ({ eventName }) => {\n        if (eventName === \"ganache:vm:tx:step\" || eventName === undefined) {\n            listenerCount--;\n            if (listenerCount === 0) {\n                onChange(false);\n            }\n        }\n    });\n}\nclass EthereumProvider extends emittery_1.default {\n    constructor(options = {}, executor) {\n        super();\n        _EthereumProvider_options.set(this, void 0);\n        _EthereumProvider_api.set(this, void 0);\n        _EthereumProvider_executor.set(this, void 0);\n        _EthereumProvider_wallet.set(this, void 0);\n        _EthereumProvider_blockchain.set(this, void 0);\n        /**\n         * Remove an event subscription\n         */\n        this.removeListener = this.off;\n        _EthereumProvider_send.set(this, (arg1, arg2) => {\n            let method;\n            let params;\n            let response;\n            if (typeof arg1 === \"string\") {\n                // this signature is (not) non-standard and is only a ganache thing!!!\n                // we should probably remove it, but I really like it so I haven't yet.\n                method = arg1;\n                params = arg2;\n                response = this.request({ method, params });\n            }\n            else if (typeof arg2 === \"function\") {\n                // handle backward compatibility with callback-style ganache-core\n                if (Array.isArray(arg1)) {\n                    const callback = arg2;\n                    __classPrivateFieldGet(this, _EthereumProvider_legacySendPayloads, \"f\").call(this, arg1).then(({ error, result }) => {\n                        callback(error, result);\n                    });\n                }\n                else {\n                    const callback = arg2;\n                    __classPrivateFieldGet(this, _EthereumProvider_legacySendPayload, \"f\").call(this, arg1).then(({ error, result }) => {\n                        callback(error, result);\n                    });\n                }\n            }\n            else {\n                throw new Error(\"No callback provided to provider's send function. As of web3 1.0, provider.send \" +\n                    \"is no longer synchronous and must be passed a callback as its final argument.\");\n            }\n            return response;\n        });\n        _EthereumProvider_logRequest.set(this, (method, params) => {\n            const options = __classPrivateFieldGet(this, _EthereumProvider_options, \"f\");\n            if (options.logging.verbose) {\n                options.logging.logger.log(`   >  ${method}: ${params == null\n                    ? params\n                    : JSON.stringify(params, null, 2).split(\"\\n\").join(\"\\n   > \")}`);\n            }\n            else {\n                options.logging.logger.log(method);\n            }\n        });\n        this.disconnect = async () => {\n            await __classPrivateFieldGet(this, _EthereumProvider_blockchain, \"f\").stop();\n            this.emit(\"disconnect\");\n            return;\n        };\n        //#region legacy\n        _EthereumProvider_legacySendPayloads.set(this, (payloads) => {\n            return Promise.all(payloads.map(__classPrivateFieldGet(this, _EthereumProvider_legacySendPayload, \"f\"))).then(results => {\n                let mainError = null;\n                const responses = [];\n                results.forEach(({ error, result }, i) => {\n                    responses.push(result);\n                    if (error) {\n                        if (mainError == null) {\n                            mainError = new Error(\"Batch error:\");\n                        }\n                        mainError.errors[i] = error;\n                    }\n                });\n                return { error: mainError, result: responses };\n            });\n        });\n        _EthereumProvider_legacySendPayload.set(this, async (payload) => {\n            const method = payload.method;\n            const params = payload.params;\n            try {\n                const result = await this.request({ method, params });\n                return {\n                    error: null,\n                    result: (0, utils_1.makeResponse)(payload.id, JSON.parse(JSON.stringify(result)))\n                };\n            }\n            catch (error) {\n                let result;\n                // In order to provide `vmErrorsOnRPCResponse`, the `error` might have\n                // a `result` property that we need to move to the result field. Yes,\n                // it's super weird behavior!\n                if ((0, utils_1.hasOwn)(error, \"result\")) {\n                    result = error.result;\n                    delete error.result;\n                }\n                return { error, result: (0, utils_1.makeError)(payload.id, error, result) };\n            }\n        });\n        __classPrivateFieldSet(this, _EthereumProvider_executor, executor, \"f\");\n        const providerOptions = (__classPrivateFieldSet(this, _EthereumProvider_options, ethereum_options_1.EthereumOptionsConfig.normalize(options), \"f\"));\n        const wallet = (__classPrivateFieldSet(this, _EthereumProvider_wallet, new wallet_1.default(providerOptions.wallet), \"f\"));\n        const accounts = wallet.initialAccounts;\n        const fork = providerOptions.fork.url ||\n            providerOptions.fork.provider ||\n            providerOptions.fork.network;\n        const fallback = fork ? new fork_1.Fork(providerOptions, accounts) : null;\n        const coinbase = parseCoinbase(providerOptions.miner.coinbase, accounts);\n        const blockchain = new blockchain_1.default(providerOptions, coinbase, fallback);\n        __classPrivateFieldSet(this, _EthereumProvider_blockchain, blockchain, \"f\");\n        blockchain.on(\"ganache:vm:tx:before\", event => {\n            this.emit(\"ganache:vm:tx:before\", event);\n        });\n        blockchain.on(\"ganache:vm:tx:step\", event => {\n            this.emit(\"ganache:vm:tx:step\", event);\n        });\n        blockchain.on(\"ganache:vm:tx:after\", event => {\n            this.emit(\"ganache:vm:tx:after\", event);\n        });\n        hookEventSystem(this, (enable) => {\n            blockchain.toggleStepEvent(enable);\n        });\n        __classPrivateFieldSet(this, _EthereumProvider_api, new api_1.default(providerOptions, wallet, blockchain), \"f\");\n    }\n    async initialize() {\n        await __classPrivateFieldGet(this, _EthereumProvider_blockchain, \"f\").initialize(__classPrivateFieldGet(this, _EthereumProvider_wallet, \"f\").initialAccounts);\n        this.emit(\"connect\");\n    }\n    /**\n     * Returns the options, including defaults and generated, used to start Ganache.\n     */\n    getOptions() {\n        return (0, lodash_clonedeep_1.default)(__classPrivateFieldGet(this, _EthereumProvider_options, \"f\"));\n    }\n    /**\n     * Returns the unlocked accounts\n     */\n    getInitialAccounts() {\n        const accounts = {};\n        const wallet = __classPrivateFieldGet(this, _EthereumProvider_wallet, \"f\");\n        const unlockedAccounts = __classPrivateFieldGet(this, _EthereumProvider_wallet, \"f\").unlockedAccounts;\n        wallet.initialAccounts.forEach(account => {\n            const address = account.address.toString();\n            accounts[address] = {\n                secretKey: account.privateKey.toString(),\n                balance: account.balance.toBigInt(),\n                unlocked: unlockedAccounts.has(address)\n            };\n        });\n        return accounts;\n    }\n    send(arg1, arg2) {\n        return __classPrivateFieldGet(this, _EthereumProvider_send, \"f\").call(this, arg1, arg2);\n    }\n    sendAsync(arg1, arg2) {\n        __classPrivateFieldGet(this, _EthereumProvider_send, \"f\").call(this, arg1, arg2);\n    }\n    /**\n     * EIP-1193 style request method\n     * @param args -\n     * @returns A Promise that resolves with the method's result or rejects with a CodedError\n     * @EIP [1193](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md)\n     */\n    async request(args) {\n        const rawResult = await this._requestRaw(args);\n        const value = await rawResult.value;\n        return JSON.parse(JSON.stringify(value));\n    }\n    /**\n     * INTERNAL. Used when the caller wants to access the original `PromiEvent`,\n     * which would otherwise be flattened into a regular Promise through the\n     * Promise chain.\n     * @param request - the request\n     */\n    async _requestRaw({ method, params }) {\n        __classPrivateFieldGet(this, _EthereumProvider_logRequest, \"f\").call(this, method, params);\n        const result = await __classPrivateFieldGet(this, _EthereumProvider_executor, \"f\").execute(__classPrivateFieldGet(this, _EthereumProvider_api, \"f\"), method, params);\n        const promise = result.value;\n        if (promise instanceof utils_1.PromiEvent) {\n            promise.on(\"message\", data => {\n                const normalizedData = JSON.parse(JSON.stringify(data));\n                // EIP-1193\n                this.emit(\"message\", normalizedData);\n                // legacy\n                this.emit(\"data\", {\n                    jsonrpc: \"2.0\",\n                    method: \"eth_subscription\",\n                    params: normalizedData.data\n                });\n            });\n        }\n        const value = promise.catch((error) => {\n            if (__classPrivateFieldGet(this, _EthereumProvider_options, \"f\").chain.vmErrorsOnRPCResponse) {\n                if ((0, utils_1.hasOwn)(error, \"result\")) {\n                    // stringify the result here\n                    // TODO: not sure why the stringification is even needed.\n                    error.result = JSON.parse(JSON.stringify(error.result));\n                }\n            }\n            // then rethrow\n            throw error;\n        });\n        return { value: value };\n    }\n}\nexports.EthereumProvider = EthereumProvider;\n_EthereumProvider_options = new WeakMap(), _EthereumProvider_api = new WeakMap(), _EthereumProvider_executor = new WeakMap(), _EthereumProvider_wallet = new WeakMap(), _EthereumProvider_blockchain = new WeakMap(), _EthereumProvider_send = new WeakMap(), _EthereumProvider_logRequest = new WeakMap(), _EthereumProvider_legacySendPayloads = new WeakMap(), _EthereumProvider_legacySendPayload = new WeakMap();\n//# sourceMappingURL=provider.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TransactionPool_options, _TransactionPool_priceBump, _TransactionPool_blockchain, _TransactionPool_accountPromises, _TransactionPool_validateTransaction;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TriageOption = void 0;\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst utils_2 = require(\"@ganache/utils\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\n/**\n * Checks if the `replacer` is eligible to replace the `replacee` transaction\n * in the transaction pool queue. Replacement eligibility requires that\n * the transactions have the same nonce and the `replacer` has a gas price\n * that is `gasPrice * priceBump` better than our `replacee`.\n * @param replacee -\n * @param replaceeNonce -\n * @param replacerNonce -\n * @param replacerGasPrice -\n * @param priceBump -\n */\nfunction shouldReplace(replacee, replacerNonce, replacer, priceBump) {\n    const replaceeNonce = replacee.nonce.toBigInt();\n    // if the nonces differ, our replacer is not eligible to replace\n    if (replaceeNonce !== replacerNonce) {\n        return false;\n    }\n    // if the transaction being replaced is in the middle of being mined, we can't\n    // replpace it so let's back out early\n    if (replacee.locked) {\n        throw new ethereum_utils_1.CodedError(ethereum_utils_1.TRANSACTION_LOCKED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED);\n    }\n    const replacerTip = \"maxPriorityFeePerGas\" in replacer\n        ? replacer.maxPriorityFeePerGas.toBigInt()\n        : replacer.effectiveGasPrice.toBigInt();\n    const replacerMaxFee = \"maxFeePerGas\" in replacer\n        ? replacer.maxFeePerGas.toBigInt()\n        : replacer.effectiveGasPrice.toBigInt();\n    const replaceeTip = \"maxPriorityFeePerGas\" in replacee\n        ? replacee.maxPriorityFeePerGas.toBigInt()\n        : replacee.effectiveGasPrice.toBigInt();\n    const replaceeMaxFee = \"maxFeePerGas\" in replacee\n        ? replacee.maxFeePerGas.toBigInt()\n        : replacee.effectiveGasPrice.toBigInt();\n    const tipPremium = replaceeTip + (replaceeTip * priceBump) / 100n;\n    const maxFeePremium = replaceeMaxFee + (replaceeMaxFee * priceBump) / 100n;\n    // if both the tip and max fee of the new transaction aren't\n    // `priceBumpPercent` more than the existing transaction, this transaction is\n    // underpriced\n    if (replacerTip < tipPremium || replacerMaxFee < maxFeePremium) {\n        throw new ethereum_utils_1.CodedError(ethereum_utils_1.UNDERPRICED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED);\n    }\n    else {\n        return true;\n    }\n}\nfunction byNonce(values, a, b) {\n    return ((values[b].nonce.toBigInt() || 0n) > (values[a].nonce.toBigInt() || 0n));\n}\n/**\n * Used to track a transaction's placement in the transaction pool based off\n * of the its nonce.\n */\nvar TriageOption;\n(function (TriageOption) {\n    /**\n     * Default value. A tx will be added to the future queue if it is not yet\n     * executable based off of the transaction's nonce.\n     */\n    TriageOption[TriageOption[\"FutureQueue\"] = 0] = \"FutureQueue\";\n    /**\n     * The transaction is currently executable based off the transaction's nonce.\n     */\n    TriageOption[TriageOption[\"Executable\"] = 1] = \"Executable\";\n    /**\n     * The transaction is currently executable, has the same nonce as a pending\n     * transaction of the same origin, and has a gas price that is high enough to\n     * replace the currently pending transaction.\n     */\n    TriageOption[TriageOption[\"ReplacesPendingExecutable\"] = 2] = \"ReplacesPendingExecutable\";\n    /**\n     * The transaction is not currently executable but has the same nonce as a\n     * future queued transaction of the same origin and has a gas price that is\n     * high enough to replace the future queued transaction.\n     */\n    TriageOption[TriageOption[\"ReplacesFutureTransaction\"] = 3] = \"ReplacesFutureTransaction\";\n})(TriageOption = exports.TriageOption || (exports.TriageOption = {}));\nclass TransactionPool extends emittery_1.default {\n    constructor(options, blockchain, origins = new Map()) {\n        super();\n        _TransactionPool_options.set(this, void 0);\n        /**\n         * Minimum price bump percentage needed to replace a transaction that already exists in the transaction pool.\n         */\n        _TransactionPool_priceBump.set(this, void 0);\n        _TransactionPool_blockchain.set(this, void 0);\n        this.executables = {\n            inProgress: new Set(),\n            pending: new Map()\n        };\n        _TransactionPool_accountPromises.set(this, new Map());\n        this.drain = () => {\n            // notify listeners (the blockchain, then the miner, eventually) that we\n            // have executable transactions ready\n            this.emit(\"drain\");\n        };\n        _TransactionPool_validateTransaction.set(this, (transaction) => {\n            // Check the transaction doesn't exceed the current block limit gas.\n            if (transaction.gas > __classPrivateFieldGet(this, _TransactionPool_options, \"f\").blockGasLimit) {\n                return new ethereum_utils_1.CodedError(ethereum_utils_1.GAS_LIMIT, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            // Should supply enough intrinsic gas\n            const gas = transaction.calculateIntrinsicGas();\n            if (gas === -1n || transaction.gas.toBigInt() < gas) {\n                return new ethereum_utils_1.CodedError(ethereum_utils_1.INTRINSIC_GAS_TOO_LOW, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            return null;\n        });\n        __classPrivateFieldSet(this, _TransactionPool_blockchain, blockchain, \"f\");\n        __classPrivateFieldSet(this, _TransactionPool_options, options, \"f\");\n        this.origins = origins;\n        __classPrivateFieldSet(this, _TransactionPool_priceBump, options.priceBump, \"f\");\n    }\n    /**\n     * Inserts a transaction into the pending queue, if executable, or future pool\n     * if not.\n     *\n     * @param transaction -\n     * @param secretKey -\n     * @returns data that can be used to drain the queue\n     */\n    async prepareTransaction(transaction, secretKey) {\n        let err;\n        err = __classPrivateFieldGet(this, _TransactionPool_validateTransaction, \"f\").call(this, transaction);\n        if (err != null) {\n            throw err;\n        }\n        const from = transaction.from;\n        let txNonce;\n        if (!transaction.nonce.isNull()) {\n            txNonce = transaction.nonce.toBigInt();\n        }\n        const origin = from.toString();\n        // We await the `transactorNoncePromise` async request to ensure we process\n        // transactions in FIFO order *by account*. We look up accounts because\n        // ganache fills in missing nonces automatically, and we need to do it in\n        // order.\n        // The trick here is that we might actually get the next nonce from the\n        // account's pending executable transactions, not the account...\n        // But another transaction might currently be getting the nonce from the\n        // account, if it is, we need to wait for it to be done doing that. Hence:\n        let transactorPromise = __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").get(origin);\n        if (transactorPromise) {\n            await transactorPromise;\n        }\n        // if the user called sendTransaction or sendRawTransaction, effectiveGasPrice\n        // hasn't been set yet on the tx. calculating the effectiveGasPrice requires\n        // the block context, so we need to set it outside of the transaction. this\n        // value is updated in the miner as we're more sure of what block the tx will\n        // actually go on, but we still need to set it here to check for valid\n        // transaction replacements of same origin/nonce transactions\n        if (!transaction.effectiveGasPrice &&\n            __classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").common.isActivatedEIP(1559)) {\n            const baseFeePerGas = __classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").blocks.latest.header.baseFeePerGas;\n            transaction.updateEffectiveGasPrice(baseFeePerGas);\n        }\n        // we should _probably_ cache `highestNonce`, but it's actually a really hard thing to cache as the current highest\n        // nonce might be invalidated (like if the sender doesn't have enough funds), so we'd have to go back to the previous\n        // highest nonce... but what if that previous highest nonce was also invalidated?! we have to go back to the... you\n        // get the picture.\n        // So... we currently do things sub-optimally:\n        // if we currently have txs in `executableOriginTransactions`, we iterate over them to find the highest nonce\n        // and use that. Otherwise, we just fetch it from the database.\n        // Beware! There might still be race conditions here:\n        //  * if the highest tx executes, which causes it to be removed from the `executableOriginTransactions` heap,\n        // then a new tx comes in _before_ the block is persisted to the database, the nonce might be of the second\n        // tx would be too low.\n        //  * rough idea for a fix: transactions have a `finalize` method that is called _after_ the tx is saved. Maybe\n        // when tx's are executed their nonce is moved to a `highNonceByOrigin` map? We'd check this map in addition to the\n        // `executableOriginTransactions` map, always taking the highest of the two.\n        let highestNonce = 0n;\n        if (!transactorPromise) {\n            transactorPromise = __classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").accounts.getNonceAndBalance(from);\n            __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").set(origin, transactorPromise);\n            transactorPromise.then(() => {\n                __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").delete(origin);\n            });\n        }\n        const transactor = await transactorPromise;\n        const cost = transaction.gas.toBigInt() * transaction.maxGasPrice().toBigInt() +\n            transaction.value.toBigInt();\n        if (transactor.balance.toBigInt() < cost) {\n            throw new ethereum_utils_1.CodedError(ethereum_utils_1.INSUFFICIENT_FUNDS, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED);\n        }\n        const origins = this.origins;\n        const queuedOriginTransactions = origins.get(origin);\n        let transactionPlacement = TriageOption.FutureQueue;\n        const executables = this.executables.pending;\n        let executableOriginTransactions = executables.get(origin);\n        const priceBump = __classPrivateFieldGet(this, _TransactionPool_priceBump, \"f\");\n        let length;\n        if (executableOriginTransactions &&\n            (length = executableOriginTransactions.length)) {\n            // check if a transaction with the same nonce is in the origin's\n            // executables queue already. Replace the matching transaction or throw this\n            // new transaction away as necessary.\n            const pendingArray = executableOriginTransactions.array;\n            // Notice: we're iterating over the raw heap array, which isn't\n            // necessarily sorted\n            for (let i = 0; i < length; i++) {\n                const pendingTx = pendingArray[i];\n                if (shouldReplace(pendingTx, txNonce, transaction, priceBump)) {\n                    // do an in-place replace without triggering a re-sort because we\n                    // already know where this transaction should go in this \"byNonce\"\n                    // heap.\n                    pendingArray[i] = transaction;\n                    // we don't want to mark this transaction as \"executable\" and thus\n                    // have it added to the pool again. so use this flag to skip\n                    // a re-queue.\n                    transactionPlacement = TriageOption.ReplacesPendingExecutable;\n                    pendingTx.finalize(\"rejected\", new ethereum_utils_1.CodedError(ethereum_utils_1.REPLACED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED));\n                    break;\n                }\n                // track the highest nonce for all transactions pending from this\n                // origin. If this transaction can't be used as a replacement, it will\n                // use this next highest nonce.\n                const pendingTxNonce = pendingTx.nonce.toBigInt();\n                if (pendingTxNonce > highestNonce)\n                    highestNonce = pendingTxNonce;\n            }\n            if (txNonce === void 0) {\n                // if we aren't signed and don't have a transactionNonce yet set it now\n                txNonce = highestNonce + 1n;\n                transaction.nonce = utils_2.Quantity.from(txNonce);\n                transactionPlacement = TriageOption.Executable;\n            }\n            else if (txNonce === highestNonce + 1n) {\n                // if our transaction's nonce is 1 higher than the last transaction in the\n                // origin's heap we are executable.\n                transactionPlacement = TriageOption.Executable;\n            }\n        }\n        else {\n            // since we don't have any executable transactions at the moment, we need\n            // to find our nonce from the account itself...\n            const transactorNonce = transactor.nonce.toBigInt();\n            if (txNonce === void 0) {\n                // if we don't have a transactionNonce, just use the account's next\n                // nonce and mark as executable\n                txNonce = transactorNonce ? transactorNonce : 0n;\n                transaction.nonce = utils_2.Quantity.from(txNonce);\n                transactionPlacement = TriageOption.Executable;\n            }\n            else if (txNonce < transactorNonce) {\n                // it's an error if the transaction's nonce is <= the persisted nonce\n                throw new ethereum_utils_1.CodedError(`the tx doesn't have the correct nonce. account has nonce of: ${transactorNonce} tx has nonce of: ${txNonce}`, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            else if (txNonce === transactorNonce) {\n                transactionPlacement = TriageOption.Executable;\n            }\n        }\n        // we have future transactions for this origin, this transaction is not yet\n        // executable, and this transaction is not replacing a previously queued/\n        // executable transaction, then this is potentially eligible to replace a\n        // future transaction\n        if (queuedOriginTransactions &&\n            transactionPlacement !== TriageOption.Executable &&\n            transactionPlacement !== TriageOption.ReplacesPendingExecutable &&\n            (length = queuedOriginTransactions.length)) {\n            // check if a transaction with the same nonce is in the origin's\n            // future queue already. Replace the matching transaction or throw this\n            // new transaction away as necessary.\n            const queuedArray = queuedOriginTransactions.array;\n            // Notice: we're iterating over the raw heap array, which isn't\n            // necessarily sorted\n            for (let i = 0; i < length; i++) {\n                const queuedTx = queuedArray[i];\n                if (shouldReplace(queuedTx, txNonce, transaction, priceBump)) {\n                    // do an in-place replace without triggering a re-sort because we\n                    // already know where this transaction should go in this \"byNonce\"\n                    // heap.\n                    queuedArray[i] = transaction;\n                    // we don't want to mark this transaction as \"FutureQueue\" and thus\n                    // have it added to the pool again. so use this flag to skip\n                    // a re-queue.\n                    transactionPlacement = TriageOption.ReplacesFutureTransaction;\n                    queuedTx.finalize(\"rejected\", new ethereum_utils_1.CodedError(ethereum_utils_1.REPLACED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED));\n                    break;\n                }\n            }\n        }\n        // now that we know we have a transaction nonce we can sign the transaction\n        // (if we have the secret key)\n        if (secretKey) {\n            transaction.signAndHash(secretKey.toBuffer());\n        }\n        switch (transactionPlacement) {\n            case TriageOption.Executable:\n                // if it is executable add it to the executables queue\n                if (executableOriginTransactions) {\n                    executableOriginTransactions.push(transaction);\n                }\n                else {\n                    // if we don't yet have an executables queue for this origin make one now\n                    executableOriginTransactions = utils_1.Heap.from(transaction, byNonce);\n                    executables.set(origin, executableOriginTransactions);\n                }\n                // Now we need to drain any queued transactions that were previously\n                // not executable due to nonce gaps into the origin's queue...\n                if (queuedOriginTransactions) {\n                    let nextExpectedNonce = txNonce + 1n;\n                    while (true) {\n                        const nextTx = queuedOriginTransactions.peek();\n                        const nextTxNonce = nextTx.nonce.toBigInt() || 0n;\n                        if (nextTxNonce !== nextExpectedNonce) {\n                            break;\n                        }\n                        // we've got a an executable nonce! Put it in the executables queue.\n                        executableOriginTransactions.push(nextTx);\n                        // And then remove this transaction from its origin's queue\n                        if (!queuedOriginTransactions.removeBest()) {\n                            // removeBest() returns `false` when there are no more items after\n                            // the removed item. Let's do some cleanup when that happens.\n                            origins.delete(origin);\n                            break;\n                        }\n                        nextExpectedNonce += 1n;\n                    }\n                }\n                return true;\n            case TriageOption.FutureQueue:\n                // otherwise, put it in the future queue\n                if (queuedOriginTransactions) {\n                    queuedOriginTransactions.push(transaction);\n                }\n                else {\n                    origins.set(origin, utils_1.Heap.from(transaction, byNonce));\n                }\n                return false;\n            case TriageOption.ReplacesPendingExecutable:\n                // we've replaced the best transaction from this origin for this nonce,\n                // and it is executable\n                return true;\n            case TriageOption.ReplacesFutureTransaction:\n                // we've replaced the best transaction from this origin for a future\n                // nonce, so this one isn't executable\n                return false;\n        }\n    }\n    clear() {\n        this.origins.clear();\n        __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").clear();\n        this.executables.pending.clear();\n    }\n    /**\n     * Returns the transaction matching the given hash.\n     *\n     * This isn't the fastest thing... but querying for pending transactions is\n     * likely rare, so leaving this slow so other code paths can be faster might\n     * be okay.\n     *\n     * @param transactionHash -\n     */\n    find(transactionHash) {\n        const { pending, inProgress } = this.executables;\n        // first search pending transactions\n        for (let [_, transactions] of this.origins) {\n            if (transactions === undefined)\n                continue;\n            const arr = transactions.array;\n            for (let i = 0; i < transactions.length; i++) {\n                const tx = arr[i];\n                if (tx.hash.toBuffer().equals(transactionHash)) {\n                    return tx;\n                }\n            }\n        }\n        // then transactions eligible for execution\n        for (let [_, transactions] of pending) {\n            const arr = transactions.array;\n            for (let i = 0; i < transactions.length; i++) {\n                const tx = arr[i];\n                if (tx.hash.toBuffer().equals(transactionHash)) {\n                    return tx;\n                }\n            }\n        }\n        // and finally transactions that have just been processed, but not yet saved\n        for (let tx of inProgress) {\n            if (tx.hash.toBuffer().equals(transactionHash)) {\n                return tx;\n            }\n        }\n        return null;\n    }\n}\nexports.default = TransactionPool;\n_TransactionPool_options = new WeakMap(), _TransactionPool_priceBump = new WeakMap(), _TransactionPool_blockchain = new WeakMap(), _TransactionPool_accountPromises = new WeakMap(), _TransactionPool_validateTransaction = new WeakMap();\n//# sourceMappingURL=transaction-pool.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Wallet_randomRng, _Wallet_randomBytes, _Wallet_initializeAccounts, _Wallet_intializeAccountFromKey, _Wallet_initializeAccountWithoutKey, _Wallet_initializeAccount, _Wallet_lockAccount;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst hdkey_1 = require(\"./hdkey\");\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst secp256k1_1 = __importStar(require(\"@ganache/secp256k1\"));\nconst bip39_1 = require(\"bip39\");\nconst seedrandom_1 = require(\"seedrandom\");\nconst crypto_1 = __importDefault(require(\"crypto\"));\nconst keccak_1 = __importDefault(require(\"keccak\"));\nconst fs_1 = require(\"fs\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst TWELVE_255s = Buffer.allocUnsafe(12).fill(255);\n//#region Constants\nconst SCRYPT_PARAMS = {\n    dklen: 32,\n    n: 1024,\n    p: 8,\n    r: 1\n};\nconst CIPHER = \"aes-128-ctr\";\nconst scrypt = (...args) => {\n    return new Promise((resolve, reject) => {\n        crypto_1.default.scrypt.call(crypto_1.default, ...args, (err, derivedKey) => {\n            if (err) {\n                return void reject(err);\n            }\n            return resolve(derivedKey);\n        });\n    });\n};\nconst scryptSync = (...args) => {\n    return crypto_1.default.scryptSync.call(crypto_1.default, ...args);\n};\n/**\n * A Buffer that can be reused by `uncompressedPublicKeyToAddress`.\n */\nconst SHARED_BUFFER = Buffer.allocUnsafe(65);\nconst uncompressedPublicKeyToAddress = (uncompressedPublicKey) => {\n    const status = secp256k1_1.default.publicKeyConvert(SHARED_BUFFER, uncompressedPublicKey);\n    switch (status) {\n        case 0:\n            return ethereum_address_1.Address.from((0, utils_1.keccak)(SHARED_BUFFER.slice(1)).slice(-20));\n        case 1:\n            throw new Error(\"Public Key could not be parsed\");\n        case 2:\n            throw new Error(\"Public Key serialization error\");\n    }\n};\nconst asUUID = (uuid) => {\n    return `${uuid.toString(\"hex\", 0, 4)}-${uuid.toString(\"hex\", 4, 6)}-${uuid.toString(\"hex\", 6, 8)}-${uuid.toString(\"hex\", 8, 10)}-${uuid.toString(\"hex\", 10)}`;\n};\nclass Wallet {\n    constructor(opts) {\n        this.knownAccounts = new Set();\n        this.keyFiles = new Map();\n        this.unlockedAccounts = new Map();\n        this.lockTimers = new Map();\n        _Wallet_randomRng.set(this, void 0);\n        _Wallet_randomBytes.set(this, (length) => {\n            // Since this is a mock RPC library, the rng doesn't need to be\n            // cryptographically secure, and determinism is desired.\n            const buf = Buffer.allocUnsafe(length);\n            const rand = __classPrivateFieldGet(this, _Wallet_randomRng, \"f\");\n            for (let i = 0; i < length; i++) {\n                buf[i] = (rand() * 256) | 0; // generates a random number from 0 to 255\n            }\n            return buf;\n        });\n        _Wallet_initializeAccounts.set(this, (options) => {\n            const makeAccountAtIndex = (0, hdkey_1.createAccountGeneratorFromSeedAndPath)((0, bip39_1.mnemonicToSeedSync)(options.mnemonic, null), options.hdPath);\n            // convert a potentially fractional balance of Ether to WEI\n            const balanceParts = options.defaultBalance.toString().split(\".\", 2);\n            const significand = BigInt(balanceParts[0]);\n            const fractionalStr = balanceParts[1] || \"0\";\n            const fractional = BigInt(fractionalStr);\n            const magnitude = 10n ** BigInt(fractionalStr.length);\n            const defaultBalanceInWei = utils_1.WEI * significand + fractional * (utils_1.WEI / magnitude);\n            const etherInWei = utils_1.Quantity.from(defaultBalanceInWei);\n            const accounts = new Map();\n            const givenAccounts = options.accounts;\n            let accountsLength;\n            if (givenAccounts && (accountsLength = givenAccounts.length) !== 0) {\n                for (let i = 0; i < accountsLength; i++) {\n                    const givenAccount = givenAccounts[i];\n                    const secretKey = givenAccount.secretKey;\n                    let account;\n                    if (secretKey) {\n                        const balance = utils_1.Quantity.from(givenAccount.balance);\n                        account = __classPrivateFieldGet(this, _Wallet_intializeAccountFromKey, \"f\").call(this, balance, secretKey, options);\n                    }\n                    else {\n                        const acct = makeAccountAtIndex(i);\n                        account = __classPrivateFieldGet(this, _Wallet_initializeAccountWithoutKey, \"f\").call(this, etherInWei, acct, options);\n                    }\n                    accounts.set(account.address.toString(), account);\n                }\n            }\n            else {\n                const numberOfAccounts = options.totalAccounts;\n                if (numberOfAccounts != null) {\n                    for (let i = 0; i < numberOfAccounts; i++) {\n                        const acct = makeAccountAtIndex(i);\n                        const account = __classPrivateFieldGet(this, _Wallet_initializeAccountWithoutKey, \"f\").call(this, etherInWei, acct, options);\n                        accounts.set(account.address.toString(), account);\n                    }\n                }\n            }\n            return accounts;\n        });\n        _Wallet_intializeAccountFromKey.set(this, (balance, secretKey, options) => {\n            const privateKey = utils_1.Data.from(secretKey);\n            const account = Wallet.createAccountFromPrivateKey(privateKey);\n            account.balance = balance;\n            const address = account.address;\n            __classPrivateFieldGet(this, _Wallet_initializeAccount, \"f\").call(this, address, privateKey, options);\n            return account;\n        });\n        _Wallet_initializeAccountWithoutKey.set(this, (balance, acct, options) => {\n            const address = uncompressedPublicKeyToAddress(acct.publicKey);\n            const privateKey = utils_1.Data.from(acct.privateKey);\n            const account = Wallet.createAccount(balance, privateKey, address);\n            __classPrivateFieldGet(this, _Wallet_initializeAccount, \"f\").call(this, address, privateKey, options);\n            return account;\n        });\n        _Wallet_initializeAccount.set(this, (address, privateKey, options) => {\n            const { passphrase, lock: lockAccounts } = options;\n            const knownAccounts = this.knownAccounts;\n            this.addToKeyFileSync(address, privateKey, passphrase, lockAccounts);\n            const strAddress = address.toString();\n            knownAccounts.add(strAddress);\n            // if the `lock` option has been not been set, we're safe to add this\n            // account to unlockedAccounts\n            if (!lockAccounts) {\n                this.unlockedAccounts.set(strAddress, privateKey);\n            }\n        });\n        _Wallet_lockAccount.set(this, (lowerAddress) => {\n            this.lockTimers.delete(lowerAddress);\n            this.unlockedAccounts.delete(lowerAddress);\n            return true;\n        });\n        // create a RNG from our initial starting conditions (opts.mnemonic)\n        __classPrivateFieldSet(this, _Wallet_randomRng, (0, seedrandom_1.alea)(\"ganache \" + opts.mnemonic), \"f\");\n        const initialAccounts = __classPrivateFieldGet(this, _Wallet_initializeAccounts, \"f\").call(this, opts);\n        this.initialAccounts = Array.from(initialAccounts.values());\n        this.addresses = Array.from(initialAccounts.keys());\n        const l = this.initialAccounts.length;\n        const unlockedAccounts = this.unlockedAccounts;\n        //#region Unlocked Accounts\n        const givenUnlockedAccounts = opts.unlockedAccounts;\n        if (givenUnlockedAccounts) {\n            const ul = givenUnlockedAccounts.length;\n            for (let i = 0; i < ul; i++) {\n                let arg = givenUnlockedAccounts[i];\n                let address;\n                let privateKey;\n                switch (typeof arg) {\n                    case \"string\":\n                        // `toLowerCase` so we handle uppercase `0X` formats\n                        const addressOrIndex = arg.toLowerCase();\n                        if (addressOrIndex.indexOf(\"0x\") === 0) {\n                            address = addressOrIndex;\n                            const account = initialAccounts.get(address);\n                            if (account) {\n                                privateKey = account.privateKey;\n                            }\n                            else {\n                                // this wasn't one of our initial accounts, so make a priv key.\n                                privateKey = this.createFakePrivateKey(address);\n                                // add the account to the list of addresses because we want\n                                // `eth_accounts` to return this account.\n                                this.addresses.push(address);\n                            }\n                            break;\n                        }\n                        else {\n                            // try to convert the arg string to a number.\n                            // don't use parseInt because strings like `\"123abc\"` parse\n                            // to `123`, and there is probably an error on the user's side we'd\n                            // want to uncover.\n                            const index = arg - 0;\n                            // if we don't have a valid number, or the number isn't a valid JS\n                            // integer (no bigints or decimals, please), throw an error.\n                            if (!Number.isSafeInteger(index)) {\n                                throw new Error(`Invalid value in wallet.unlockedAccounts: ${arg}`);\n                            }\n                            arg = index;\n                            // not `break`ing here because I want this to fall through to the\n                            //  `\"number\"` case below.\n                            // Refactor it if you want.\n                            // break; // no break, please.\n                        }\n                    case \"number\":\n                        const account = this.initialAccounts[arg];\n                        if (account == null) {\n                            throw new Error(`Account at index ${arg} not found. Max index available is ${l - 1}.`);\n                        }\n                        address = account.address.toString().toLowerCase();\n                        privateKey = account.privateKey;\n                        break;\n                    default:\n                        throw new Error(`Invalid value specified in unlocked_accounts`);\n                }\n                if (unlockedAccounts.has(address))\n                    continue;\n                unlockedAccounts.set(address, privateKey);\n            }\n        }\n        //#endregion\n        //#region save accounts to disk\n        if (opts.accountKeysPath != null) {\n            const fileData = {\n                addresses: {},\n                private_keys: {}\n            };\n            unlockedAccounts.forEach((privateKey, address) => {\n                fileData.addresses[address] = address;\n                fileData.private_keys[address] = privateKey;\n            });\n            // WARNING: Do not turn this to an async method without\n            // making a Wallet.initialize() function and calling it via\n            // Provider.initialize(). No async methods in constructors.\n            // writeFileSync here is acceptable.\n            (0, fs_1.writeFileSync)(opts.accountKeysPath, JSON.stringify(fileData));\n        }\n        //#endregion\n    }\n    async encrypt(privateKey, passphrase) {\n        const random = __classPrivateFieldGet(this, _Wallet_randomBytes, \"f\").call(this, 32 + 16 + 16);\n        const salt = random.slice(0, 32); // first 32 bytes\n        const iv = random.slice(32, 32 + 16); // next 16 bytes\n        const uuid = random.slice(32 + 16); // last 16 bytes\n        const derivedKey = await scrypt(passphrase, salt, SCRYPT_PARAMS.dklen, {\n            ...SCRYPT_PARAMS,\n            N: SCRYPT_PARAMS.n\n        });\n        return this.finishEncryption(derivedKey, privateKey, salt, iv, uuid);\n    }\n    /**\n     * Syncronous version of the `encrypt` function.\n     * @param privateKey -\n     * @param passphrase -\n     */\n    encryptSync(privateKey, passphrase) {\n        const random = __classPrivateFieldGet(this, _Wallet_randomBytes, \"f\").call(this, 32 + 16 + 16);\n        const salt = random.slice(0, 32); // first 32 bytes\n        const iv = random.slice(32, 32 + 16); // next 16 bytes\n        const uuid = random.slice(32 + 16); // last 16 bytes\n        const derivedKey = scryptSync(passphrase, salt, SCRYPT_PARAMS.dklen, {\n            ...SCRYPT_PARAMS,\n            N: SCRYPT_PARAMS.n\n        });\n        return this.finishEncryption(derivedKey, privateKey, salt, iv, uuid);\n    }\n    finishEncryption(derivedKey, privateKey, salt, iv, uuid) {\n        const cipher = crypto_1.default.createCipheriv(CIPHER, derivedKey.slice(0, 16), iv);\n        const ciphertext = Buffer.concat([\n            cipher.update(privateKey.toBuffer()),\n            cipher.final()\n        ]);\n        const mac = (0, keccak_1.default)(\"keccak256\")\n            .update(Buffer.concat([derivedKey.slice(16, 32), ciphertext]))\n            .digest();\n        return {\n            crypto: {\n                cipher: CIPHER,\n                ciphertext: utils_1.Data.from(ciphertext),\n                cipherparams: {\n                    iv: utils_1.Data.from(iv)\n                },\n                kdf: \"scrypt\",\n                kdfParams: {\n                    ...SCRYPT_PARAMS,\n                    salt: utils_1.Data.from(salt)\n                },\n                mac: utils_1.Data.from(mac)\n            },\n            id: asUUID(uuid),\n            version: 3\n        };\n    }\n    async decrypt(keyfile, passphrase) {\n        const crypt = keyfile.crypto;\n        if (crypt.cipher !== CIPHER) {\n            throw new Error(`keyfile cypher must be \"${CIPHER}\"`);\n        }\n        if (crypt.kdf !== \"scrypt\") {\n            throw new Error(`keyfile kdf must be \"script\"`);\n        }\n        const kdfParams = crypt.kdfParams;\n        const salt = kdfParams.salt;\n        const mac = crypt.mac;\n        const ciphertext = crypt.ciphertext.toBuffer();\n        let derivedKey;\n        let localMac;\n        if (passphrase != null) {\n            try {\n                derivedKey = await scrypt(passphrase, salt.toBuffer(), kdfParams.dklen, { ...kdfParams, N: kdfParams.n });\n                localMac = (0, keccak_1.default)(\"keccak256\")\n                    .update(Buffer.concat([derivedKey.slice(16, 32), ciphertext]))\n                    .digest();\n            }\n            catch {\n                localMac = null;\n            }\n        }\n        if (!localMac || !mac.toBuffer().equals(localMac)) {\n            throw new Error(\"could not decrypt key with given passphrase\");\n        }\n        const decipher = crypto_1.default.createDecipheriv(crypt.cipher, derivedKey.slice(0, 16), crypt.cipherparams.iv.toBuffer());\n        const plaintext = decipher.update(ciphertext);\n        return plaintext;\n    }\n    /**\n     * Stores a mapping of addresses to either encrypted (if a passphrase is used\n     * or the user specified --lock option) or unencrypted private keys.\n     * @param address - The address whose private key is being stored.\n     * @param privateKey - The passphrase to store.\n     * @param passphrase - The passphrase to use to encrypt the private key. If\n     * passphrase is empty, the private key will not be encrypted.\n     * @param lock - Flag to specify that accounts should be encrypted regardless\n     * of if the passphrase is empty.\n     */\n    async addToKeyFile(address, privateKey, passphrase, lock) {\n        // NOTE: we are avoiding encrypting the keys for an account if the\n        // passphrase is blank purely for startup performance reasons.\n        if (passphrase || lock) {\n            this.keyFiles.set(address.toString(), {\n                encrypted: true,\n                key: await this.encrypt(privateKey, passphrase)\n            });\n        }\n        else {\n            this.keyFiles.set(address.toString(), {\n                encrypted: false,\n                key: privateKey.toBuffer()\n            });\n        }\n    }\n    /**\n     * Synchronus version of `addToKeyFile`.\n     * Stores a mapping of addresses to either encrypted (if a passphrase is used\n     * or the user specified --lock option) or unencrypted private keys.\n     * @param address - The address whose private key is being stored.\n     * @param privateKey - The passphrase to store.\n     * @param passphrase - The passphrase to use to encrypt the private key. If\n     * passphrase is empty, the private key will not be encrypted.\n     * @param lock - Flag to specify that accounts should be encrypted regardless\n     * of if the passphrase is empty.\n     */\n    addToKeyFileSync(address, privateKey, passphrase, lock) {\n        // NOTE: we are avoiding encrypting the keys for an account if the\n        // passphrase is blank purely for startup performance reasons.\n        if (passphrase || lock) {\n            this.keyFiles.set(address.toString(), {\n                encrypted: true,\n                key: this.encryptSync(privateKey, passphrase)\n            });\n        }\n        else {\n            this.keyFiles.set(address.toString(), {\n                encrypted: false,\n                key: privateKey.toBuffer()\n            });\n        }\n    }\n    /**\n     * Fetches the private key for a specific address. If the keyFile is encrypted\n     * for the address, the passphrase is used to decrypt.\n     * @param address - The address whose private key is to be fetched.\n     * @param passphrase - The passphrase used to decrypt the private key.\n     */\n    async getFromKeyFile(address, passphrase) {\n        const keyFile = this.keyFiles.get(address.toString());\n        if (keyFile === undefined || keyFile === null) {\n            throw new Error(\"no key for given address or file\");\n        }\n        if (keyFile.encrypted === true) {\n            return this.decrypt(keyFile.key, passphrase);\n        }\n        else {\n            // if the keyFile is not marked as encrypted, they should provide no\n            // passphrase. so we'll make it look like they gave the \"wrong\" passphrase\n            // by throwing the same error that's thrown when decrypting\n            if (passphrase) {\n                throw new Error('could not decrypt key with given passphrase (default passphrase for accounts created at startup is \"\")');\n            }\n            else {\n                return keyFile.key;\n            }\n        }\n    }\n    static createAccount(balance, privateKey, address) {\n        const account = new ethereum_utils_1.Account(address);\n        account.privateKey = privateKey;\n        account.balance = balance;\n        return account;\n    }\n    static createAccountFromPrivateKey(privateKey) {\n        const address = ethereum_address_1.Address.from((0, ethereumjs_util_1.privateToAddress)(privateKey.toBuffer()));\n        const account = new ethereum_utils_1.Account(address);\n        account.privateKey = privateKey;\n        return account;\n    }\n    createRandomAccount() {\n        // create some seeded deterministic psuedo-randomness based on the chain's\n        // initial starting conditions\n        const seed = __classPrivateFieldGet(this, _Wallet_randomBytes, \"f\").call(this, 128);\n        const acct = (0, hdkey_1.createAccountFromSeed)(seed);\n        const address = uncompressedPublicKeyToAddress(acct.publicKey);\n        const privateKey = utils_1.Data.from(acct.privateKey);\n        return Wallet.createAccount(utils_1.Quantity.Zero, privateKey, address);\n    }\n    async unlockAccount(address, passphrase, duration) {\n        const lowerAddress = address.toString();\n        const secretKey = await this.getFromKeyFile(address, passphrase);\n        const existingTimer = this.lockTimers.get(lowerAddress);\n        if (existingTimer) {\n            clearTimeout(existingTimer);\n        }\n        // a duration <= 0 will remain unlocked\n        const durationMs = (duration * 1000) | 0;\n        if (durationMs > 0) {\n            const timeout = setTimeout(__classPrivateFieldGet(this, _Wallet_lockAccount, \"f\"), durationMs, lowerAddress);\n            (0, utils_1.unref)(timeout);\n            this.lockTimers.set(lowerAddress, timeout);\n        }\n        this.unlockedAccounts.set(lowerAddress, utils_1.Data.from(secretKey));\n        return true;\n    }\n    async addUnknownAccount(address, passphrase) {\n        const lowerAddress = address.toString();\n        // if we \"know\" about this account, it cannot be added this way\n        if (this.knownAccounts.has(lowerAddress)) {\n            return false;\n        }\n        // this is an unknown account, so we do not have a private key. instead,\n        // we'll need to create a fake one.\n        const privateKey = this.createFakePrivateKey(lowerAddress);\n        await this.addToKeyFile(address, privateKey, passphrase, true);\n        this.knownAccounts.add(lowerAddress);\n        this.addresses.push(lowerAddress);\n        return true;\n    }\n    async removeKnownAccount(address, passphrase) {\n        const lowerAddress = address.toString();\n        // if we don't \"know\" about this account, it cannot be removed\n        if (!this.knownAccounts.has(lowerAddress)) {\n            return false;\n        }\n        const privateKey = await this.getFromKeyFile(address, passphrase);\n        // we don't actually care what the private key is, we just need to know that\n        // the passphrase they supplied is the right one. (empty string is a valid\n        // privateKey for added, previously unknown accounts)\n        if (privateKey != null) {\n            this.keyFiles.delete(lowerAddress);\n            this.knownAccounts.delete(lowerAddress);\n            this.addresses.splice(this.addresses.indexOf(lowerAddress), 1);\n            this.lockTimers.delete(lowerAddress);\n            this.unlockedAccounts.delete(lowerAddress);\n            return true;\n        }\n        else {\n            throw new Error(\"could not find private key for address/passphrase combination\");\n        }\n    }\n    createFakePrivateKey(address) {\n        let fakePrivateKey;\n        const addressBuf = ethereum_address_1.Address.from(address).toBuffer();\n        if (addressBuf.equals(utils_1.ACCOUNT_ZERO)) {\n            // allow signing with the 0x0 address...\n            // always sign with the same fake key, a 31 `0`s followed by a single\n            // `1`. The key is arbitrary. It just must not be all `0`s and must be\n            // deterministic.\n            // see: https://github.com/ethereumjs/ethereumjs-monorepo/issues/829#issue-674385636\n            fakePrivateKey = Buffer.allocUnsafe(32).fill(0, 0, 31);\n            fakePrivateKey[31] = 1;\n        }\n        else {\n            // Private keys must not be greater than *or equal to*:\n            // 0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141, and\n            // if they are that large then signing of the transaction (ecdsaSign) will\n            // fail.\n            // Historically, we've just concatenated the address with part of itself,\n            // to make something long enough to use as a private key, so we can't\n            // change the default/legacy behavior now. But for addresses that would\n            // generate an invalid private key we must use a different approach. If\n            // the legacy way of generating a private key results in a key that is too\n            // large\n            //\n            const first12 = addressBuf.slice(0, 12);\n            fakePrivateKey = Buffer.concat([addressBuf, first12]);\n            // BigInt is slow, so only do it if we might need to, which we usually\n            // never will.\n            // Since we already have a slice of the first 12 bytes let's use it to\n            // help check if we might overflow the max secp256k1 key value. If the\n            // first 12 bytes, the most significant digits of the key, are all `255`\n            // then there is a chance that the fakePrivateKey will be too large.\n            // `Buffer.compare` is a native method in V8, so it should be pretty fast.\n            // example: the address `0xffffffffffff{anything can go here}` generates a\n            // bad fakePrivateKey but, `0xfffffffffffe{anything can go here}` never\n            // will. There are obviously many chances for a false positive, but the\n            // next condition in the `while` loop will catch those.\n            if (first12.compare(TWELVE_255s) === 0) {\n                while (BigInt(`0x${fakePrivateKey.toString(\"hex\")}`) >= secp256k1_1.SECP256K1_N) {\n                    // keccak returns a 32 byte hash of the input data, which is the exact\n                    // length we need for a private key.\n                    // note: if keccak can return its own input as its output, then this\n                    // loops forever. The chances of this happening are impossibly low, so\n                    // it's not worth the effort to check, but it would be interesting if\n                    // someone reported an issue that can cause this for a specific\n                    // address!\n                    fakePrivateKey = (0, utils_1.keccak)(fakePrivateKey);\n                }\n            }\n        }\n        return utils_1.Data.from(fakePrivateKey);\n    }\n    lockAccount(lowerAddress) {\n        if (!this.unlockedAccounts.has(lowerAddress))\n            return false;\n        clearTimeout(this.lockTimers.get(lowerAddress));\n        return __classPrivateFieldGet(this, _Wallet_lockAccount, \"f\").call(this, lowerAddress);\n    }\n}\nexports.default = Wallet;\n_Wallet_randomRng = new WeakMap(), _Wallet_randomBytes = new WeakMap(), _Wallet_initializeAccounts = new WeakMap(), _Wallet_intializeAccountFromKey = new WeakMap(), _Wallet_initializeAccountWithoutKey = new WeakMap(), _Wallet_initializeAccount = new WeakMap(), _Wallet_lockAccount = new WeakMap();\n//# sourceMappingURL=wallet.js.map","\"use strict\";\n/*!\n * @ganache/ethereum-options\n *\n * @author David Murdoch <david@trufflesuite.com> (https://davidmurdoch.com)\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChainOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst HARDFORKS = [\n    \"constantinople\",\n    \"byzantium\",\n    \"petersburg\",\n    \"istanbul\",\n    \"muirGlacier\",\n    \"berlin\",\n    \"london\",\n    \"arrowGlacier\"\n];\nexports.ChainOptions = {\n    allowUnlimitedContractSize: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Allows unlimited contract sizes while debugging. Setting this to `true` will cause ganache to behave differently than production environments.\",\n        default: () => false,\n        legacyName: \"allowUnlimitedContractSize\",\n        cliType: \"boolean\"\n    },\n    asyncRequestProcessing: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"When set to `false` only one request will be processed at a time.\",\n        default: () => true,\n        legacyName: \"asyncRequestProcessing\",\n        cliType: \"boolean\"\n    },\n    chainId: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The currently configured chain id.\",\n        default: () => 1337,\n        legacyName: \"chainId\",\n        cliType: \"number\"\n    },\n    networkId: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The id of the network returned by the RPC method `net_version`.\",\n        default: () => Date.now(),\n        defaultDescription: \"System time at process start or Network ID of forked blockchain if configured.\",\n        legacyName: \"network_id\",\n        cliAliases: [\"i\", \"networkId\"],\n        cliType: \"number\"\n    },\n    time: {\n        normalize: rawInput => (rawInput !== undefined ? new Date(rawInput) : null),\n        cliDescription: \"Date that the first block should start.\",\n        legacyName: \"time\",\n        cliAliases: [\"t\", \"time\"],\n        cliType: \"string\",\n        cliCoerce: (input) => {\n            // try parsing the input as a number, if it works use the number\n            // otherwise pass the string along\n            const asNum = input / 1;\n            if (isNaN(asNum)) {\n                return input;\n            }\n            else {\n                return asNum;\n            }\n        }\n    },\n    hardfork: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set the hardfork rules for the EVM.\",\n        default: () => \"london\",\n        legacyName: \"hardfork\",\n        cliAliases: [\"k\", \"hardfork\"],\n        cliType: \"string\",\n        cliChoices: HARDFORKS\n    },\n    vmErrorsOnRPCResponse: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Whether to report runtime errors from EVM code as RPC errors.\",\n        default: () => false,\n        legacyName: \"vmErrorsOnRPCResponse\",\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=chain-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DatabaseOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.DatabaseOptions = {\n    db: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify an alternative database instance, like MemDOWN\",\n        disableInCLI: true,\n        legacyName: \"db\",\n        conflicts: [\"dbPath\"]\n    },\n    dbPath: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify a path to a directory to save the chain database.\",\n        legacyName: \"db_path\",\n        cliAliases: [\"db\", \"db_path\"],\n        cliType: \"string\",\n        conflicts: [\"db\"]\n    }\n};\n//# sourceMappingURL=database-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkOptions = exports.KNOWN_NETWORKS = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst url_1 = require(\"url\");\nconst version = process.env.VERSION || \"DEV\";\n// we aren't going to treat block numbers as a bigint, so we don't want to\n// accept block numbers we can't add to\nconst MAX_BLOCK_NUMBER = Math.floor(Number.MAX_SAFE_INTEGER / 2);\nexports.KNOWN_NETWORKS = [\n    \"mainnet\",\n    \"ropsten\",\n    \"kovan\",\n    \"rinkeby\",\n    \"goerli\",\n    \"görli\"\n];\nconst reColonSplit = /:\\s?(?:.+)/;\nfunction coerceHeaders(headers, input) {\n    // split *1* time on the first colon, this also ignores leading whitespace\n    // from the value per RFC7230\n    const [name, value] = input.split(reColonSplit);\n    headers.push({ name, value });\n    return headers;\n}\nconst ALLOWED_PROTOCOLS = [\"ws:\", \"wss:\", \"http:\", \"https:\"];\nconst arrayToOxfordList = (arr, conjunction = \"and\") => {\n    const last = arr.pop();\n    switch (arr.length) {\n        case 0:\n            return \"\";\n        case 1:\n            return last;\n        case 2:\n            return arr[0] + ` ${conjunction} ` + last;\n        default:\n            return arr.join(\", \") + `, ${conjunction} ` + last;\n    }\n};\nexports.ForkOptions = {\n    // url's definition _must_ come before blockNumber, username, and password\n    // as the defaults are processed in order, and they rely on the `fork.url`\n    url: {\n        normalize: rawInput => {\n            // because `url` is an alias of `fork`, along with `provider` and\n            // `network` the runtime type isn't always going to be `\"string\"`\n            if (typeof rawInput !== \"string\" ||\n                exports.KNOWN_NETWORKS.includes(rawInput)) {\n                // if the string matches a network name ignore it\n                return;\n            }\n            let url = new url_1.URL(rawInput);\n            const path = url.pathname + url.search;\n            const lastIndex = path.lastIndexOf(\"@\");\n            // pull the blockNumber out of the URL\n            if (lastIndex !== -1) {\n                // remove everything after the last @\n                url = new url_1.URL(path.substr(0, lastIndex), url);\n                const blockNumber = path.substr(lastIndex + 1);\n                if (blockNumber && blockNumber !== ethereum_utils_1.Tag.latest) {\n                    // don't use parseInt because strings like `\"123abc\"` parse\n                    // to `123`, and there is probably an error on the user's side we'd\n                    // want to uncover.\n                    const asNum = blockNumber - 0;\n                    // don't allow invalid, negative, or decimals\n                    if (isNaN(asNum) ||\n                        asNum < 0 ||\n                        (asNum | 0) !== asNum ||\n                        asNum > MAX_BLOCK_NUMBER) {\n                        console.warn(`Ignoring invalid block number in fork url: \"${blockNumber}\". Block number must be an integer from [0 - ${MAX_BLOCK_NUMBER}].`);\n                    }\n                    else {\n                        url._blockNumber = asNum;\n                    }\n                }\n                if (!ALLOWED_PROTOCOLS.includes(url.protocol)) {\n                    throw new Error(`Invalid protocol for fork url: ${url.protocol}. Supported protocols are: ${arrayToOxfordList(ALLOWED_PROTOCOLS)}.`);\n                }\n            }\n            return url;\n        },\n        cliDescription: `Fork from another currently running Ethereum client at a given block. Input should be the URL of the node, e.g. \\`\"http://localhost:1337\"\\`. You can optionally specify the block to fork from using an @ sign: \\`\"http://localhost:1337@8675309\"\\`.\n\nYou can specify Basic Authentication credentials in the URL as well. e.g., \\`\"wss://user:password@example.com/\"\\`. If you need to use an Infura Project Secret, you would use it like this: \\`\"wss://:{YOUR-PROJECT-SECRET}@mainnet.infura.com/...\"\\`\n\nAlternatively, you can use the \\`fork.username\\` and \\`fork.password\\` options.`,\n        legacyName: \"fork\",\n        cliAliases: [\"f\", \"fork\"],\n        conflicts: [\"provider\", \"network\"]\n    },\n    provider: {\n        normalize: rawInput => {\n            // because `provider` is an alias of `fork`, along with `network` and\n            // `url` the runtime type isn't always going to match the TypeScript type.\n            // if rawInput is a string it will be handled by the `url` or `network`\n            // handlers.\n            if (typeof rawInput === \"string\" || // like `--fork http://url` (url shorthand)\n                (typeof rawInput === \"object\" &&\n                    (typeof rawInput.url === \"string\" || // like `--fork.url http://url`\n                        typeof rawInput.url === \"boolean\" || // like `--fork` (implied \"mainnet\" network shorthand)\n                        typeof rawInput.network === \"string\" || // like `--fork.network mainnet`\n                        typeof rawInput.network === \"boolean\")) // like `--fork.network true`\n            ) {\n                return;\n            }\n            else {\n                return rawInput;\n            }\n        },\n        cliDescription: \"Specify an EIP-1193 provider to use instead of a url.\",\n        disableInCLI: true,\n        legacyName: \"fork\",\n        conflicts: [\"url\", \"network\"]\n    },\n    network: {\n        normalize: rawInput => {\n            // because `network` is an alias of `fork`, along with `provider` and\n            // `url` the runtime type isn't always going to be `\"string\"`\n            if (typeof rawInput === \"string\" && exports.KNOWN_NETWORKS.includes(rawInput))\n                return rawInput;\n            if (\n            // handle `ganache --fork` case, which gets weird because both url\n            // and network can use the `--fork` flag (the `url` handler ignores\n            // non-strings, like `true` and strings that match our known networks)\n            typeof rawInput === \"object\") {\n                if (\"url\" in rawInput) {\n                    const { url } = rawInput;\n                    if (url === true) {\n                        return \"mainnet\";\n                    }\n                    else if (exports.KNOWN_NETWORKS.includes(url)) {\n                        return rawInput.url;\n                    }\n                }\n            }\n        },\n        cliDescription: `A network name to fork from; uses Infura's archive nodes.\n\nUse the shorthand command \\`ganache --fork\\` to automatically fork from Mainnet at the latest block.\n`,\n        cliChoices: exports.KNOWN_NETWORKS,\n        legacyName: \"fork\",\n        conflicts: [\"url\", \"provider\"]\n    },\n    blockNumber: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Block number the provider should fork from.\",\n        legacyName: \"fork_block_number\",\n        default: ({ url, provider, network }) => {\n            if (url) {\n                // use the url's _blockNumber, if present, otherwise use \"latest\"\n                if (url._blockNumber) {\n                    return url._blockNumber;\n                }\n                else {\n                    return ethereum_utils_1.Tag.latest;\n                }\n            }\n            else if (provider || network) {\n                return ethereum_utils_1.Tag.latest;\n            }\n            else {\n                return;\n            }\n        },\n        defaultDescription: `Latest block number`\n        //implies: [\"url\"]\n    },\n    preLatestConfirmations: {\n        normalize: helpers_1.normalize,\n        cliDescription: 'When the `fork.blockNumber` is set to \"latest\" (default), the number of blocks before the remote node\\'s \"latest\" block to fork from.',\n        default: () => 5,\n        defaultDescription: \"5\",\n        cliType: \"number\"\n    },\n    username: {\n        normalize: helpers_1.normalize,\n        cliDescription: `* Username to use for Basic Authentication. Does not require setting \\`fork.password\\`.\n    \nWhen combined with \\`fork.password\\`, is shorthand for \\`fork: { headers: { \"Authorization\": \"Basic {ENCODED-BASIC-HEADER}\" } }\\`\n\nIf the \\`fork.headers\\` option specifies an \"Authorization\" header, it will be be inserted _after_ this Basic token.`,\n        default: ({ url }) => {\n            // use the url's username, if present\n            if (url) {\n                if (url.username) {\n                    return url.username;\n                }\n            }\n        },\n        defaultDescription: \"\"\n        //implies: [\"url\"]\n    },\n    password: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Password to use for Basic Authentication. Does not require setting \\`fork.username\\`.\n\nWhen combined with \\`fork.username\\`, is shorthand for \\`fork: { headers: { \"Authorization\": \"Basic {ENCODED-BASIC-HEADER}\" } }\\`\n\nIf the \\`fork.headers\\` option specifies an \"Authorization\" header, it will be be inserted _after_ this Basic token.`,\n        default: ({ url }) => {\n            // use the url's password, if present\n            if (url) {\n                if (url.password) {\n                    return url.password;\n                }\n            }\n        },\n        defaultDescription: \"\"\n        //implies: [\"url\"]\n    },\n    jwt: {\n        normalize: helpers_1.normalize,\n        cliDescription: `_Encoded_ JSON Web Token (JWT) used for authenticating to some servers.\n\nShorthand for \\`fork: { headers: { \"Authorization\": \"Bearer {YOUR-ENCODED-JWT}\" } }\\`\n\n If the \\`fork.headers\\` option specifies an \"Authorization\" header, it will be be inserted _after_ the JWT Bearer token.`\n        //implies: [\"url\"]\n    },\n    userAgent: {\n        normalize: helpers_1.normalize,\n        cliDescription: `The User-Agent header sent to the fork on each request.\n\nSent as Api-User-Agent when used in the browser.\n \nWill be overridden by a \\`\"User-Agent\"\\` defined in the \\`fork.headers\\` option, if provided.`,\n        default: () => {\n            return `Ganache/${version} (https://www.trufflesuite.com/ganache; ganache<at>trufflesuite.com)`;\n        }\n        // implies: [\"url\"]\n    },\n    origin: {\n        normalize: helpers_1.normalize,\n        cliDescription: `The Origin header sent to the fork on each request.\n\nIgnored in the browser.\n\nWill be overridden by an \\`\"Origin\"\\` value defined in the \\`fork.headers\\` option, if provided.`\n        //implies: [\"url\"]\n    },\n    headers: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Headers to supply on each request to the forked provider.\n\nHeaders set here override headers set by other options, unless otherwise specified.\n\nDefaults to: \\`[\"User-Agent: Ganache/VERSION (https://www.trufflesuite.com/ganache; ganache<at>trufflesuite.com)\"]\\``,\n        cliType: \"array:string\",\n        implies: [\"url\"],\n        cliCoerce: rawInput => rawInput.reduce(coerceHeaders, [])\n    },\n    requestsPerSecond: {\n        normalize(rawValue) {\n            if (rawValue < 0) {\n                throw new Error(`fork.requestsPerSecond is invalid: \"${rawValue}\"; must be a positive number`);\n            }\n            return rawValue;\n        },\n        default: () => 0,\n        cliDescription: \"Restrict the number of requests per second sent to the fork provider. `0` means no limit is applied.\",\n        cliType: \"number\"\n        //implies: [\"url\"]\n    },\n    disableCache: {\n        normalize: helpers_1.normalize,\n        default: () => false,\n        cliDescription: \"Disables caching of all forking requests.\",\n        cliType: \"boolean\"\n    },\n    deleteCache: {\n        normalize: helpers_1.normalize,\n        default: () => false,\n        cliDescription: \"Deletes the persistent cache before starting.\",\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=fork-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = void 0;\nconst normalize = (rawInput) => rawInput;\nexports.normalize = normalize;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthereumOptionsConfig = exports.EthereumDefaults = void 0;\nconst chain_options_1 = require(\"./chain-options\");\nconst database_options_1 = require(\"./database-options\");\nconst logging_options_1 = require(\"./logging-options\");\nconst miner_options_1 = require(\"./miner-options\");\nconst wallet_options_1 = require(\"./wallet-options\");\nconst fork_options_1 = require(\"./fork-options\");\nconst options_1 = require(\"@ganache/options\");\nexports.EthereumDefaults = {\n    chain: chain_options_1.ChainOptions,\n    database: database_options_1.DatabaseOptions,\n    logging: logging_options_1.LoggingOptions,\n    miner: miner_options_1.MinerOptions,\n    wallet: wallet_options_1.WalletOptions,\n    fork: fork_options_1.ForkOptions\n};\nexports.EthereumOptionsConfig = new options_1.OptionsConfig(exports.EthereumDefaults);\n__exportStar(require(\"./chain-options\"), exports);\n__exportStar(require(\"./database-options\"), exports);\n__exportStar(require(\"./helpers\"), exports);\n__exportStar(require(\"./logging-options\"), exports);\n__exportStar(require(\"./miner-options\"), exports);\n__exportStar(require(\"./wallet-options\"), exports);\n__exportStar(require(\"./fork-options\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggingOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.LoggingOptions = {\n    debug: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set to `true` to log EVM opcodes.\",\n        default: () => false,\n        legacyName: \"debug\",\n        cliType: \"boolean\"\n    },\n    quiet: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set to `true` to disable logging.\",\n        default: () => false,\n        cliAliases: [\"q\", \"quiet\"],\n        cliType: \"boolean\"\n    },\n    logger: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"An object, like `console`, that implements a `log` function.\",\n        disableInCLI: true,\n        // disable the default logger if `quiet` is `true`\n        default: config => ({\n            log: config.quiet ? () => { } : console.log\n        }),\n        legacyName: \"logger\"\n    },\n    verbose: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set to `true` to log all RPC requests and responses.\",\n        default: () => false,\n        legacyName: \"verbose\",\n        cliAliases: [\"v\", \"verbose\"],\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=logging-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MinerOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\n/**\n * Attempts to convert strings that don't start with `0x` to a BigInt\n *\n * @param str - a string that represents a bigint, number, or hexadecimal value\n */\nconst toBigIntOrString = (str) => {\n    if (str.startsWith(\"0x\")) {\n        return str;\n    }\n    else {\n        return BigInt(str);\n    }\n};\n/**\n * Handles defaultTransactionGasLimit special case of 'estimate' for tx value.\n *\n * @param str - the string literal 'estimate' or string that that represents a bigint, number, or hexadecimal value.\n */\nconst estimateOrToBigIntOrString = (str) => {\n    if (str === \"estimate\") {\n        return str;\n    }\n    else {\n        return toBigIntOrString(str);\n    }\n};\n/**\n * Attempts to convert strings that don't start with `0x` to a number\n *\n * @param str - a string that represents a number, or hexadecimal value\n */\nconst toNumberOrString = (str) => {\n    if (str.startsWith(\"0x\")) {\n        return str;\n    }\n    else {\n        return parseInt(str);\n    }\n};\nexports.MinerOptions = {\n    blockTime: {\n        normalize: rawInput => {\n            if (rawInput < 0) {\n                throw new Error(\"miner.blockTime must be 0 or a positive number.\");\n            }\n            return rawInput;\n        },\n        cliDescription: 'Sets the `blockTime` in seconds for automatic mining. A blockTime of `0` enables \"instamine mode\", where new executable transactions will be mined instantly.',\n        default: () => 0,\n        legacyName: \"blockTime\",\n        cliAliases: [\"b\", \"blockTime\"],\n        cliType: \"number\"\n    },\n    timestampIncrement: {\n        normalize: rawType => rawType === \"clock\" ? \"clock\" : utils_1.Quantity.from(BigInt(rawType)),\n        cliDescription: 'The amount of time, in seconds, to add to the `timestamp` of each new block header. By default the value is `\"clock\"`, which uses your system clock time as the timestamp for each block.',\n        default: () => \"clock\",\n        cliType: \"string\"\n    },\n    defaultGasPrice: {\n        normalize: utils_1.Quantity.from,\n        cliDescription: \"Sets the default gas price in WEI for transactions if not otherwise specified.\",\n        default: () => utils_1.Quantity.from(2000000000),\n        legacyName: \"gasPrice\",\n        cliAliases: [\"g\", \"gasPrice\"],\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    blockGasLimit: {\n        normalize: utils_1.Quantity.from,\n        cliDescription: \"Sets the block gas limit in WEI.\",\n        default: () => utils_1.Quantity.from(30000000),\n        legacyName: \"gasLimit\",\n        cliAliases: [\"l\", \"gasLimit\"],\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    defaultTransactionGasLimit: {\n        normalize: rawType => rawType === \"estimate\" ? utils_1.Quantity.Empty : utils_1.Quantity.from(rawType),\n        cliDescription: 'Sets the default transaction gas limit in WEI. Set to \"estimate\" to use an estimate (slows down transaction execution by 40%+).',\n        default: () => utils_1.Quantity.from(90000),\n        cliType: \"string\",\n        cliCoerce: estimateOrToBigIntOrString\n    },\n    difficulty: {\n        normalize: utils_1.Quantity.from,\n        cliDescription: \"Sets the block difficulty.\",\n        default: () => utils_1.Quantity.One,\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    callGasLimit: {\n        normalize: utils_1.Quantity.from,\n        cliDescription: \"Sets the transaction gas limit in WEI for `eth_call` and `eth_estimateGas` calls.\",\n        default: () => utils_1.Quantity.from(50000000),\n        legacyName: \"callGasLimit\",\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    instamine: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Set the instamine mode to either \"eager\" (default) or \"strict\".\n * In \"eager\" mode a transaction will be included in a block before its hash is returned to the caller.\n * In \"strict\" mode a transaction's hash is returned to the caller before the transaction is included in a block.\n\\`instamine\\` has no effect if \\`blockTime\\` is *not* \\`0\\` (the default).`,\n        default: () => \"eager\",\n        legacyName: \"instamine\",\n        cliAliases: [\"instamine\"],\n        cliType: \"string\",\n        cliChoices: [\"eager\", \"strict\"]\n    },\n    coinbase: {\n        normalize: rawType => {\n            return typeof rawType === \"number\" ? rawType : ethereum_address_1.Address.from(rawType);\n        },\n        cliDescription: \"Sets the address where mining rewards will go.\",\n        cliType: \"string\",\n        cliCoerce: toNumberOrString,\n        default: () => ethereum_address_1.Address.from(utils_1.ACCOUNT_ZERO)\n    },\n    extraData: {\n        normalize: (extra) => {\n            const bytes = utils_1.Data.from(extra);\n            if (bytes.toBuffer().length > 32) {\n                throw new Error(`extra exceeds max length. ${bytes.toBuffer().length} > 32`);\n            }\n            return bytes;\n        },\n        cliDescription: \"Set the extraData block header field a miner can include.\",\n        default: () => utils_1.Data.Empty,\n        cliType: \"string\"\n    },\n    priceBump: {\n        normalize: BigInt,\n        cliDescription: \"Minimum price bump percentage needed to replace a transaction that already exists in the transaction pool.\",\n        default: () => 10n,\n        cliType: \"string\"\n    }\n};\n//# sourceMappingURL=miner-options.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst seedrandom_1 = __importDefault(require(\"seedrandom\"));\nconst bip39_1 = require(\"bip39\");\nconst options_1 = require(\"@ganache/options\");\nconst unseededRng = (0, seedrandom_1.default)();\n/**\n * WARNING: to maintain compatibility with ganache v2 this RNG only generates\n * numbers from 0-254 instead of 0-255! Hence the name, `notVeryRandomBytes`\n * @param length -\n * @param rng -\n */\nfunction notVeryRandomBytes(length, rng) {\n    const buf = Buffer.allocUnsafe(length);\n    for (let i = 0; i < length; i++) {\n        buf[i] = (rng() * 255) | 0;\n    }\n    return buf;\n}\nconst randomAlphaNumericString = (() => {\n    const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const alphabetLength = alphabet.length;\n    return (length, rng) => {\n        let text = \"\";\n        for (let i = 0; i < length; i++) {\n            text += alphabet[(rng() * alphabetLength) | 0];\n        }\n        return text;\n    };\n})();\nexports.WalletOptions = {\n    accounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Account data in the form \\`<private_key>,<initial_balance>\\`, can be specified multiple times. Note that private keys are 64 characters long and must be entered as an 0x-prefixed hex string. Balance can either be input as an integer, or as a 0x-prefixed hex string with either form specifying the initial balance in wei.`,\n        legacyName: \"accounts\",\n        cliAliases: [\"account\"],\n        cliType: \"array:string\",\n        cliCoerce: rawInput => {\n            return rawInput.map(accountString => {\n                // split *1* time on the first comma\n                const [secretKey, balance] = accountString.split(/,(.+)/);\n                return {\n                    secretKey,\n                    balance: BigInt(balance)\n                };\n            });\n        },\n        conflicts: [\"totalAccounts\"]\n    },\n    totalAccounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Number of accounts to generate at startup.\",\n        default: config => (config.accounts == null ? 10 : 0),\n        legacyName: \"total_accounts\",\n        cliAliases: [\"a\", \"accounts\"],\n        cliType: \"number\",\n        conflicts: [\"accounts\"]\n    },\n    deterministic: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Use pre-defined, deterministic seed.\",\n        default: () => false,\n        cliAliases: [\"d\", \"deterministic\"],\n        cliType: \"boolean\",\n        conflicts: [\"mnemonic\", \"seed\"]\n    },\n    seed: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Seed to use to generate a mnemonic.\",\n        // The order of the options matter here! `wallet.deterministic`\n        // needs to be prior to `wallet.seed` for `config.deterministic`\n        // below to be set correctly\n        default: config => config.deterministic === true\n            ? options_1.DeterministicSeedPhrase\n            : randomAlphaNumericString(10, unseededRng),\n        defaultDescription: \"Random value, unless wallet.deterministic is specified\",\n        legacyName: \"seed\",\n        cliAliases: [\"s\", \"seed\"],\n        cliType: \"string\",\n        conflicts: [\"mnemonic\", \"deterministic\"]\n    },\n    mnemonic: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Use a specific HD wallet mnemonic to generate initial addresses.\",\n        // The order of the options matter here! `wallet.seed`\n        // needs to be prior to `wallet.mnemonic` for `config.seed`\n        // below to be set correctly\n        default: config => (0, bip39_1.entropyToMnemonic)(notVeryRandomBytes(16, (0, seedrandom_1.default)(config.seed))),\n        defaultDescription: \"Generated from wallet.seed\",\n        legacyName: \"mnemonic\",\n        cliAliases: [\"m\", \"mnemonic\"],\n        cliType: \"string\",\n        conflicts: [\"seed\", \"deterministic\"]\n    },\n    unlockedAccounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Array of addresses or address indexes specifying which accounts should be unlocked.\",\n        legacyName: \"unlocked_accounts\",\n        cliAliases: [\"u\", \"unlock\"],\n        cliType: \"array:string\"\n    },\n    lock: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Lock available accounts by default (good for third party transaction signing).\",\n        default: () => false,\n        legacyName: \"secure\",\n        cliAliases: [\"n\", \"secure\", \"lock\"],\n        cliType: \"boolean\"\n    },\n    passphrase: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Passphrase to use when locking accounts.\",\n        default: () => \"\",\n        cliAliases: [\"passphrase\"],\n        cliType: \"string\"\n    },\n    accountKeysPath: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specifies a file to save accounts and private keys to, for testing.\",\n        legacyName: \"account_keys_path\",\n        cliAliases: [\"account_keys_path\", \"acctKeys\"],\n        cliType: \"string\"\n    },\n    defaultBalance: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The default account balance, specified in ether.\",\n        default: () => 1000,\n        legacyName: \"default_balance_ether\",\n        cliAliases: [\"e\", \"defaultBalanceEther\"],\n        cliType: \"number\"\n    },\n    hdPath: {\n        normalize: (path) => {\n            return path.split(\"/\");\n        },\n        cliDescription: \"The hierarchical deterministic path to use when generating accounts.\",\n        default: () => [\"m\", \"44'\", \"60'\", \"0'\", \"0\"],\n        legacyName: \"hd_path\",\n        cliType: \"string\"\n    }\n};\n//# sourceMappingURL=wallet-options.js.map","\"use strict\";\n/*!\n * @ganache/ethereum-transaction\n *\n * @author David Murdoch\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/eip2930-access-list-transaction\"), exports);\n__exportStar(require(\"./src/eip1559-fee-market-transaction\"), exports);\n__exportStar(require(\"./src/base-transaction\"), exports);\n__exportStar(require(\"./src/hardfork\"), exports);\n__exportStar(require(\"./src/legacy-transaction\"), exports);\n__exportStar(require(\"./src/params\"), exports);\n__exportStar(require(\"./src/raw\"), exports);\n__exportStar(require(\"./src/rpc-transaction\"), exports);\n__exportStar(require(\"./src/runtime-transaction\"), exports);\n__exportStar(require(\"./src/transaction-receipt\"), exports);\n__exportStar(require(\"./src/transaction-factory\"), exports);\n__exportStar(require(\"./src/transaction-types\"), exports);\n__exportStar(require(\"./src/vm-transaction\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccessLists = exports.isAccessList = void 0;\nconst tx_1 = require(\"@ethereumjs/tx\");\nvar tx_2 = require(\"@ethereumjs/tx\");\nObject.defineProperty(exports, \"isAccessList\", { enumerable: true, get: function () { return tx_2.isAccessList; } });\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst params_1 = require(\"./params\");\nconst STORAGE_KEY_LENGTH = 32;\n/*\n  As per https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2930.md\n\n  AccessLists must be in the form of:\n  [[{20 bytes}, [{32 bytes}...]]...]\n  where ... implies \"zero or more of the thing to the left\"\n*/\nclass AccessLists {\n    static getAccessListData(accessList) {\n        let AccessListJSON;\n        let bufferAccessList;\n        let slots = 0;\n        const accessListStorageKeyCost = params_1.Params.ACCESS_LIST_STORAGE_KEY_GAS;\n        const accessListAddressCost = params_1.Params.ACCESS_LIST_ADDRESS_GAS;\n        if (accessList && (0, tx_1.isAccessList)(accessList)) {\n            AccessListJSON = accessList;\n            const newAccessList = [];\n            for (let i = 0; i < accessList.length; i++) {\n                const item = accessList[i];\n                const addressBuffer = ethereum_address_1.Address.toBuffer(item.address);\n                const storageItems = [];\n                const storageKeysLength = item.storageKeys.length;\n                slots += storageKeysLength;\n                for (let index = 0; index < storageKeysLength; index++) {\n                    storageItems.push(utils_1.Data.toBuffer(item.storageKeys[index], STORAGE_KEY_LENGTH));\n                }\n                newAccessList.push([addressBuffer, storageItems]);\n            }\n            bufferAccessList = newAccessList;\n        }\n        else {\n            bufferAccessList = accessList ? accessList : [];\n            // build the JSON\n            const json = [];\n            for (let i = 0; i < bufferAccessList.length; i++) {\n                const data = bufferAccessList[i];\n                const address = ethereum_address_1.Address.toString(data[0]);\n                const storageKeys = [];\n                const storageKeysLength = data[1].length;\n                slots += storageKeysLength;\n                for (let item = 0; item < storageKeysLength; item++) {\n                    storageKeys.push(utils_1.Data.toString(data[1][item], STORAGE_KEY_LENGTH));\n                }\n                const jsonItem = {\n                    address,\n                    storageKeys\n                };\n                json.push(jsonItem);\n            }\n            AccessListJSON = json;\n        }\n        const dataFee = BigInt(bufferAccessList.length * accessListAddressCost +\n            slots * accessListStorageKeyCost);\n        return {\n            AccessListJSON,\n            accessList: bufferAccessList,\n            dataFeeEIP2930: dataFee\n        };\n    }\n}\nexports.AccessLists = AccessLists;\n//# sourceMappingURL=access-lists.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseTransaction = exports.calculateIntrinsicGas = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst params_1 = require(\"./params\");\nconst MAX_UINT64 = 1n << (64n - 1n);\n/**\n * Compute the 'intrinsic gas' for a message with the given data.\n * @param data - The transaction's data\n * @param hasToAddress - boolean,\n * @param common - The Common use to determine gas costs\n * @returns The absolute minimum amount of gas this transaction will consume,\n * or `-1` if the data in invalid (gas consumption would exceed `MAX_UINT64`\n * (`(2n ** 64n) - 1n`).\n */\nconst calculateIntrinsicGas = (data, hasToAddress, common) => {\n    const hardfork = common.hardfork();\n    // Set the starting gas for the raw transaction\n    let gas = params_1.Params.TRANSACTION_GAS;\n    // if it doesn't have a \"to\" address this is a contract creation and it costs\n    // `TRANSACTION_CREATION` more gas.\n    if (!hasToAddress)\n        gas += params_1.Params.TRANSACTION_CREATION;\n    if (data) {\n        const input = data.toBuffer();\n        // Bump the required gas by the amount of transactional data\n        const dataLength = input.byteLength;\n        if (dataLength > 0) {\n            const TRANSACTION_DATA_NON_ZERO_GAS = params_1.Params.TRANSACTION_DATA_NON_ZERO_GAS.get(hardfork);\n            const TRANSACTION_DATA_ZERO_GAS = params_1.Params.TRANSACTION_DATA_ZERO_GAS;\n            // Zero and non-zero bytes are priced differently\n            let nonZeroBytes = 0n;\n            for (const b of input) {\n                if (b !== 0) {\n                    nonZeroBytes++;\n                }\n            }\n            // Make sure we don't exceed uint64 for all data combinations.\n            // TODO: make sure these upper-bound checks are safe to remove, then\n            // remove if so.\n            // NOTE: This is an upper-bounds limit ported from geth that doesn't\n            // make sense for Ethereum, as exceeding the upper bound would require\n            // something like 200+ Petabytes of data.\n            // https://github.com/ethereum/go-ethereum/blob/cf856ea1ad96ac39ea477087822479b63417036a/core/state_transition.go#L106-L141\n            //\n            // explanation:\n            // `(MAX_UINT64 - gas) / TRANSACTION_DATA_NON_ZERO_GAS` is the maximum\n            // number of \"non-zero bytes\" geth can handle.\n            if ((MAX_UINT64 - gas) / TRANSACTION_DATA_NON_ZERO_GAS < nonZeroBytes) {\n                return -1n;\n            }\n            gas += nonZeroBytes * TRANSACTION_DATA_NON_ZERO_GAS;\n            const zeroBytes = BigInt(dataLength) - nonZeroBytes;\n            // explanation:\n            // `(MAX_UINT64 - gas) / TRANSACTION_DATA_ZERO_GAS` is the maximum number\n            // of \"zero bytes\" geth can handle after subtracting out the cost of\n            // the \"non-zero bytes\"\n            if ((MAX_UINT64 - gas) / TRANSACTION_DATA_ZERO_GAS < zeroBytes) {\n                return -1n;\n            }\n            gas += zeroBytes * TRANSACTION_DATA_ZERO_GAS;\n        }\n    }\n    return gas;\n};\nexports.calculateIntrinsicGas = calculateIntrinsicGas;\nclass BaseTransaction {\n    constructor(common, extra) {\n        this.common = common;\n        if (extra) {\n            this.setExtra(extra);\n        }\n    }\n    setExtra(raw) {\n        const [from, hash, blockHash, blockNumber, index, effectiveGasPrice] = raw;\n        this.from = ethereum_address_1.Address.from(from);\n        this.hash = utils_1.Data.from(hash, 32);\n        this.blockHash = utils_1.Data.from(blockHash, 32);\n        this.blockNumber = utils_1.Quantity.from(blockNumber);\n        this.index = utils_1.Quantity.from(index);\n        this.effectiveGasPrice = utils_1.Quantity.from(effectiveGasPrice);\n    }\n    calculateIntrinsicGas() {\n        const hasToAddress = this.to != null && !this.to.toBuffer().equals(utils_1.BUFFER_EMPTY);\n        return (0, exports.calculateIntrinsicGas)(this.data, hasToAddress, this.common);\n    }\n}\nexports.BaseTransaction = BaseTransaction;\n//# sourceMappingURL=base-transaction.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIP1559FeeMarketTransaction = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_transaction_1 = require(\"./runtime-transaction\");\nconst access_lists_1 = require(\"./access-lists\");\nconst signing_1 = require(\"./signing\");\nconst secp256k1_1 = __importDefault(require(\"@ganache/secp256k1\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nfunction ecsign(msgHash, privateKey) {\n    const object = { signature: new Uint8Array(64), recid: null };\n    const status = secp256k1_1.default.ecdsaSign(object, msgHash, privateKey);\n    if (status === 0) {\n        const buffer = object.signature.buffer;\n        const r = Buffer.from(buffer, 0, 32);\n        const s = Buffer.from(buffer, 32, 32);\n        return { r, s, v: object.recid };\n    }\n    else {\n        throw new Error(\"The nonce generation function failed, or the private key was invalid\");\n    }\n}\nconst CAPABILITIES = [2718, 2930, 1559];\nclass EIP1559FeeMarketTransaction extends runtime_transaction_1.RuntimeTransaction {\n    constructor(data, common, extra) {\n        super(data, common, extra);\n        this.type = utils_1.Quantity.from(\"0x2\");\n        if (Array.isArray(data)) {\n            this.chainId = utils_1.Quantity.from(data[0]);\n            this.nonce = utils_1.Quantity.from(data[1]);\n            this.maxPriorityFeePerGas = utils_1.Quantity.from(data[2]);\n            this.maxFeePerGas = utils_1.Quantity.from(data[3]);\n            this.gas = utils_1.Quantity.from(data[4]);\n            this.to = data[5].length == 0 ? utils_1.Quantity.Empty : ethereum_address_1.Address.from(data[5]);\n            this.value = utils_1.Quantity.from(data[6]);\n            this.data = utils_1.Data.from(data[7]);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data[8]);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.v = utils_1.Quantity.from(data[9]);\n            this.r = utils_1.Quantity.from(data[10]);\n            this.s = utils_1.Quantity.from(data[11]);\n            this.raw = [this.type.toBuffer(), ...data];\n            if (!extra) {\n                // TODO(hack): we use the presence of `extra` to determine if this data\n                // come from the \"database\" or not. Transactions that come from the\n                // database must not be validated since they may come from a fork.\n                if (common.chainId() !== this.chainId.toNumber()) {\n                    throw new ethereum_utils_1.CodedError(`Invalid chain id (${this.chainId.toNumber()}) for chain with id ${common.chainId()}.`, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n                }\n                const { from, serialized, hash, encodedData, encodedSignature } = this.computeIntrinsics(this.v, this.raw);\n                this.from = from;\n                this.serialized = serialized;\n                this.hash = hash;\n                this.encodedData = encodedData;\n                this.encodedSignature = encodedSignature;\n            }\n        }\n        else {\n            if (data.chainId) {\n                this.chainId = utils_1.Quantity.from(data.chainId);\n            }\n            else {\n                this.chainId = utils_1.Quantity.from(common.chainIdBN().toArrayLike(Buffer));\n            }\n            this.maxPriorityFeePerGas = utils_1.Quantity.from(data.maxPriorityFeePerGas);\n            this.maxFeePerGas = utils_1.Quantity.from(data.maxFeePerGas);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data.accessList);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.validateAndSetSignature(data);\n        }\n    }\n    maxGasPrice() {\n        return this.maxFeePerGas;\n    }\n    toJSON(_common) {\n        return {\n            type: this.type,\n            hash: this.hash,\n            chainId: this.chainId,\n            nonce: this.nonce,\n            blockHash: this.blockHash ? this.blockHash : null,\n            blockNumber: this.blockNumber ? this.blockNumber : null,\n            transactionIndex: this.index ? this.index : null,\n            from: this.from,\n            to: this.to.isNull() ? null : this.to,\n            value: this.value,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n            maxFeePerGas: this.maxFeePerGas,\n            gasPrice: this.effectiveGasPrice,\n            gas: this.gas,\n            input: this.data,\n            accessList: this.accessListJSON,\n            v: this.v,\n            r: this.r,\n            s: this.s\n        };\n    }\n    static fromTxData(data, common, extra) {\n        return new EIP1559FeeMarketTransaction(data, common, extra);\n    }\n    toVmTransaction() {\n        const from = this.from;\n        const sender = from.toBuffer();\n        const to = this.to.toBuffer();\n        const data = this.data.toBuffer();\n        return {\n            hash: () => utils_1.BUFFER_32_ZERO,\n            nonce: new ethereumjs_util_1.BN(this.nonce.toBuffer()),\n            maxPriorityFeePerGas: new ethereumjs_util_1.BN(this.maxPriorityFeePerGas.toBuffer()),\n            maxFeePerGas: new ethereumjs_util_1.BN(this.maxFeePerGas.toBuffer()),\n            gasLimit: new ethereumjs_util_1.BN(this.gas.toBuffer()),\n            to: to.length === 0\n                ? null\n                : { buf: to, equals: (a) => to.equals(a.buf) },\n            value: new ethereumjs_util_1.BN(this.value.toBuffer()),\n            data,\n            AccessListJSON: this.accessListJSON,\n            getSenderAddress: () => ({\n                buf: sender,\n                equals: (a) => sender.equals(a.buf),\n                toString() {\n                    return from.toString();\n                }\n            }),\n            /**\n             * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n             */\n            getBaseFee: () => {\n                const fee = this.calculateIntrinsicGas();\n                return new ethereumjs_util_1.BN(utils_1.Quantity.toBuffer(fee));\n            },\n            getUpfrontCost: (baseFee = new ethereumjs_util_1.BN(0)) => {\n                const { gas, maxPriorityFeePerGas, maxFeePerGas, value } = this;\n                const maxPriorityFeePerGasBN = new ethereumjs_util_1.BN(maxPriorityFeePerGas.toBuffer());\n                const maxFeePerGasBN = new ethereumjs_util_1.BN(maxFeePerGas.toBuffer());\n                const gasLimitBN = new ethereumjs_util_1.BN(gas.toBuffer());\n                const valueBN = new ethereumjs_util_1.BN(value.toBuffer());\n                const inclusionFeePerGas = ethereumjs_util_1.BN.min(maxPriorityFeePerGasBN, maxFeePerGasBN.sub(baseFee));\n                const gasPrice = inclusionFeePerGas.add(baseFee);\n                return gasLimitBN.mul(gasPrice).add(valueBN);\n            },\n            supports: (capability) => {\n                return CAPABILITIES.includes(capability);\n            }\n        };\n    }\n    /**\n     * sign a transaction with a given private key, then compute and set the `hash`.\n     *\n     * @param privateKey - Must be 32 bytes in length\n     */\n    signAndHash(privateKey) {\n        if (this.v != null) {\n            throw new Error(\"Internal Error: RuntimeTransaction `sign` called but transaction has already been signed\");\n        }\n        const typeBuf = this.type.toBuffer();\n        const raw = this.toEthRawTransaction(utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO);\n        const data = (0, rlp_1.encodeRange)(raw, 1, 9);\n        const dataLength = data.length;\n        const msgHash = (0, utils_1.keccak)(Buffer.concat([typeBuf, (0, rlp_1.digest)([data.output], dataLength)]));\n        const sig = ecsign(msgHash, privateKey);\n        this.v = utils_1.Quantity.from(sig.v);\n        this.r = utils_1.Quantity.from(sig.r);\n        this.s = utils_1.Quantity.from(sig.s);\n        raw[10] = this.v.toBuffer();\n        raw[11] = this.r.toBuffer();\n        raw[12] = this.s.toBuffer();\n        this.raw = raw;\n        const encodedSignature = (0, rlp_1.encodeRange)(raw, 10, 3);\n        // raw data is type concatenated with the rest of the data rlp encoded\n        this.serialized = Buffer.concat([\n            typeBuf,\n            (0, rlp_1.digest)([data.output, encodedSignature.output], dataLength + encodedSignature.length)\n        ]);\n        this.hash = utils_1.Data.from((0, utils_1.keccak)(this.serialized));\n        this.encodedData = data;\n        this.encodedSignature = encodedSignature;\n    }\n    toEthRawTransaction(v, r, s) {\n        return [\n            this.type.toBuffer(),\n            this.chainId.toBuffer(),\n            this.nonce.toBuffer(),\n            this.maxPriorityFeePerGas.toBuffer(),\n            this.maxFeePerGas.toBuffer(),\n            this.gas.toBuffer(),\n            this.to.toBuffer(),\n            this.value.toBuffer(),\n            this.data.toBuffer(),\n            this.accessList,\n            v,\n            r,\n            s\n        ];\n    }\n    computeIntrinsics(v, raw) {\n        return (0, signing_1.computeIntrinsicsFeeMarketTx)(v, raw);\n    }\n    updateEffectiveGasPrice(baseFeePerGas) {\n        const baseFeePerGasBigInt = baseFeePerGas.toBigInt();\n        const maxFeePerGas = this.maxFeePerGas.toBigInt();\n        const maxPriorityFeePerGas = this.maxPriorityFeePerGas.toBigInt();\n        const a = maxFeePerGas - baseFeePerGasBigInt;\n        const tip = a < maxPriorityFeePerGas ? a : maxPriorityFeePerGas;\n        this.effectiveGasPrice = utils_1.Quantity.from(baseFeePerGasBigInt + tip);\n    }\n}\nexports.EIP1559FeeMarketTransaction = EIP1559FeeMarketTransaction;\n//# sourceMappingURL=eip1559-fee-market-transaction.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIP2930AccessListTransaction = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_transaction_1 = require(\"./runtime-transaction\");\nconst access_lists_1 = require(\"./access-lists\");\nconst signing_1 = require(\"./signing\");\nconst secp256k1_1 = __importDefault(require(\"@ganache/secp256k1\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nfunction ecsign(msgHash, privateKey) {\n    const object = { signature: new Uint8Array(64), recid: null };\n    const status = secp256k1_1.default.ecdsaSign(object, msgHash, privateKey);\n    if (status === 0) {\n        const buffer = object.signature.buffer;\n        const r = Buffer.from(buffer, 0, 32);\n        const s = Buffer.from(buffer, 32, 32);\n        return { r, s, v: object.recid };\n    }\n    else {\n        throw new Error(\"The nonce generation function failed, or the private key was invalid\");\n    }\n}\nconst CAPABILITIES = [2718, 2930];\nclass EIP2930AccessListTransaction extends runtime_transaction_1.RuntimeTransaction {\n    constructor(data, common, extra) {\n        super(data, common, extra);\n        this.type = utils_1.Quantity.from(\"0x1\");\n        if (Array.isArray(data)) {\n            this.chainId = utils_1.Quantity.from(data[0]);\n            this.nonce = utils_1.Quantity.from(data[1]);\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data[2]);\n            this.gas = utils_1.Quantity.from(data[3]);\n            this.to = data[4].length == 0 ? utils_1.Quantity.Empty : ethereum_address_1.Address.from(data[4]);\n            this.value = utils_1.Quantity.from(data[5]);\n            this.data = utils_1.Data.from(data[6]);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data[7]);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.v = utils_1.Quantity.from(data[8]);\n            this.r = utils_1.Quantity.from(data[9]);\n            this.s = utils_1.Quantity.from(data[10]);\n            this.raw = [this.type.toBuffer(), ...data];\n            if (!extra) {\n                // TODO(hack): we use the presence of `extra` to determine if this data\n                // come from the \"database\" or not. Transactions that come from the\n                // database must not be validated since they may come from a fork.\n                if (common.chainId() !== this.chainId.toNumber()) {\n                    throw new ethereum_utils_1.CodedError(`Invalid chain id (${this.chainId.toNumber()}) for chain with id ${common.chainId()}.`, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n                }\n                const { from, serialized, hash, encodedData, encodedSignature } = this.computeIntrinsics(this.v, this.raw);\n                this.from = from;\n                this.serialized = serialized;\n                this.hash = hash;\n                this.encodedData = encodedData;\n                this.encodedSignature = encodedSignature;\n            }\n        }\n        else {\n            if (data.chainId) {\n                this.chainId = utils_1.Quantity.from(data.chainId);\n                if (this.common.chainId() !== this.chainId.toNumber()) {\n                    throw new ethereum_utils_1.CodedError(`Invalid chain id (${this.chainId.toNumber()}) for chain with id ${common.chainId()}.`, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n                }\n            }\n            else {\n                this.chainId = utils_1.Quantity.from(common.chainIdBN().toArrayLike(Buffer));\n            }\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data.gasPrice);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data.accessList);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.validateAndSetSignature(data);\n        }\n    }\n    maxGasPrice() {\n        return this.gasPrice;\n    }\n    toJSON(_common) {\n        return {\n            hash: this.hash,\n            type: this.type,\n            chainId: this.chainId,\n            nonce: this.nonce,\n            blockHash: this.blockHash ? this.blockHash : null,\n            blockNumber: this.blockNumber ? this.blockNumber : null,\n            transactionIndex: this.index ? this.index : null,\n            from: this.from,\n            to: this.to.isNull() ? null : this.to,\n            value: this.value,\n            gas: this.gas,\n            gasPrice: this.gasPrice,\n            input: this.data,\n            accessList: this.accessListJSON,\n            v: this.v,\n            r: this.r,\n            s: this.s\n        };\n    }\n    static fromTxData(data, common, extra) {\n        return new EIP2930AccessListTransaction(data, common, extra);\n    }\n    toVmTransaction() {\n        const from = this.from;\n        const sender = this.from.toBuffer();\n        const to = this.to.toBuffer();\n        const data = this.data.toBuffer();\n        return {\n            hash: () => utils_1.BUFFER_32_ZERO,\n            nonce: new ethereumjs_util_1.BN(this.nonce.toBuffer()),\n            gasPrice: new ethereumjs_util_1.BN(this.gasPrice.toBuffer()),\n            gasLimit: new ethereumjs_util_1.BN(this.gas.toBuffer()),\n            to: to.length === 0\n                ? null\n                : { buf: to, equals: (a) => to.equals(a.buf) },\n            value: new ethereumjs_util_1.BN(this.value.toBuffer()),\n            data,\n            AccessListJSON: this.accessListJSON,\n            getSenderAddress: () => ({\n                buf: sender,\n                equals: (a) => sender.equals(a.buf),\n                toString() {\n                    return from.toString();\n                }\n            }),\n            /**\n             * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n             */\n            getBaseFee: () => {\n                const fee = this.calculateIntrinsicGas();\n                return new ethereumjs_util_1.BN(utils_1.Quantity.toBuffer(fee + this.accessListDataFee));\n            },\n            getUpfrontCost: () => {\n                const { gas, gasPrice, value } = this;\n                const c = gas.toBigInt() * gasPrice.toBigInt() + value.toBigInt();\n                return new ethereumjs_util_1.BN(utils_1.Quantity.toBuffer(c));\n            },\n            supports: (capability) => {\n                return CAPABILITIES.includes(capability);\n            }\n        };\n    }\n    /**\n     * sign a transaction with a given private key, then compute and set the `hash`.\n     *\n     * @param privateKey - Must be 32 bytes in length\n     */\n    signAndHash(privateKey) {\n        if (this.v != null) {\n            throw new Error(\"Internal Error: RuntimeTransaction `sign` called but transaction has already been signed\");\n        }\n        const typeBuf = this.type.toBuffer();\n        const raw = this.toEthRawTransaction(utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO);\n        const data = (0, rlp_1.encodeRange)(raw, 1, 8);\n        const dataLength = data.length;\n        const msgHash = (0, utils_1.keccak)(Buffer.concat([typeBuf, (0, rlp_1.digest)([data.output], dataLength)]));\n        const sig = ecsign(msgHash, privateKey);\n        this.v = utils_1.Quantity.from(sig.v);\n        this.r = utils_1.Quantity.from(sig.r);\n        this.s = utils_1.Quantity.from(sig.s);\n        raw[9] = this.v.toBuffer();\n        raw[10] = this.r.toBuffer();\n        raw[11] = this.s.toBuffer();\n        this.raw = raw;\n        const encodedSignature = (0, rlp_1.encodeRange)(raw, 9, 3);\n        // raw data is type concatenated with the rest of the data rlp encoded\n        this.serialized = Buffer.concat([\n            typeBuf,\n            (0, rlp_1.digest)([data.output, encodedSignature.output], dataLength + encodedSignature.length)\n        ]);\n        this.hash = utils_1.Data.from((0, utils_1.keccak)(this.serialized));\n        this.encodedData = data;\n        this.encodedSignature = encodedSignature;\n    }\n    toEthRawTransaction(v, r, s) {\n        return [\n            this.type.toBuffer(),\n            this.chainId.toBuffer(),\n            this.nonce.toBuffer(),\n            this.gasPrice.toBuffer(),\n            this.gas.toBuffer(),\n            this.to.toBuffer(),\n            this.value.toBuffer(),\n            this.data.toBuffer(),\n            this.accessList,\n            v,\n            r,\n            s\n        ];\n    }\n    computeIntrinsics(v, raw) {\n        return (0, signing_1.computeIntrinsicsAccessListTx)(v, raw);\n    }\n    updateEffectiveGasPrice() { }\n}\nexports.EIP2930AccessListTransaction = EIP2930AccessListTransaction;\n//# sourceMappingURL=eip2930-access-list-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=hardfork.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LegacyTransaction = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereumjs_util_2 = require(\"ethereumjs-util\");\nconst runtime_transaction_1 = require(\"./runtime-transaction\");\nconst signing_1 = require(\"./signing\");\nclass LegacyTransaction extends runtime_transaction_1.RuntimeTransaction {\n    constructor(data, common, extra) {\n        super(data, common, extra);\n        this.type = utils_1.Quantity.from(\"0x0\");\n        if (Array.isArray(data)) {\n            this.nonce = utils_1.Quantity.from(data[0]);\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data[1]);\n            this.gas = utils_1.Quantity.from(data[2]);\n            this.to = data[3].length == 0 ? utils_1.Quantity.Empty : ethereum_address_1.Address.from(data[3]);\n            this.value = utils_1.Quantity.from(data[4]);\n            this.data = utils_1.Data.from(data[5]);\n            this.v = utils_1.Quantity.from(data[6]);\n            this.r = utils_1.Quantity.from(data[7]);\n            this.s = utils_1.Quantity.from(data[8]);\n            this.raw = data;\n            if (!extra) {\n                // TODO(hack): Transactions that come from the database must not be\n                // validated since they may come from a fork.\n                const { from, serialized, hash, encodedData, encodedSignature } = this.computeIntrinsics(this.v, this.raw, this.common.chainId());\n                this.from = from;\n                this.serialized = serialized;\n                this.hash = hash;\n                this.encodedData = encodedData;\n                this.encodedSignature = encodedSignature;\n            }\n        }\n        else {\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data.gasPrice);\n            this.validateAndSetSignature(data);\n        }\n    }\n    maxGasPrice() {\n        return this.gasPrice;\n    }\n    toJSON(common) {\n        const json = {\n            hash: this.hash,\n            type: this.type,\n            nonce: this.nonce,\n            blockHash: this.blockHash ? this.blockHash : null,\n            blockNumber: this.blockNumber ? this.blockNumber : null,\n            transactionIndex: this.index ? this.index : null,\n            from: this.from,\n            to: this.to.isNull() ? null : this.to,\n            value: this.value,\n            gas: this.gas,\n            gasPrice: this.gasPrice,\n            input: this.data,\n            v: this.v,\n            r: this.r,\n            s: this.s\n        };\n        if ((this.common || common).isActivatedEIP(2718)) {\n            json.type = this.type;\n        }\n        return json;\n    }\n    static fromTxData(data, common, extra) {\n        return new LegacyTransaction(data, common, extra);\n    }\n    static fromEIP2930AccessListTransaction(data, common) {\n        if (Array.isArray(data)) {\n            // remove 1st item, chainId, and 7th item, accessList\n            return new LegacyTransaction(data.slice(1, 7).concat(data.slice(8)), common);\n        }\n        return new LegacyTransaction(data, common);\n    }\n    toVmTransaction() {\n        const from = this.from;\n        const sender = from.toBuffer();\n        const to = this.to.toBuffer();\n        const data = this.data.toBuffer();\n        return {\n            hash: () => utils_1.BUFFER_32_ZERO,\n            nonce: new ethereumjs_util_2.BN(this.nonce.toBuffer()),\n            gasPrice: new ethereumjs_util_2.BN(this.gasPrice.toBuffer()),\n            gasLimit: new ethereumjs_util_2.BN(this.gas.toBuffer()),\n            to: to.length === 0\n                ? null\n                : { buf: to, equals: (a) => to.equals(a.buf) },\n            value: new ethereumjs_util_2.BN(this.value.toBuffer()),\n            data,\n            getSenderAddress: () => ({\n                buf: sender,\n                equals: (a) => sender.equals(a.buf),\n                toString() {\n                    return from.toString();\n                }\n            }),\n            /**\n             * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n             */\n            getBaseFee: () => {\n                const fee = this.calculateIntrinsicGas();\n                return new ethereumjs_util_2.BN(utils_1.Quantity.toBuffer(fee));\n            },\n            getUpfrontCost: () => {\n                const { gas, gasPrice, value } = this;\n                const c = gas.toBigInt() * gasPrice.toBigInt() + value.toBigInt();\n                return new ethereumjs_util_2.BN(utils_1.Quantity.toBuffer(c));\n            },\n            supports: (capability) => {\n                return false;\n            }\n        };\n    }\n    /**\n     * sign a transaction with a given private key, then compute and set the `hash`.\n     *\n     * @param privateKey - Must be 32 bytes in length\n     */\n    signAndHash(privateKey) {\n        if (this.v != null) {\n            throw new Error(\"Internal Error: RuntimeTransaction `sign` called but transaction has already been signed\");\n        }\n        // only legacy transactions can work with EIP-155 deactivated.\n        // (EIP-2930 and EIP-1559 made EIP-155 obsolete and this logic isn't needed\n        // for those transactions)\n        const eip155IsActive = this.common.gteHardfork(\"spuriousDragon\");\n        let chainId;\n        let raw;\n        let data;\n        let dataLength;\n        let sig;\n        if (eip155IsActive) {\n            chainId = this.common.chainIdBN().toArrayLike(Buffer);\n            raw = this.toEthRawTransaction(chainId, utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY);\n            data = (0, rlp_1.encodeRange)(raw, 0, 6);\n            dataLength = data.length;\n            const ending = (0, rlp_1.encodeRange)(raw, 6, 3);\n            const msgHash = (0, utils_1.keccak)((0, rlp_1.digest)([data.output, ending.output], dataLength + ending.length));\n            sig = (0, ethereumjs_util_1.ecsign)(msgHash, privateKey, chainId);\n        }\n        else {\n            raw = this.toEthRawTransaction(utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY);\n            data = (0, rlp_1.encodeRange)(raw, 0, 6);\n            dataLength = data.length;\n            const msgHash = (0, utils_1.keccak)((0, rlp_1.digest)([data.output], dataLength));\n            sig = (0, ethereumjs_util_1.ecsign)(msgHash, privateKey);\n        }\n        this.v = utils_1.Quantity.from(sig.v);\n        this.r = utils_1.Quantity.from(sig.r);\n        this.s = utils_1.Quantity.from(sig.s);\n        raw[6] = this.v.toBuffer();\n        raw[7] = this.r.toBuffer();\n        raw[8] = this.s.toBuffer();\n        this.raw = raw;\n        const encodedSignature = (0, rlp_1.encodeRange)(raw, 6, 3);\n        this.serialized = (0, rlp_1.digest)([data.output, encodedSignature.output], dataLength + encodedSignature.length);\n        this.hash = utils_1.Data.from((0, utils_1.keccak)(this.serialized));\n        this.encodedData = data;\n        this.encodedSignature = encodedSignature;\n    }\n    toEthRawTransaction(v, r, s) {\n        return [\n            this.nonce.toBuffer(),\n            this.gasPrice.toBuffer(),\n            this.gas.toBuffer(),\n            this.to.toBuffer(),\n            this.value.toBuffer(),\n            this.data.toBuffer(),\n            v,\n            r,\n            s\n        ];\n    }\n    computeIntrinsics(v, raw, chainId) {\n        return (0, signing_1.computeIntrinsicsLegacyTx)(v, raw, chainId);\n    }\n    updateEffectiveGasPrice() { }\n}\nexports.LegacyTransaction = LegacyTransaction;\n//# sourceMappingURL=legacy-transaction.js.map","\"use strict\";\n// NOTE these params may need to be changed at each hardfork\n// they can be tracked here: https://github.com/ethereumjs/ethereumjs-vm/blob/master/packages/common/src/hardforks/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Params = void 0;\nexports.Params = {\n    /**\n     *  Per transaction not creating a contract. NOTE: Not payable on data of calls between transactions.\n     */\n    TRANSACTION_GAS: 21000n,\n    /**\n     * Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions.\n     * Ganache supports eth_call and debuging old transactions that should be run\n     * in the context of their original hardfork, so hardforks we don't support\n     * are listed here.\n     */\n    TRANSACTION_DATA_NON_ZERO_GAS: new Map([\n        [\"chainstart\", 68n],\n        [\"homestead\", 68n],\n        [\"dao\", 68n],\n        [\"tangerineWhistle\", 68n],\n        [\"spuriousDragon\", 68n],\n        [\"byzantium\", 68n],\n        [\"constantinople\", 68n],\n        [\"petersburg\", 68n],\n        [\"istanbul\", 16n],\n        [\"muirGlacier\", 16n],\n        [\"berlin\", 16n],\n        [\"london\", 16n],\n        [\"arrowGlacier\", 16n]\n    ]),\n    /**\n     * Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions.\n     */\n    TRANSACTION_DATA_ZERO_GAS: 4n,\n    /**\n     * Fee for creation a transaction\n     */\n    TRANSACTION_CREATION: 32000n,\n    /**\n     * Gas cost per address in an EIP-2930 Access List transaction\n     */\n    ACCESS_LIST_ADDRESS_GAS: 2400,\n    /**\n     * Gas cost per storage key in an EIP-2930 Access List transaction\n     */\n    ACCESS_LIST_STORAGE_KEY_GAS: 1900\n};\n//# sourceMappingURL=params.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=raw.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=rpc-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuntimeTransaction = exports.hasPartialSignature = exports.toValidLengthAddress = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst base_transaction_1 = require(\"./base-transaction\");\nconst transaction_receipt_1 = require(\"./transaction-receipt\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst toValidLengthAddress = (address, fieldName) => {\n    const buffer = utils_1.Data.toBuffer(address);\n    if (buffer.byteLength !== ethereum_address_1.Address.ByteLength) {\n        throw new Error(`The field ${fieldName} must have byte length of ${ethereum_address_1.Address.ByteLength}`);\n    }\n    return ethereum_address_1.Address.from(buffer);\n};\nexports.toValidLengthAddress = toValidLengthAddress;\nconst hasPartialSignature = (data) => {\n    return data[\"v\"] != null || data[\"r\"] != null || data[\"s\"] != null;\n};\nexports.hasPartialSignature = hasPartialSignature;\nconst ONE_BUFFER = utils_1.Quantity.One.toBuffer();\n/**\n * A RuntimeTransaction can be changed; its hash is not finalized and it is not\n * yet part of a block.\n */\nclass RuntimeTransaction extends base_transaction_1.BaseTransaction {\n    constructor(data, common, extra) {\n        super(common, extra);\n        /**\n         * used by the miner to mark if this transaction is eligible for reordering or\n         * removal\n         */\n        this.locked = false;\n        this.validateAndSetSignature = (data) => {\n            // If we have v, r, or s validate and use them\n            if ((0, exports.hasPartialSignature)(data)) {\n                if (data.v == null || data.r == null || data.s == null) {\n                    throw new Error(\"Transaction signature is incomplete; v, r, and s are required.\");\n                }\n                // if we have a signature the `nonce` field is required\n                if (data.nonce == null) {\n                    throw new Error(\"Signed transaction is incomplete; nonce is required.\");\n                }\n                this.v = utils_1.Quantity.from(data.v, true);\n                this.r = utils_1.Quantity.from(data.r, true);\n                this.s = utils_1.Quantity.from(data.s, true);\n                // compute the `hash` and the `from` address\n                const raw = this.toEthRawTransaction(this.v.toBuffer(), this.r.toBuffer(), this.s.toBuffer());\n                this.raw = raw;\n                if (!this.from) {\n                    const { from, serialized, hash, encodedData, encodedSignature } = this.computeIntrinsics(this.v, raw, this.common.chainId());\n                    // if the user specified a `from` address in addition to the  `v`, `r`,\n                    //  and `s` values, make sure the `from` address matches\n                    if (data.from !== null) {\n                        const userFrom = (0, exports.toValidLengthAddress)(data.from, \"from\");\n                        if (!from.toBuffer().equals(userFrom.toBuffer())) {\n                            throw new Error(\"Transaction is signed and contains a `from` field, but the signature doesn't match.\");\n                        }\n                    }\n                    this.from = from;\n                    this.serialized = serialized;\n                    this.hash = hash;\n                    this.encodedData = encodedData;\n                    this.encodedSignature = encodedSignature;\n                }\n            }\n            else if (data.from != null) {\n                // we don't have a signature yet, so we just need to record the `from`\n                // address for now. The TransactionPool will fill in the `hash` and\n                // `raw` fields during signing\n                this.from = (0, exports.toValidLengthAddress)(data.from, \"from\");\n            }\n        };\n        let finalizer;\n        this.finalized = new Promise(resolve => {\n            finalizer = (...args) => process.nextTick(resolve, ...args);\n        });\n        this.finalizer = finalizer;\n        if (!Array.isArray(data)) {\n            // handle JSON\n            this.nonce = utils_1.Quantity.from(data.nonce, true);\n            this.gas = utils_1.Quantity.from(data.gas == null ? data.gasLimit : data.gas);\n            this.to =\n                data.to == null ? utils_1.Quantity.Empty : (0, exports.toValidLengthAddress)(data.to, \"to\");\n            this.value = utils_1.Quantity.from(data.value || 0);\n            const dataVal = data.data == null\n                ? data.input == null\n                    ? \"0x\"\n                    : data.input\n                : data.data;\n            this.data = utils_1.Data.from(dataVal);\n        }\n    }\n    serializeForDb(blockHash, blockNumber, transactionIndex) {\n        // todo(perf):make this work with encodeRange and digest\n        const txAndExtraData = [\n            this.raw,\n            [\n                this.from.toBuffer(),\n                this.hash.toBuffer(),\n                blockHash.toBuffer(),\n                blockNumber.toBuffer(),\n                transactionIndex.toBuffer(),\n                this.effectiveGasPrice.toBuffer()\n            ]\n        ];\n        return (0, rlp_1.encode)(txAndExtraData);\n    }\n    /**\n     * Initializes the receipt and logs\n     * @param result -\n     * @returns RLP encoded data for use in a transaction trie\n     */\n    fillFromResult(result, cumulativeGasUsed) {\n        const vmResult = result.execResult;\n        const execException = vmResult.exceptionError;\n        let status;\n        if (execException) {\n            status = utils_1.BUFFER_ZERO;\n            this.execException = new ethereum_utils_1.RuntimeError(this.hash, result, ethereum_utils_1.RETURN_TYPES.TRANSACTION_HASH);\n        }\n        else {\n            status = ONE_BUFFER;\n        }\n        const receipt = (this.receipt = transaction_receipt_1.InternalTransactionReceipt.fromValues(status, utils_1.Quantity.toBuffer(cumulativeGasUsed), result.bloom.bitvector, (this.logs = vmResult.logs || []), result.gasUsed.toArrayLike(Buffer), result.createdAddress ? result.createdAddress.buf : null, this.type));\n        return receipt.serialize(false);\n    }\n    getReceipt() {\n        return this.receipt;\n    }\n    getLogs() {\n        return this.logs;\n    }\n    /**\n     * Returns a Promise that is resolved with the confirmation status and, if\n     * appropriate, an error property.\n     *\n     * Note: it is possible to be confirmed AND have an error\n     *\n     * @param event - \"finalized\"\n     */\n    once(_event) {\n        return this.finalized;\n    }\n    /**\n     * Mark this transaction as finalized, notifying all past and future\n     * \"finalized\" event subscribers.\n     *\n     * Note:\n     *\n     * @param status -\n     * @param error -\n     */\n    finalize(status, error = null) {\n        // resolves the `#finalized` promise\n        this.finalizer({ status, error });\n    }\n}\nexports.RuntimeTransaction = RuntimeTransaction;\n//# sourceMappingURL=runtime-transaction.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeIntrinsicsFeeMarketTx = exports.computeIntrinsicsAccessListTx = exports.computeIntrinsicsLegacyTx = exports.computeFromAddress = exports.publicKeyConvert = exports.ecdsaRecover = exports.isValidSigRecovery = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst secp256k1_1 = __importDefault(require(\"@ganache/secp256k1\"));\nconst intToBuffer = (value) => value === 0 ? utils_1.BUFFER_EMPTY : (0, utils_1.uintToBuffer)(value);\n/**\n * Copies `length` bytes from `source` to the `target`, filling remaining\n * bytes beyond `length - source.length` with `0`. Fills to the left.\n *\n * ```typescript\n * const source = Buffer.from([1, 2, 3]);\n * const target = Buffer.from([9, 9, 9, 9, 9, 9]);\n * copyOrFill(source, target, 1, 4);\n * // target.equals(Buffer.from([9, 0, 1, 2, 3, 9]));\n * //                               ^  ^  ^  ^\n * ```\n *\n * @param source - A Buffer to copy from.\n * @param target - A Buffer to copy into.\n * @param targetStart - The offset within `target` at which to begin writing.\n * @param length - The amount of bytes to copy or fill into the `target`.\n */\nfunction copyOrFill(source, target, targetStart, length) {\n    if (source.byteLength > length)\n        throw new Error(\"Invalid signature\");\n    // first, copy zeroes\n    const numZeroes = length - source.byteLength;\n    const endZeroes = targetStart + numZeroes;\n    let i = targetStart;\n    for (; i < endZeroes; i++) {\n        target[i] = 0;\n    }\n    // then copy the source into the target:\n    let end = targetStart + length;\n    const sourceOffset = targetStart + numZeroes;\n    for (; i < end; i++) {\n        target[i] = source[i - sourceOffset];\n    }\n}\nconst isValidSigRecovery = (recovery) => {\n    return recovery === 1 || recovery === 0;\n};\nexports.isValidSigRecovery = isValidSigRecovery;\n/**\n *\n * @param sharedBuffer - A Buffer, where bytes 0 - 97 are to be used by this function\n * @param r -\n * @param s -\n * @param msgHash -\n * @param recovery -\n */\nconst ecdsaRecover = (partialRlp, sharedBuffer, v, chainId, rBuf, sBuf) => {\n    let data;\n    let recid;\n    const eip155V = chainId * 2 + 35;\n    const isEip155 = v === eip155V || v === eip155V + 1;\n    if (isEip155) {\n        const chainBuf = intToBuffer(chainId);\n        const extras = [chainBuf, utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY];\n        const epilogue = (0, rlp_1.encodeRange)(extras, 0, 3);\n        data = (0, rlp_1.digest)([partialRlp.output, epilogue.output], partialRlp.length + epilogue.length);\n        recid = v - eip155V;\n    }\n    else {\n        data = (0, rlp_1.digest)([partialRlp.output], partialRlp.length);\n        recid = v - 27;\n    }\n    return _ecdsaRecover(data, sharedBuffer, rBuf, sBuf, recid);\n};\nexports.ecdsaRecover = ecdsaRecover;\nfunction _ecdsaRecover(data, sharedBuffer, rBuf, sBuf, recid) {\n    if (!(0, exports.isValidSigRecovery)(recid)) {\n        throw new Error(\"Invalid signature v value\");\n    }\n    const message = (0, utils_1.keccak)(data);\n    const signature = sharedBuffer.slice(0, 64);\n    copyOrFill(rBuf, signature, 0, 32);\n    copyOrFill(sBuf, signature, 32, 32);\n    const output = sharedBuffer.slice(0, 33);\n    const success = secp256k1_1.default.ecdsaRecover(output, signature, recid, message);\n    if (success !== 0) {\n        throw new Error(\"Invalid Signature\");\n    }\n    return output;\n}\n/**\n *\n * @param sharedBuffer - A Buffer, bytes 0 - 65 will be overwritten\n * @param senderPubKey -\n */\nconst publicKeyConvert = (sharedBuffer, senderPubKey) => {\n    const publicKey = sharedBuffer.slice(0, 65);\n    const result = secp256k1_1.default.publicKeyConvert(publicKey, senderPubKey);\n    if (result !== 0) {\n        throw new Error(\"Invalid Signature\");\n    }\n    return publicKey;\n};\nexports.publicKeyConvert = publicKeyConvert;\n/**\n * A Buffer that can be reused by `computeFromAddress`.\n */\nconst SHARED_BUFFER = Buffer.allocUnsafe(65);\nconst computeFromAddress = (partialRlp, v, rBuf, sBuf, chainId) => {\n    const senderPubKey = (0, exports.ecdsaRecover)(partialRlp, SHARED_BUFFER, v, chainId, rBuf, sBuf);\n    const publicKey = (0, exports.publicKeyConvert)(SHARED_BUFFER, senderPubKey);\n    return ethereum_address_1.Address.from((0, utils_1.keccak)(publicKey.slice(1)).slice(-20));\n};\nexports.computeFromAddress = computeFromAddress;\nconst computeIntrinsicsLegacyTx = (v, raw, chainId) => {\n    const encodedData = (0, rlp_1.encodeRange)(raw, 0, 6);\n    const encodedSignature = (0, rlp_1.encodeRange)(raw, 6, 3);\n    const serialized = (0, rlp_1.digest)([encodedData.output, encodedSignature.output], encodedData.length + encodedSignature.length);\n    return {\n        from: (0, exports.computeFromAddress)(encodedData, v.toNumber(), raw[7], raw[8], chainId),\n        hash: utils_1.Data.from((0, utils_1.keccak)(serialized), 32),\n        serialized,\n        encodedData,\n        encodedSignature\n    };\n};\nexports.computeIntrinsicsLegacyTx = computeIntrinsicsLegacyTx;\nconst computeIntrinsicsAccessListTx = (v, raw) => {\n    const typeBuf = raw[0];\n    const encodedData = (0, rlp_1.encodeRange)(raw, 1, 8);\n    const encodedSignature = (0, rlp_1.encodeRange)(raw, 9, 3);\n    const serialized = Buffer.concat([\n        typeBuf,\n        (0, rlp_1.digest)([encodedData.output, encodedSignature.output], encodedData.length + encodedSignature.length)\n    ]);\n    const data = Buffer.concat([\n        typeBuf,\n        (0, rlp_1.digest)([encodedData.output], encodedData.length)\n    ]);\n    const senderPubKey = _ecdsaRecover(data, SHARED_BUFFER, raw[10], raw[11], v.toNumber());\n    const publicKey = (0, exports.publicKeyConvert)(SHARED_BUFFER, senderPubKey);\n    const from = ethereum_address_1.Address.from((0, utils_1.keccak)(publicKey.slice(1)).slice(-20));\n    return {\n        from: from,\n        hash: utils_1.Data.from((0, utils_1.keccak)(serialized), 32),\n        serialized,\n        encodedData,\n        encodedSignature\n    };\n};\nexports.computeIntrinsicsAccessListTx = computeIntrinsicsAccessListTx;\nconst computeIntrinsicsFeeMarketTx = (v, raw) => {\n    const typeBuf = raw[0];\n    const encodedData = (0, rlp_1.encodeRange)(raw, 1, 9);\n    const encodedSignature = (0, rlp_1.encodeRange)(raw, 10, 3);\n    const serialized = Buffer.concat([\n        typeBuf,\n        (0, rlp_1.digest)([encodedData.output, encodedSignature.output], encodedData.length + encodedSignature.length)\n    ]);\n    const data = Buffer.concat([\n        typeBuf,\n        (0, rlp_1.digest)([encodedData.output], encodedData.length)\n    ]);\n    const senderPubKey = _ecdsaRecover(data, SHARED_BUFFER, raw[11], raw[12], v.toNumber());\n    const publicKey = (0, exports.publicKeyConvert)(SHARED_BUFFER, senderPubKey);\n    const from = ethereum_address_1.Address.from((0, utils_1.keccak)(publicKey.slice(1)).slice(-20));\n    return {\n        from: from,\n        hash: utils_1.Data.from((0, utils_1.keccak)(serialized), 32),\n        serialized,\n        encodedData,\n        encodedSignature\n    };\n};\nexports.computeIntrinsicsFeeMarketTx = computeIntrinsicsFeeMarketTx;\n//# sourceMappingURL=signing.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransactionFactory = exports.TransactionType = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst legacy_transaction_1 = require(\"./legacy-transaction\");\nconst eip2930_access_list_transaction_1 = require(\"./eip2930-access-list-transaction\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst eip1559_fee_market_transaction_1 = require(\"./eip1559-fee-market-transaction\");\nconst secp256k1_1 = require(\"@ganache/secp256k1\");\n/**\n * @param common\n * @param tx\n * @throws\n */\nfunction assertValidTransactionSValue(common, tx) {\n    // Transaction signatures whose s-value is greater than secp256k1n/2 are\n    // invalid after EIP-2 hardfork (homestead). See: https://eips.ethereum.org/EIPS/eip-2\n    if (tx.s &&\n        tx.s.toBigInt() >= secp256k1_1.SECP256K1_MAX_PRIVATE_KEY_DIV_2 &&\n        // EIP-2 is in homestead, but we can't use isActivatedEIP(2) because\n        // Common doesn't have that information for this hardfork.\n        common.gteHardfork(\"homestead\")) {\n        throw new Error(\"Invalid Signature: s-values greater than secp256k1n/2 are considered invalid\");\n    }\n}\nconst UNTYPED_TX_START_BYTE = 0xc0; // all txs with first byte >= 0xc0 are untyped\nvar TransactionType;\n(function (TransactionType) {\n    TransactionType[TransactionType[\"Legacy\"] = 0] = \"Legacy\";\n    TransactionType[TransactionType[\"EIP2930AccessList\"] = 1] = \"EIP2930AccessList\";\n    TransactionType[TransactionType[\"EIP1559AccessList\"] = 2] = \"EIP1559AccessList\";\n})(TransactionType = exports.TransactionType || (exports.TransactionType = {}));\nclass TransactionFactory {\n    constructor(raw, common) {\n        const [txData, extra] = (0, rlp_1.decode)(raw);\n        this.tx = TransactionFactory.fromDatabaseTx(txData, common, extra);\n    }\n    static _fromData(txData, txType, common, extra) {\n        // if tx type envelope isn't available yet on this HF,\n        // return legacy txs as is and convert typed txs to legacy\n        if (!common.isActivatedEIP(2718)) {\n            return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n        }\n        else if (!common.isActivatedEIP(1559)) {\n            if (txType === TransactionType.Legacy) {\n                return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n            }\n            else if (txType === TransactionType.EIP2930AccessList) {\n                if (common.isActivatedEIP(2930)) {\n                    return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData, common, extra);\n                }\n                else {\n                    // TODO: I believe this is unreachable with current architecture.\n                    // If 2718 is supported, so is 2930.\n                    throw new ethereum_utils_1.CodedError(`EIP 2930 is not activated.`, utils_1.JsonRpcErrorCode.INVALID_PARAMS);\n                }\n            }\n            else if (txType === TransactionType.EIP1559AccessList) {\n                throw new ethereum_utils_1.CodedError(`EIP 1559 is not activated.`, utils_1.JsonRpcErrorCode.INVALID_PARAMS);\n            }\n        }\n        // eip 1559, 2930, and 2718 are activated\n        else {\n            // we can assume that all database transactions came from us, so\n            // the type doesn't need to be normalized.\n            if (Array.isArray(txData)) {\n                if (txType === TransactionType.Legacy) {\n                    return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n                }\n                else if (txType === TransactionType.EIP2930AccessList) {\n                    return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData, common, extra);\n                }\n                else if (txType === TransactionType.EIP1559AccessList) {\n                    return eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData, common, extra);\n                }\n            }\n            else {\n                const toEIP1559 = (txType === TransactionType.Legacy ||\n                    txType === TransactionType.EIP2930AccessList) &&\n                    txData.gasPrice === undefined;\n                if (txType === TransactionType.EIP1559AccessList || toEIP1559) {\n                    const tx = eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData, common, extra);\n                    if (toEIP1559) {\n                        // they didn't specify the type as eip-1559 (type 2), so we are\n                        // upgrading it. BUT, there's still a chance they sent us this data,\n                        // so we don't want to overwrite it.\n                        if (!txData.maxFeePerGas) {\n                            tx.maxFeePerGas = utils_1.Quantity.from(null);\n                        }\n                        if (!txData.maxPriorityFeePerGas) {\n                            tx.maxPriorityFeePerGas = utils_1.Quantity.Gwei;\n                        }\n                    }\n                    return tx;\n                }\n                else if (txType === TransactionType.Legacy) {\n                    return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n                }\n                else if (txType === TransactionType.EIP2930AccessList) {\n                    // if no access list is provided, we convert to legacy\n                    if (txData.accessList === undefined) {\n                        return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n                    }\n                    else {\n                        return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData, common, extra);\n                    }\n                }\n            }\n        }\n        throw new ethereum_utils_1.CodedError(`Tx instantiation with supplied type not supported`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The rpc transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     */\n    static fromRpc(txData, common, extra) {\n        const txType = this.typeOfRPC(txData);\n        const tx = this._fromData(txData, txType, common, extra);\n        assertValidTransactionSValue(common, tx);\n        return tx;\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The raw transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     */\n    static fromDatabaseTx(txData, common, extra) {\n        const txType = this.typeOfRaw(txData);\n        switch (txType) {\n            case TransactionType.EIP1559AccessList:\n                return eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData.slice(1), common, extra);\n            case TransactionType.Legacy:\n                return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n            case TransactionType.EIP2930AccessList:\n                return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData.slice(1), common, extra);\n            default:\n                throw new ethereum_utils_1.CodedError(`Transactions with supplied type ${txType} not supported`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n        }\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * When transaction types are activated (EIP 2718) the txData will be checked\n     * for a transaction envelope (first byte < 192) before determining the\n     * decoding strategy, otherwise it will be decoded as a Legacy Transaction. If\n     * the transaction contains a transaction envelop, but EIP 2718 is not active\n     * decoding will fail and an exception will be thrown.\n     *\n     * @param txData - The raw hex string transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     */\n    static fromString(txData, common) {\n        let data = utils_1.Data.toBuffer(txData);\n        const type = data[0];\n        const txType = this.typeOf(type);\n        let tx;\n        if (common.isActivatedEIP(2718)) {\n            let raw;\n            try {\n                raw = (0, rlp_1.decode)(txType === TransactionType.Legacy ? data : data.slice(1));\n            }\n            catch (e) {\n                throw new Error(\"Could not decode transaction: \" + e.message);\n            }\n            tx = this._fromData(raw, txType, common);\n        }\n        else {\n            let raw;\n            try {\n                raw = (0, rlp_1.decode)(data);\n            }\n            catch (e) {\n                throw new Error(\"Could not decode transaction: \" + e.message);\n            }\n            tx = this._fromData(raw, TransactionType.Legacy, common);\n        }\n        assertValidTransactionSValue(common, tx);\n        return tx;\n    }\n    static typeOf(type) {\n        if (type === TransactionType.EIP1559AccessList ||\n            type === TransactionType.EIP2930AccessList) {\n            return type;\n        }\n        else if (type >= UNTYPED_TX_START_BYTE ||\n            type === TransactionType.Legacy ||\n            type === undefined) {\n            return TransactionType.Legacy;\n        }\n        else {\n            throw new Error(`Invalid transaction type: ${type}`);\n        }\n    }\n    static typeOfRaw(raw) {\n        // LegacyTransactions won't have the type up front to parse\n        if (raw.length === 9) {\n            return TransactionType.Legacy;\n        }\n        const type = raw[0][0];\n        return this.typeOf(type);\n    }\n    static typeOfRPC(rpc) {\n        if (!(\"type\" in rpc) || rpc.type === undefined) {\n            return TransactionType.Legacy;\n        }\n        else {\n            // The type must be a hex value\n            const txType = parseInt(rpc.type, 16);\n            return this.typeOf(txType);\n        }\n    }\n}\nexports.TransactionFactory = TransactionFactory;\n//# sourceMappingURL=transaction-factory.js.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _InternalTransactionReceipt_gasUsed, _InternalTransactionReceipt_init;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalTransactionReceipt = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst utils_1 = require(\"@ganache/utils\");\nconst STATUSES = [utils_1.Quantity.Zero, utils_1.Quantity.One];\nclass InternalTransactionReceipt {\n    constructor(data) {\n        _InternalTransactionReceipt_gasUsed.set(this, void 0);\n        _InternalTransactionReceipt_init.set(this, (status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress = null, type = null) => {\n            this.raw = [status, cumulativeGasUsed, logsBloom, logs];\n            this.contractAddress = contractAddress;\n            __classPrivateFieldSet(this, _InternalTransactionReceipt_gasUsed, gasUsed, \"f\");\n            this.txType = type;\n        });\n        if (data) {\n            const decoded = (0, rlp_1.decode)(data);\n            __classPrivateFieldGet(this, _InternalTransactionReceipt_init, \"f\").call(this, decoded[0], decoded[1], decoded[2], decoded[3], decoded[4], decoded[5]);\n        }\n    }\n    static fromValues(status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress, type = null) {\n        const receipt = new InternalTransactionReceipt();\n        __classPrivateFieldGet(receipt, _InternalTransactionReceipt_init, \"f\").call(receipt, status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress, type);\n        return receipt;\n    }\n    serialize(all) {\n        if (this.encoded == null) {\n            this.encoded = (0, rlp_1.encodeRange)(this.raw, 0, 4);\n        }\n        if (all) {\n            // the database format includes gasUsed and the contractAddress:\n            const extras = [\n                __classPrivateFieldGet(this, _InternalTransactionReceipt_gasUsed, \"f\"),\n                this.contractAddress\n            ];\n            const epilogue = (0, rlp_1.encodeRange)(extras, 0, 2);\n            return (0, rlp_1.digest)([this.encoded.output, epilogue.output], this.encoded.length + epilogue.length);\n        }\n        else {\n            // receipt trie format:\n            const serialized = (0, rlp_1.digest)([this.encoded.output], this.encoded.length);\n            return this.txType\n                ? Buffer.concat([this.txType.toBuffer(), serialized])\n                : serialized;\n        }\n    }\n    toJSON(block, transaction, common) {\n        const raw = this.raw;\n        const contractAddress = this.contractAddress.length === 0\n            ? null\n            : utils_1.Data.from(this.contractAddress);\n        const blockHash = block.hash();\n        const blockNumber = block.header.number;\n        const blockLog = ethereum_utils_1.BlockLogs.create(blockHash);\n        const transactionHash = transaction.hash;\n        const transactionIndex = transaction.index;\n        blockLog.blockNumber = blockNumber;\n        raw[3].forEach(l => blockLog.append(transactionIndex, transactionHash, l));\n        const logs = [...blockLog.toJSON()];\n        if (block.header.baseFeePerGas) {\n            transaction.updateEffectiveGasPrice(block.header.baseFeePerGas);\n        }\n        const json = {\n            transactionHash,\n            transactionIndex,\n            blockNumber,\n            blockHash,\n            from: transaction.from,\n            to: contractAddress ? null : transaction.to,\n            cumulativeGasUsed: utils_1.Quantity.from(raw[1]),\n            gasUsed: utils_1.Quantity.from(__classPrivateFieldGet(this, _InternalTransactionReceipt_gasUsed, \"f\")),\n            contractAddress,\n            logs,\n            logsBloom: utils_1.Data.from(raw[2], 256),\n            status: STATUSES[raw[0][0]],\n            effectiveGasPrice: transaction.effectiveGasPrice\n        };\n        if (transaction.type && common.isActivatedEIP(2718)) {\n            json.type = transaction.type;\n        }\n        return json;\n    }\n}\nexports.InternalTransactionReceipt = InternalTransactionReceipt;\n_InternalTransactionReceipt_gasUsed = new WeakMap(), _InternalTransactionReceipt_init = new WeakMap();\n//# sourceMappingURL=transaction-receipt.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=transaction-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=vm-transaction.js.map","\"use strict\";\n/*!\n * @ganache/ethereum-utils\n *\n * @author David Murdoch <david@trufflesuite.com> (https://davidmurdoch.com)\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbortError = void 0;\nclass AbortError extends Error {\n    constructor() {\n        super(\"The user aborted a request.\");\n    }\n}\nexports.AbortError = AbortError;\n//# sourceMappingURL=abort-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallError = void 0;\nconst errors_1 = require(\"./errors\");\nconst coded_error_1 = require(\"./coded-error\");\nconst utils_1 = require(\"@ganache/utils\");\nconst utils_2 = require(\"@ganache/utils\");\nclass CallError extends coded_error_1.CodedError {\n    constructor(result) {\n        const execResult = result.execResult;\n        const error = execResult.exceptionError.error;\n        let message = errors_1.VM_EXCEPTION + error;\n        super(message, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n        coded_error_1.CodedError.captureStackTraceExtended.bind(this, message);\n        this.name = this.constructor.name;\n        const { returnValue } = execResult;\n        const reason = coded_error_1.CodedError.createRevertReason(returnValue);\n        this.message = reason ? message + \" \" + reason : message;\n        this.data = utils_2.Data.toString(returnValue);\n    }\n}\nexports.CallError = CallError;\n//# sourceMappingURL=call-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodedError = void 0;\nconst ethereumjs_abi_1 = require(\"ethereumjs-abi\");\nconst REVERT_REASON = Buffer.from(\"08c379a0\", \"hex\"); // keccak(\"Error(string)\").slice(0, 4)\nclass CodedError extends Error {\n    constructor(message, code) {\n        super(message);\n        CodedError.captureStackTraceExtended.bind(this, message);\n        this.code = code;\n    }\n    static from(error, code) {\n        const codedError = new CodedError(error.message, code);\n        codedError.stack = error.stack;\n        return codedError;\n    }\n    static nonEnumerableProperty(value) {\n        // The field `enumerable` is `false` by default.\n        return {\n            value: value,\n            writable: true,\n            configurable: true\n        };\n    }\n    static captureStackTraceExtended(message) {\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        else {\n            // Generic way to set the error stack trace.\n            Object.defineProperty(this, \"stack\", CodedError.nonEnumerableProperty(Error(message).stack));\n            // Use the `+` operator with an empty string to implicitly type cast the\n            // `message` argument into a string.\n            Object.defineProperty(this, \"message\", CodedError.nonEnumerableProperty(message !== void 0 ? \"\" + message : \"\"));\n        }\n    }\n    static createRevertReason(returnValue) {\n        let reason;\n        if (returnValue.length > 4 &&\n            REVERT_REASON.compare(returnValue, 0, 4) === 0) {\n            try {\n                // it is possible for the `returnValue` to be gibberish that can't be\n                // decoded. See: https://github.com/trufflesuite/ganache/pull/452\n                reason = (0, ethereumjs_abi_1.rawDecode)([\"bytes\"], returnValue.slice(4))[0].toString();\n            }\n            catch {\n                // ignore error since reason string recover is impossible\n                reason = null;\n            }\n        }\n        else {\n            reason = null;\n        }\n        return reason;\n    }\n}\nexports.CodedError = CodedError;\n//# sourceMappingURL=coded-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.INSUFFICIENT_FUNDS = exports.TRANSACTION_LOCKED = exports.VM_EXCEPTIONS = exports.VM_EXCEPTION = exports.GAS_LIMIT = exports.INTRINSIC_GAS_TOO_LOW = exports.REPLACED = exports.UNDERPRICED = exports.NONCE_TOO_LOW = exports.INVALID_SENDER = void 0;\n/**\n * Returned if the transaction contains an invalid signature.\n */\nexports.INVALID_SENDER = \"invalid sender\";\n/**\n * Returned if the nonce of a transaction is lower than the one present in the local chain.\n */\nexports.NONCE_TOO_LOW = \"nonce too low\";\n/**\n * Returned if a transaction's gas price is below the minimum configured for the transaction pool.\n */\nexports.UNDERPRICED = \"transaction underpriced\";\n/**\n * Returned if a transaction's gas price is below the minimum configured for the transaction pool.\n */\nexports.REPLACED = \"transaction replaced by better transaction\";\n/**\n * Returned if the transaction is specified to use less gas than required to start the invocation.\n */\nexports.INTRINSIC_GAS_TOO_LOW = \"intrinsic gas too low\";\n/**\n * Returned if a transaction's requested gas limit exceeds the maximum allowance of the current block.\n */\nexports.GAS_LIMIT = \"exceeds block gas limit\";\n/**\n * Prefix for a single VM Exception occurring when running a transaction or block\n */\nexports.VM_EXCEPTION = \"VM Exception while processing transaction: \";\n/**\n * Prefix for multiple VM Exceptions occurring when running transactions or a block\n */\nexports.VM_EXCEPTIONS = \"Multiple VM Exceptions while processing transactions: : \\n\\n\";\n/**\n * Returned if a replacement transaction is sent while the potentially replaced transaction is being mined.\n */\nexports.TRANSACTION_LOCKED = \"transaction can't be replaced, mining has already started. (please open an issue with reproduction steps: https://github.com/trufflesuite/ganache/issues/new)\";\n/**\n * Returned if a transaction may require more funds than than account currently has available.\n */\nexports.INSUFFICIENT_FUNDS = \"insufficient funds for gas * price + value\";\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuntimeError = exports.RETURN_TYPES = void 0;\nconst errors_1 = require(\"./errors\");\nconst utils_1 = require(\"@ganache/utils\");\nconst coded_error_1 = require(\"./coded-error\");\nconst utils_2 = require(\"@ganache/utils\");\nvar RETURN_TYPES;\n(function (RETURN_TYPES) {\n    RETURN_TYPES[RETURN_TYPES[\"TRANSACTION_HASH\"] = 0] = \"TRANSACTION_HASH\";\n    RETURN_TYPES[RETURN_TYPES[\"RETURN_VALUE\"] = 1] = \"RETURN_VALUE\";\n})(RETURN_TYPES = exports.RETURN_TYPES || (exports.RETURN_TYPES = {}));\nclass RuntimeError extends coded_error_1.CodedError {\n    constructor(transactionHash, result, returnType) {\n        const execResult = result.execResult;\n        const error = execResult.exceptionError.error;\n        let message = errors_1.VM_EXCEPTION + error;\n        super(message, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n        coded_error_1.CodedError.captureStackTraceExtended.bind(this, message);\n        this.name = this.constructor.name;\n        const hash = transactionHash.toString();\n        const { returnValue } = execResult;\n        const reason = coded_error_1.CodedError.createRevertReason(returnValue);\n        this.message = reason ? message + \" \" + reason : message;\n        this.data = {\n            hash: hash,\n            programCounter: execResult.runState.programCounter,\n            result: returnType === RETURN_TYPES.TRANSACTION_HASH\n                ? hash\n                : utils_1.Data.toString(returnValue || \"0x\"),\n            reason: reason,\n            message: error\n        };\n    }\n}\nexports.RuntimeError = RuntimeError;\n//# sourceMappingURL=runtime-error.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./errors/coded-error\"), exports);\n__exportStar(require(\"./errors/errors\"), exports);\n__exportStar(require(\"./errors/runtime-error\"), exports);\n__exportStar(require(\"./errors/call-error\"), exports);\n__exportStar(require(\"./errors/abort-error\"), exports);\n__exportStar(require(\"./things/account\"), exports);\n__exportStar(require(\"./things/blocklogs\"), exports);\n__exportStar(require(\"./things/tags\"), exports);\n__exportStar(require(\"./things/trace-data\"), exports);\n__exportStar(require(\"./things/trace-storage-map\"), exports);\n__exportStar(require(\"./types/debug-storage\"), exports);\n__exportStar(require(\"./types/extract-values-from-types\"), exports);\n__exportStar(require(\"./types/filters\"), exports);\n__exportStar(require(\"./types/hex-datatypes\"), exports);\n__exportStar(require(\"./types/shh\"), exports);\n__exportStar(require(\"./types/subscriptions\"), exports);\n__exportStar(require(\"./types/trace-transaction\"), exports);\n__exportStar(require(\"./types/tuple-from-union\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereumjs_util_1 = require(\"ethereumjs-util\");\nconst rlp_1 = require(\"@ganache/rlp\");\nclass Account {\n    constructor(address) {\n        this.stateRoot = ethereumjs_util_1.KECCAK256_RLP;\n        this.codeHash = ethereumjs_util_1.KECCAK256_NULL;\n        this.address = address;\n        this.balance = utils_1.Quantity.Empty;\n        this.nonce = utils_1.Quantity.Empty;\n    }\n    static fromBuffer(buffer) {\n        const account = Object.create(Account.prototype);\n        const raw = (0, rlp_1.decode)(buffer);\n        account.nonce = utils_1.Quantity.from(raw[0]);\n        account.balance = utils_1.Quantity.from(raw[1]);\n        account.stateRoot = raw[2];\n        account.codeHash = raw[3];\n        return account;\n    }\n    serialize() {\n        return (0, rlp_1.encode)([\n            this.nonce.toBuffer(),\n            this.balance.toBuffer(),\n            this.stateRoot,\n            this.codeHash\n        ]);\n    }\n}\nexports.Account = Account;\n//# sourceMappingURL=account.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlockLogs = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst utils_2 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst _raw = Symbol(\"raw\");\nconst _logs = Symbol(\"logs\");\nconst filterByTopic = (expectedTopics, logTopics) => {\n    // Exclude log if its number of topics is less than the number expected\n    if (expectedTopics.length > logTopics.length)\n        return false;\n    // for every expectedTopic, we must much the log topic in the same position\n    return expectedTopics.every((expectedTopic, logPosition) => {\n        // a `null` topic means \"anything\"\n        if (expectedTopic === null)\n            return true;\n        let expectedTopicSet;\n        if (!Array.isArray(expectedTopic)) {\n            return logTopics[logPosition].equals(utils_1.Data.toBuffer(expectedTopic));\n        }\n        // an empty rule set means \"anything\"\n        if (expectedTopic.length === 0)\n            return true;\n        expectedTopicSet = expectedTopic;\n        const logTopic = logTopics[logPosition];\n        // \"OR\" logic, e.g., [[A, B]] means log topic in the first position matching either \"A\" OR \"B\":\n        return expectedTopicSet.some(expectedTopic => logTopic.equals(utils_1.Data.toBuffer(expectedTopic)));\n    });\n};\nclass BlockLogs {\n    constructor(data) {\n        if (data) {\n            const decoded = (0, rlp_1.decode)(data);\n            this[_raw] = decoded;\n        }\n    }\n    /**\n     *\n     * @param blockHash - Creates an BlogLogs entity with an empty internal logs\n     * array.\n     */\n    static create(blockHash) {\n        const blockLog = Object.create(BlockLogs.prototype);\n        blockLog[_raw] = [blockHash.toBuffer(), []];\n        return blockLog;\n    }\n    /**\n     * rlpEncode's the blockHash and logs array for db storage\n     */\n    serialize() {\n        return (0, rlp_1.encode)(this[_raw]);\n    }\n    /**\n     * Appends the data to the internal logs array\n     * @param transactionIndex -\n     * @param transactionHash -\n     * @param log -\n     */\n    append(\n    /*removed: boolean, */ transactionIndex, transactionHash, log) {\n        this[_raw][1].push([\n            utils_2.BUFFER_ZERO,\n            transactionIndex.toBuffer(),\n            transactionHash.toBuffer(),\n            log[0],\n            log[1],\n            log[2] // `data`\n        ]);\n    }\n    /**\n     * Returns the number of logs in the internal logs array.\n     */\n    get length() {\n        return this[_raw][1].length;\n    }\n    static fromJSON(json) {\n        if (!json || json.length === 0) {\n            return null;\n        }\n        const blockHash = json[0].blockHash;\n        const blockNumber = json[0].blockNumber;\n        const blockLogs = BlockLogs.create(utils_1.Data.from(blockHash, 32));\n        blockLogs.blockNumber = utils_1.Quantity.from(blockNumber);\n        json.forEach(log => {\n            const address = ethereum_address_1.Address.from(log.address);\n            const blockNumber = log.blockNumber;\n            const data = Array.isArray(log.data)\n                ? log.data.map(d => utils_1.Data.toBuffer(d))\n                : utils_1.Data.toBuffer(log.data);\n            const logIndex = log.logIndex;\n            const removed = log.removed === false ? utils_2.BUFFER_ZERO : utils_1.Quantity.One.toBuffer();\n            const topics = Array.isArray(log.topics)\n                ? log.topics.map(t => utils_1.Data.toBuffer(t, 32))\n                : utils_1.Data.toBuffer(log.topics, 32);\n            const transactionHash = utils_1.Data.from(log.transactionHash, 32);\n            const transactionIndex = utils_1.Quantity.from(log.transactionIndex);\n            blockLogs.append(transactionIndex, transactionHash, [\n                address.toBuffer(),\n                topics,\n                data\n            ]);\n        });\n        return blockLogs;\n    }\n    toJSON() {\n        return this[_logs]().toJSON();\n    }\n    [_logs]() {\n        const blockNumber = this.blockNumber;\n        const raw = this[_raw];\n        const logs = raw[1];\n        const l = this.length;\n        const blockHash = utils_1.Data.from(raw[0]);\n        return {\n            toJSON() {\n                return {\n                    *[Symbol.iterator]() {\n                        for (let i = 0; i < l; i++) {\n                            yield BlockLogs.logToJSON(logs[i], utils_1.Quantity.from(i), blockHash, blockNumber);\n                        }\n                    }\n                };\n            },\n            *[Symbol.iterator]() {\n                for (let i = 0; i < l; i++) {\n                    const log = logs[i];\n                    const address = log[3];\n                    const topics = log[4];\n                    yield {\n                        address,\n                        topics,\n                        toJSON: () => BlockLogs.logToJSON(log, utils_1.Quantity.from(i), blockHash, blockNumber)\n                    };\n                }\n            }\n        };\n    }\n    /**\n     *\n     * @param log -\n     * @param logIndex - The index this log appears in the block\n     * @param blockHash - The hash of the block\n     * @param blockNumber - The block number\n     */\n    static logToJSON(log, logIndex, blockHash, blockNumber) {\n        const topics = log[4];\n        const data = log[5];\n        return {\n            address: ethereum_address_1.Address.from(log[3]),\n            blockHash,\n            blockNumber,\n            data: Array.isArray(data)\n                ? data.map(d => utils_1.Data.from(d, d.length))\n                : utils_1.Data.from(data, data.length),\n            logIndex,\n            removed: log[0].equals(utils_2.BUFFER_ZERO) ? false : true,\n            topics: Array.isArray(topics)\n                ? topics.map(t => utils_1.Data.from(t, 32))\n                : utils_1.Data.from(topics, 32),\n            transactionHash: utils_1.Data.from(log[2], 32),\n            transactionIndex: utils_1.Quantity.from(log[1])\n        };\n    }\n    /**\n     * Note: you must set `this.blockNumber: Quantity` first!\n     *\n     * Topics are order-dependent. A transaction with a log with topics [A, B] will be matched by the following topic\n     * filters:\n     *  ▸ [] \"anything\"\n     *  ▸ [A] \"A in first position (and anything after)\"\n     *  ▸ [null, B] \"anything in first position AND B in second position (and anything after)\"\n     *  ▸ [A, B] \"A\" in first position AND B in second position (and anything after)\"\n     *  ▸ [[A, B], [A, B]] \"(A OR B) in first position AND (A OR B) in second position (and anything after)\"\n     * @param expectedAddresses -\n     * @param expectedTopics -\n     * @returns JSON representation of the filtered logs\n     */\n    *filter(expectedAddresses, expectedTopics) {\n        const logs = this[_logs]();\n        if (expectedAddresses.length !== 0) {\n            if (expectedTopics.length === 0) {\n                for (const log of logs) {\n                    if (expectedAddresses.some(address => address.equals(log.address)))\n                        yield log.toJSON();\n                }\n            }\n            else {\n                for (const log of logs) {\n                    if (!expectedAddresses.some(address => address.equals(log.address)))\n                        continue;\n                    if (filterByTopic(expectedTopics, log.topics))\n                        yield log.toJSON();\n                }\n            }\n        }\n        else if (expectedTopics.length !== 0) {\n            for (const log of logs) {\n                if (filterByTopic(expectedTopics, log.topics))\n                    yield log.toJSON();\n            }\n        }\n        else {\n            yield* logs.toJSON();\n        }\n    }\n}\nexports.BlockLogs = BlockLogs;\n//# sourceMappingURL=blocklogs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tag = exports.InternalTag = void 0;\nvar InternalTag;\n(function (InternalTag) {\n    InternalTag[\"earliest\"] = \"earliest\";\n    InternalTag[\"latest\"] = \"latest\";\n    InternalTag[\"pending\"] = \"pending\";\n})(InternalTag = exports.InternalTag || (exports.InternalTag = {}));\nvar Tag;\n(function (Tag) {\n    Tag.latest = \"latest\";\n    Tag.earliest = \"earliest\";\n    Tag.pending = \"pending\";\n})(Tag = exports.Tag || (exports.Tag = {}));\n//# sourceMappingURL=tags.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceDataFactory = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst BYTE_LENGTH = 32;\n/**\n * Precomputed 32-byte prefixes to make stringification a faster\n */\nconst PREFIXES = [\n    \"\",\n    \"00\",\n    \"0000\",\n    \"000000\",\n    \"00000000\",\n    \"0000000000\",\n    \"000000000000\",\n    \"00000000000000\",\n    \"0000000000000000\",\n    \"000000000000000000\",\n    \"00000000000000000000\",\n    \"0000000000000000000000\",\n    \"000000000000000000000000\",\n    \"00000000000000000000000000\",\n    \"0000000000000000000000000000\",\n    \"000000000000000000000000000000\",\n    \"00000000000000000000000000000000\",\n    \"0000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000000000000000000000\"\n];\nconst TraceDataFactory = () => {\n    const traceDataLookup = new Map();\n    const TraceData = {\n        from: (value) => {\n            // Remove all leading zeroes from keys.\n            const key = (0, utils_1.bufferToMinHexKey)(value);\n            const existing = traceDataLookup.get(key);\n            if (existing) {\n                return existing;\n            }\n            let buffer;\n            let str;\n            const data = {\n                /**\n                 * Returns a 32-byte 0-padded Buffer\n                 */\n                toBuffer: () => {\n                    if (buffer) {\n                        return buffer;\n                    }\n                    const length = value.byteLength;\n                    if (length === BYTE_LENGTH) {\n                        buffer = value;\n                    }\n                    else {\n                        // convert the buffer into the appropriately sized buffer.\n                        const lengthDiff = BYTE_LENGTH - length;\n                        buffer = Buffer.allocUnsafe(BYTE_LENGTH).fill(0, 0, lengthDiff);\n                        value.copy(buffer, lengthDiff, 0, length);\n                    }\n                    return buffer;\n                },\n                /**\n                 * Returns a 32-byte hex-string representation\n                 */\n                toJSON: () => {\n                    if (str) {\n                        return str;\n                    }\n                    // convert a hex key like \"ab01\" into \"00...00ab01\"\n                    return (str = `${PREFIXES[BYTE_LENGTH - key.length / 2]}${key}`);\n                }\n            };\n            traceDataLookup.set(key, data);\n            return data;\n        }\n    };\n    return TraceData;\n};\nexports.TraceDataFactory = TraceDataFactory;\n//# sourceMappingURL=trace-data.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceStorageMap = void 0;\nclass TraceStorageMap extends Map {\n    toJSON() {\n        const obj = {};\n        for (const [key, value] of this) {\n            obj[key.toJSON()] = value;\n        }\n        return obj;\n    }\n}\nexports.TraceStorageMap = TraceStorageMap;\n//# sourceMappingURL=trace-storage-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=debug-storage.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=extract-values-from-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilterTypes = void 0;\nvar FilterTypes;\n(function (FilterTypes) {\n    FilterTypes[FilterTypes[\"log\"] = 0] = \"log\";\n    FilterTypes[FilterTypes[\"block\"] = 1] = \"block\";\n    FilterTypes[FilterTypes[\"pendingTransaction\"] = 2] = \"pendingTransaction\";\n})(FilterTypes = exports.FilterTypes || (exports.FilterTypes = {}));\n//# sourceMappingURL=filters.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=hex-datatypes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=shh.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subscriptions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=trace-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=tuple-from-union.js.map","\"use strict\";\n/*!\n * @ganache/filecoin-options\n *\n * @author Tim Coulter\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilecoinDefaults = exports.FilecoinOptionsConfig = void 0;\nconst src_1 = require(\"./src\");\nvar src_2 = require(\"./src\");\nObject.defineProperty(exports, \"FilecoinOptionsConfig\", { enumerable: true, get: function () { return src_2.FilecoinOptionsConfig; } });\nObject.defineProperty(exports, \"FilecoinDefaults\", { enumerable: true, get: function () { return src_2.FilecoinDefaults; } });\nexports.default = {\n    FilecoinDefaults: src_1.FilecoinDefaults,\n    FilecoinOptionsConfig: src_1.FilecoinOptionsConfig\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChainOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.ChainOptions = {\n    ipfsHost: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The IPFS simulator host name/address to listen on.\",\n        default: () => \"127.0.0.1\",\n        cliType: \"string\"\n    },\n    ipfsPort: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The IPFS simulator port.\",\n        default: () => 5001,\n        cliType: \"number\"\n    },\n    asyncRequestProcessing: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"When set to `false` only one request will be processed at a time.\",\n        default: () => true,\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=chain-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DatabaseOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.DatabaseOptions = {\n    db: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify an alternative database instance, like MemDOWN\",\n        disableInCLI: true,\n        conflicts: [\"dbPath\"]\n    },\n    dbPath: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify a path to a directory to save the chain database.\",\n        cliAliases: [\"db\"],\n        cliType: \"string\",\n        conflicts: [\"db\"]\n    }\n};\n//# sourceMappingURL=database-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = void 0;\nconst normalize = (rawInput) => rawInput;\nexports.normalize = normalize;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilecoinOptionsConfig = exports.FilecoinDefaults = void 0;\nconst chain_options_1 = require(\"./chain-options\");\nconst database_options_1 = require(\"./database-options\");\nconst logging_options_1 = require(\"./logging-options\");\nconst miner_options_1 = require(\"./miner-options\");\nconst wallet_options_1 = require(\"./wallet-options\");\nconst options_1 = require(\"@ganache/options\");\nexports.FilecoinDefaults = {\n    chain: chain_options_1.ChainOptions,\n    database: database_options_1.DatabaseOptions,\n    logging: logging_options_1.LoggingOptions,\n    miner: miner_options_1.MinerOptions,\n    wallet: wallet_options_1.WalletOptions\n};\nexports.FilecoinOptionsConfig = new options_1.OptionsConfig(exports.FilecoinDefaults);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggingOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst logger = { log: console.log };\nexports.LoggingOptions = {\n    logger: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"An object, like `console`, that implements a `log` function.\",\n        disableInCLI: true,\n        default: () => logger\n    }\n};\n//# sourceMappingURL=logging-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MinerOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.MinerOptions = {\n    blockTime: {\n        normalize: value => Math.max(0, value),\n        cliDescription: 'Sets the `blockTime` in seconds for automatic mining. A `blockTime` of `0` or a negative number enables \"instamine mode\", where new executable transactions will be mined instantly.',\n        default: () => 0,\n        cliType: \"number\"\n    },\n    mine: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Enable mining. Set to `false` to pause the miner.\",\n        default: () => true,\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=miner-options.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst seedrandom_1 = __importDefault(require(\"seedrandom\"));\nconst options_1 = require(\"@ganache/options\");\nconst unseededRng = (0, seedrandom_1.default)();\nconst randomAlphaNumericString = (() => {\n    const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const alphabetLength = alphabet.length;\n    return (length, rng) => {\n        let text = \"\";\n        for (let i = 0; i < length; i++) {\n            text += alphabet[(rng() * alphabetLength) | 0];\n        }\n        return text;\n    };\n})();\nexports.WalletOptions = {\n    totalAccounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Number of accounts to generate at startup.\",\n        default: () => 10,\n        cliAliases: [\"a\"],\n        cliType: \"number\"\n    },\n    deterministic: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Use pre-defined, deterministic seed.\",\n        default: () => false,\n        cliAliases: [\"d\"],\n        cliType: \"boolean\",\n        conflicts: [\"seed\"]\n    },\n    seed: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Seed to use to generate a mnemonic.\",\n        // The order of the options matter here! `wallet.deterministic`\n        // needs to be prior to `wallet.seed` for `config.deterministic`\n        // below to be set correctly\n        default: config => config.deterministic === true\n            ? options_1.DeterministicSeedPhrase\n            : randomAlphaNumericString(10, unseededRng),\n        cliAliases: [\"s\"],\n        cliType: \"string\",\n        conflicts: [\"deterministic\"]\n    },\n    defaultBalance: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The default account balance, specified in FIL.\",\n        default: () => 100,\n        cliAliases: [\"b\"],\n        cliType: \"number\"\n    }\n};\n//# sourceMappingURL=wallet-options.js.map","\"use strict\";\n/*!\n * @ganache/colors\n *\n * @author David Murdoch\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/index\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TruffleColors = void 0;\nexports.TruffleColors = {\n    /**\n     * Ganache orange\n     */\n    porsche: \"#e4a663\",\n    /**\n     * Truffle blue/turquoise\n     */\n    turquoise: \"#3fe0c5\",\n    /**\n     * Infura orange\n     */\n    infura: \"#ff6b4a\"\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.__experimental_info = exports.provider = exports.server = exports._DefaultServerOptions = exports.ServerStatus = exports.Server = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst connector_loader_1 = __importDefault(require(\"./src/connector-loader\"));\nconst server_1 = __importDefault(require(\"./src/server\"));\nvar server_2 = require(\"./src/server\");\nObject.defineProperty(exports, \"Server\", { enumerable: true, get: function () { return server_2.Server; } });\nObject.defineProperty(exports, \"ServerStatus\", { enumerable: true, get: function () { return server_2.ServerStatus; } });\nObject.defineProperty(exports, \"_DefaultServerOptions\", { enumerable: true, get: function () { return server_2._DefaultServerOptions; } });\nconst version = process.env.VERSION || \"DEV\";\n/**\n * @public\n */\nconst Ganache = {\n    /**\n     * Creates a Ganache server instance that creates and\n     * serves an underlying Ganache provider. Initialization\n     * doesn't begin until `server.listen(...)` is called.\n     * `server.listen(...)` returns a promise that resolves\n     * when initialization is finished.\n     *\n     * @param options - Configuration options for the server;\n     * `options` includes provider based options as well.\n     * @returns A provider instance for the flavor\n     * `options.flavor` which defaults to `ethereum`.\n     */\n    server: (options) => new server_1.default(options),\n    /**\n     * Initializes a Web3 provider for a Ganache instance.\n     * This function starts an asynchronous task, but does not\n     * finish it by the time the function returns. Listen to\n     * `provider.on(\"connect\", () => {...})` or wait for\n     * `await provider.once(\"connect\")` for initialization to\n     * finish. You may start sending requests to the provider\n     * before initialization finishes however; these requests\n     * will start being consumed after initialization finishes.\n     *\n     * @param options - Configuration options for the provider.\n     * @returns A provider instance for the flavor\n     * `options.flavor` which defaults to `ethereum`.\n     */\n    provider: (options) => {\n        const loader = connector_loader_1.default.initialize(options);\n        return loader.connector.provider;\n    },\n    /**\n     *\n     * @experimental\n     */\n    __experimental_info() {\n        return {\n            version,\n            fork: {\n                knownChainIds: Array.from(utils_1.KNOWN_CHAINIDS)\n            }\n        };\n    }\n};\n/**\n * @public\n */\nexports.server = Ganache.server;\n/**\n * @public\n */\nexports.provider = Ganache.provider;\n/**\n * @experimental\n */\nexports.__experimental_info = Ganache.__experimental_info;\n/**\n * @public\n */\nexports.default = Ganache;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"@ganache/utils\");\nconst flavors_1 = require(\"@ganache/flavors\");\nconst flavors_2 = require(\"@ganache/flavors\");\nconst initialize = (options = {\n    flavor: flavors_1.DefaultFlavor,\n    chain: { asyncRequestProcessing: true }\n}) => {\n    const flavor = (options.flavor || flavors_1.DefaultFlavor);\n    // Set up our request coordinator to either use FIFO or or async request\n    // processing. The RequestCoordinator _can_ be used to coordinate the number\n    // of requests being processed, but we don't use it for that (yet), instead\n    // of \"all\" (0) or just 1 as we are doing here:\n    let asyncRequestProcessing;\n    if (\"chain\" in options && \"asyncRequestProcessing\" in options[\"chain\"]) {\n        asyncRequestProcessing = options.chain.asyncRequestProcessing;\n    }\n    else if (\"asyncRequestProcessing\" in options) {\n        asyncRequestProcessing = options.asyncRequestProcessing;\n    }\n    else {\n        asyncRequestProcessing = true;\n    }\n    const requestCoordinator = new utils_1.RequestCoordinator(asyncRequestProcessing ? 0 : 1);\n    // The Executor is responsible for actually executing the method on the\n    // chain/API. It performs some safety checks to ensure \"safe\" method\n    //  execution before passing it to a RequestCoordinator.\n    const executor = new utils_1.Executor(requestCoordinator);\n    const connector = (0, flavors_2.GetConnector)(flavor, options, executor);\n    // Purposely not awaiting on this to prevent a breaking change\n    // to the `Ganache.provider()` method\n    // TODO: remove the `connector.connect ? ` check and just use\n    // `connector.connect()` after publishing the `@ganache/filecoin` with the\n    // connector.connect interface\n    const connectPromise = connector.connect\n        ? connector.connect()\n        : connector.initialize();\n    // The request coordinator is initialized in a \"paused\" state; when the\n    // provider is ready we unpause.. This lets us accept queue requests before\n    // we've even fully initialized.\n    return {\n        connector,\n        promise: connectPromise.then(requestCoordinator.resume)\n    };\n};\n/**\n * Loads the connector specified by the given `flavor`\n */\nexports.default = {\n    initialize\n};\n//# sourceMappingURL=connector-loader.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serverOptionsConfig = exports.serverDefaults = void 0;\nconst server_options_1 = require(\"./server-options\");\nconst options_1 = require(\"@ganache/options\");\nexports.serverDefaults = {\n    server: server_options_1.ServerOptions\n};\nexports.serverOptionsConfig = new options_1.OptionsConfig(exports.serverDefaults);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServerOptions = void 0;\nconst flavors_1 = require(\"@ganache/flavors\");\nconst buffer_1 = require(\"buffer\");\nconst normalize = (rawInput) => rawInput;\nexports.ServerOptions = {\n    ws: {\n        normalize,\n        cliDescription: \"Enable a websocket server.\",\n        default: () => true,\n        legacyName: \"ws\",\n        cliType: \"boolean\"\n    },\n    wsBinary: {\n        normalize,\n        cliDescription: \"Whether or not websockets should response with binary data (ArrayBuffers) or strings.\",\n        default: () => \"auto\",\n        cliChoices: [\"true\", \"false\", \"auto\"]\n    },\n    rpcEndpoint: {\n        normalize,\n        cliDescription: \"Defines the endpoint route the HTTP and WebSocket servers will listen on.\",\n        default: (config, flavor) => {\n            switch (flavor) {\n                case flavors_1.FilecoinFlavorName:\n                    return \"/rpc/v0\";\n                case flavors_1.DefaultFlavor:\n                default:\n                    return \"/\";\n            }\n        },\n        defaultDescription: '\"/\" (Ethereum), \"/rpc/v0\" (Filecoin)'\n    },\n    chunkSize: {\n        normalize: number => {\n            if (number < 0 || number > buffer_1.kMaxLength) {\n                throw new Error(`--server.chunkSize must be >= 0 and <= ${buffer_1.kMaxLength}`);\n            }\n            return number;\n        },\n        cliDescription: \"For memory and performance reasons ganache may respond with chunked transfer-encoding over HTTP and fragmented send over WebSockets. This option allows you to control the approximate size of each chunk.\",\n        default: () => 1024 * 1024,\n        cliType: \"number\"\n    }\n};\n//# sourceMappingURL=server-options.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Server_options, _Server_providerOptions, _Server_status, _Server_app, _Server_httpServer, _Server_listenSocket, _Server_connector, _Server_websocketServer, _Server_initializer;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Server = exports._DefaultServerOptions = exports.ServerStatus = void 0;\nconst options_1 = require(\"./options\");\nconst promise_allsettled_1 = __importDefault(require(\"promise.allsettled\"));\n// This `shim()` is necessary for `Promise.allSettled` to be shimmed\n// in `node@10`. We cannot use `allSettled([...])` directly due to\n// https://github.com/es-shims/Promise.allSettled/issues/5 without\n// upgrading Typescript. TODO: if Typescript is upgraded to 4.2.3+\n// then this line could be removed and `Promise.allSettled` below\n// could replaced with `allSettled`.\npromise_allsettled_1.default.shim();\nconst aggregate_error_1 = __importDefault(require(\"aggregate-error\"));\nconst uws_js_unofficial_1 = require(\"@trufflesuite/uws-js-unofficial\");\n// Set the \"silent\" config option so we don't output the \"uwebsockets\" header\n// we check for truthiness because `uws` is omitted from the browser build\nuws_js_unofficial_1._cfg &&\n    (0, uws_js_unofficial_1._cfg)(new Uint8Array([115, 105, 108, 101, 110, 116]));\nconst flavors_1 = require(\"@ganache/flavors\");\nconst connector_loader_1 = __importDefault(require(\"./connector-loader\"));\nconst ws_server_1 = __importDefault(require(\"./servers/ws-server\"));\nconst http_server_1 = __importDefault(require(\"./servers/http-server\"));\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst DEFAULT_HOST = \"127.0.0.1\";\n/**\n * Server ready state constants.\n *\n * These are bit flags. This means that you can check if the status is:\n *  * ready: `status === Status.ready` or `status & Status.ready !== 0`\n *  * opening: `status === Status.opening` or `status & Status.opening !== 0`\n *  * open: `status === Status.open` or `status & Status.open !== 0`\n *  * opening || open: `status & Status.openingOrOpen !== 0` or `status & (Status.opening | Status.open) !== 0`\n *  * closing: `status === Status.closing` or `status & Status.closing !== 0`\n *  * closed: `status === Status.closed` or `status & Status.closed !== 0`\n *  * closing || closed: `status & Status.closingOrClosed !== 0` or `status & (Status.closing | Status.closed) !== 0`\n */\nvar ServerStatus;\n(function (ServerStatus) {\n    /**\n     * The Server is in an unknown state; perhaps construction didn't succeed\n     */\n    ServerStatus[ServerStatus[\"unknown\"] = 0] = \"unknown\";\n    /**\n     * The Server has been constructed and is ready to be opened.\n     */\n    ServerStatus[ServerStatus[\"ready\"] = 1] = \"ready\";\n    /**\n     * The Server has started to open, but has not yet finished initialization.\n     */\n    ServerStatus[ServerStatus[\"opening\"] = 2] = \"opening\";\n    /**\n     * The Server is open and ready for connection.\n     */\n    ServerStatus[ServerStatus[\"open\"] = 4] = \"open\";\n    /**\n     * The Server is either opening or is already open\n     */\n    ServerStatus[ServerStatus[\"openingOrOpen\"] = 6] = \"openingOrOpen\";\n    /**\n     * The Server is in the process of closing.\n     */\n    ServerStatus[ServerStatus[\"closing\"] = 8] = \"closing\";\n    /**\n     * The Server is closed and not accepting new connections.\n     */\n    ServerStatus[ServerStatus[\"closed\"] = 16] = \"closed\";\n    /**\n     * The Server is either opening or is already open\n     */\n    ServerStatus[ServerStatus[\"closingOrClosed\"] = 24] = \"closingOrClosed\";\n})(ServerStatus = exports.ServerStatus || (exports.ServerStatus = {}));\n/**\n * For private use. May change in the future.\n * I don't don't think these options should be held in this `core` package.\n * @ignore\n * @internal\n */\nexports._DefaultServerOptions = options_1.serverDefaults;\n/**\n * @public\n */\nclass Server extends emittery_1.default {\n    constructor(providerAndServerOptions = {\n        flavor: flavors_1.DefaultFlavor\n    }) {\n        super();\n        _Server_options.set(this, void 0);\n        _Server_providerOptions.set(this, void 0);\n        _Server_status.set(this, ServerStatus.unknown);\n        _Server_app.set(this, null);\n        _Server_httpServer.set(this, null);\n        _Server_listenSocket.set(this, null);\n        _Server_connector.set(this, void 0);\n        _Server_websocketServer.set(this, null);\n        _Server_initializer.set(this, void 0);\n        __classPrivateFieldSet(this, _Server_options, options_1.serverOptionsConfig.normalize(providerAndServerOptions), \"f\");\n        __classPrivateFieldSet(this, _Server_providerOptions, providerAndServerOptions, \"f\");\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.ready, \"f\");\n        // we need to start initializing now because `initialize` sets the\n        // `provider` property... and someone might want to do:\n        //   const server = Ganache.server();\n        //   const provider = server.provider;\n        //   await server.listen(8545)\n        const loader = connector_loader_1.default.initialize(__classPrivateFieldGet(this, _Server_providerOptions, \"f\"));\n        const connector = (__classPrivateFieldSet(this, _Server_connector, loader.connector, \"f\"));\n        // Since the ConnectorLoader starts an async promise that we intentionally\n        // don't await yet we keep the promise around for something else to handle\n        // later.\n        __classPrivateFieldSet(this, _Server_initializer, Promise.all([\n            loader.promise,\n            this.initialize(connector)\n        ]), \"f\");\n    }\n    get provider() {\n        return __classPrivateFieldGet(this, _Server_connector, \"f\").provider;\n    }\n    get status() {\n        return __classPrivateFieldGet(this, _Server_status, \"f\");\n    }\n    async initialize(connector) {\n        const _app = (__classPrivateFieldSet(this, _Server_app, (0, uws_js_unofficial_1.App)(), \"f\"));\n        if (__classPrivateFieldGet(this, _Server_options, \"f\").server.ws) {\n            __classPrivateFieldSet(this, _Server_websocketServer, new ws_server_1.default(_app, connector, __classPrivateFieldGet(this, _Server_options, \"f\").server), \"f\");\n        }\n        __classPrivateFieldSet(this, _Server_httpServer, new http_server_1.default(_app, connector, __classPrivateFieldGet(this, _Server_options, \"f\").server), \"f\");\n        await connector.once(\"ready\");\n    }\n    listen(port, host, callback) {\n        if (typeof host === \"function\") {\n            callback = host;\n            host = null;\n        }\n        const callbackIsFunction = typeof callback === \"function\";\n        // Method signature specifies port: number, but we parse a string if provided\n        // inspiration taken from nodejs internal port validator\n        // https://github.com/nodejs/node/blob/8c4b8b201ada6b76d5306c9c7f352e45087fb4a9/lib/internal/validators.js#L208-L219\n        if ((typeof port !== \"number\" && typeof port !== \"string\") ||\n            (typeof port === \"string\" && port.trim().length === 0) ||\n            +port !== +port >>> 0 ||\n            port > 0xffff ||\n            port === 0) {\n            const err = new Error(`Port should be >= 0 and < 65536. Received ${port}.`);\n            return callbackIsFunction\n                ? process.nextTick(callback, err)\n                : Promise.reject(err);\n        }\n        const portNumber = +port;\n        const status = __classPrivateFieldGet(this, _Server_status, \"f\");\n        if (status === ServerStatus.closing) {\n            // if closing\n            const err = new Error(`Cannot start server while it is closing.`);\n            return callbackIsFunction\n                ? process.nextTick(callback, err)\n                : Promise.reject(err);\n        }\n        else if ((status & ServerStatus.openingOrOpen) !== 0) {\n            // if opening or open\n            const err = new Error(`Server is already open, or is opening, on port: ${portNumber}.`);\n            return callbackIsFunction\n                ? process.nextTick(callback, err)\n                : Promise.reject(err);\n        }\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.opening, \"f\");\n        const promise = Promise.allSettled([\n            __classPrivateFieldGet(this, _Server_initializer, \"f\"),\n            new Promise((resolve) => {\n                // Make sure we have *exclusive* use of this port.\n                // https://github.com/uNetworking/uSockets/commit/04295b9730a4d413895fa3b151a7337797dcb91f#diff-79a34a07b0945668e00f805838601c11R51\n                const LIBUS_LISTEN_EXCLUSIVE_PORT = 1;\n                host\n                    ? __classPrivateFieldGet(this, _Server_app, \"f\").listen(host, portNumber, LIBUS_LISTEN_EXCLUSIVE_PORT, resolve)\n                    : __classPrivateFieldGet(this, _Server_app, \"f\").listen(portNumber, LIBUS_LISTEN_EXCLUSIVE_PORT, resolve);\n            }).then(listenSocket => {\n                if (listenSocket) {\n                    __classPrivateFieldSet(this, _Server_status, ServerStatus.open, \"f\");\n                    __classPrivateFieldSet(this, _Server_listenSocket, listenSocket, \"f\");\n                }\n                else {\n                    __classPrivateFieldSet(this, _Server_status, ServerStatus.closed, \"f\");\n                    const err = new Error(`listen EADDRINUSE: address already in use ${host || DEFAULT_HOST}:${portNumber}.`);\n                    throw err;\n                }\n            })\n        ]).then(async (promiseResults) => {\n            const errors = [];\n            if (promiseResults[0].status === \"rejected\") {\n                errors.push(promiseResults[0].reason);\n            }\n            if (promiseResults[1].status === \"rejected\") {\n                errors.push(promiseResults[1].reason);\n            }\n            if (errors.length === 0) {\n                this.emit(\"open\");\n            }\n            else {\n                __classPrivateFieldSet(this, _Server_status, ServerStatus.unknown, \"f\");\n                try {\n                    await this.close();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n                if (errors.length > 1) {\n                    throw new aggregate_error_1.default(errors);\n                }\n                else {\n                    throw errors[0];\n                }\n            }\n        });\n        if (callbackIsFunction) {\n            promise.then(() => callback(null)).catch(callback);\n        }\n        else {\n            return promise;\n        }\n    }\n    async close() {\n        if (__classPrivateFieldGet(this, _Server_status, \"f\") === ServerStatus.opening) {\n            // if opening\n            throw new Error(`Cannot close server while it is opening.`);\n        }\n        else if ((__classPrivateFieldGet(this, _Server_status, \"f\") & ServerStatus.closingOrClosed) !== 0) {\n            // if closing or closed\n            throw new Error(`Server is already closing or closed.`);\n        }\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.closing, \"f\");\n        // clean up the websocket objects\n        const _listenSocket = __classPrivateFieldGet(this, _Server_listenSocket, \"f\");\n        __classPrivateFieldSet(this, _Server_listenSocket, null, \"f\");\n        // close the socket to prevent any more connections\n        if (_listenSocket !== null) {\n            (0, uws_js_unofficial_1.us_listen_socket_close)(_listenSocket);\n        }\n        // close all the connected websockets:\n        if (__classPrivateFieldGet(this, _Server_websocketServer, \"f\") !== null) {\n            __classPrivateFieldGet(this, _Server_websocketServer, \"f\").close();\n        }\n        // and do all http cleanup, if any\n        if (__classPrivateFieldGet(this, _Server_httpServer, \"f\") !== null) {\n            __classPrivateFieldGet(this, _Server_httpServer, \"f\").close();\n        }\n        // cleanup the connector, provider, etc.\n        if (__classPrivateFieldGet(this, _Server_connector, \"f\") !== null) {\n            await __classPrivateFieldGet(this, _Server_connector, \"f\").close();\n        }\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.closed, \"f\");\n        __classPrivateFieldSet(this, _Server_app, null, \"f\");\n        await this.emit(\"close\");\n    }\n}\nexports.Server = Server;\n_Server_options = new WeakMap(), _Server_providerOptions = new WeakMap(), _Server_status = new WeakMap(), _Server_app = new WeakMap(), _Server_httpServer = new WeakMap(), _Server_listenSocket = new WeakMap(), _Server_connector = new WeakMap(), _Server_websocketServer = new WeakMap(), _Server_initializer = new WeakMap();\nexports.default = Server;\n//# sourceMappingURL=server.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _HttpServer_connector, _HttpServer_options, _HttpServer_isClosing, _HttpServer_handlePost, _HttpServer_handleOptions;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst content_types_1 = __importDefault(require(\"./utils/content-types\"));\nconst http_response_codes_1 = __importDefault(require(\"./utils/http-response-codes\"));\nconst util_1 = require(\"util\");\nconst fragment_generator_1 = require(\"./utils/fragment-generator\");\nconst noop = () => { };\n/**\n * uWS doesn't let us use the request after the request method has completed.\n * But we can't set headers until after the statusCode is set. But we don't\n * know the status code until the provider returns asynchronously.\n * So this does request-related work immediately and returns a function to do the\n * rest of the work later.\n * @param method -\n * @param request -\n */\nfunction prepareCORSResponseHeaders(method, request) {\n    // https://fetch.spec.whatwg.org/#http-requests\n    const origin = request.getHeader(\"origin\");\n    const acrh = request.getHeader(\"access-control-request-headers\");\n    return (response) => {\n        const isCORSRequest = origin !== \"\";\n        if (isCORSRequest) {\n            // OPTIONS preflight requests need a little extra treatment\n            if (method === \"OPTIONS\") {\n                // we only allow POST requests, so it doesn't matter which method the request is asking for\n                response.writeHeader(\"Access-Control-Allow-Methods\", \"POST\");\n                // echo all requested access-control-request-headers back to the response\n                if (acrh !== \"\") {\n                    response.writeHeader(\"Access-Control-Allow-Headers\", acrh);\n                }\n                // Make browsers and compliant clients cache the OPTIONS preflight response for 10\n                // minutes (this is the maximum time Chromium allows)\n                response.writeHeader(\"Access-Control-Max-Age\", \"600\"); // seconds\n            }\n            // From the spec: https://fetch.spec.whatwg.org/#http-responses\n            // \"For a CORS-preflight request, request’s credentials mode is always \"omit\",\n            // but for any subsequent CORS requests it might not be. Support therefore\n            // needs to be indicated as part of the HTTP response to the CORS-preflight request as well.\", so this\n            // header is added to all requests.\n            // Additionally, https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials,\n            // states that there aren't any HTTP Request headers that indicate you whether or not Request.withCredentials\n            // is set. Because web3@1.0.0-beta.35-? always sets `request.withCredentials = true` while Safari requires it be\n            // returned even when no credentials are set in the browser this header must always be return on all requests.\n            // (I've found that Chrome and Firefox don't actually require the header when credentials aren't set)\n            //  Regression Commit: https://github.com/ethereum/web3.js/pull/1722\n            //  Open Web3 Issue: https://github.com/ethereum/web3.js/issues/1802\n            response.writeHeader(\"Access-Control-Allow-Credentials\", \"true\");\n            // From the spec: \"It cannot be reliably identified as participating in the CORS protocol\n            // as the `Origin` header is also included for all requests whose method is neither\n            // `GET` nor `HEAD`.\"\n            // Explicitly set the origin instead of using *, since credentials\n            // can't be used in conjunction with *. This will always be set\n            /// for valid preflight requests.\n            response.writeHeader(\"Access-Control-Allow-Origin\", origin);\n        }\n    };\n}\nfunction sendResponse(response, closeConnection, statusCode, contentType, data, writeHeaders = noop) {\n    response.cork(() => {\n        response.writeStatus(statusCode);\n        writeHeaders(response);\n        if (contentType != null) {\n            response.writeHeader(\"Content-Type\", contentType);\n        }\n        if (data !== null) {\n            response.end(data, closeConnection);\n        }\n        else {\n            // in the case that body is not provided, it must specifically be <undefined> and not <null>\n            response.end(undefined, closeConnection);\n        }\n    });\n}\nfunction sendChunkedResponse(response, closeConnection, statusCode, contentType, data, chunkSize, writeHeaders = noop) {\n    const fragments = (0, fragment_generator_1.getFragmentGenerator)(data, chunkSize);\n    // get our first fragment\n    const { value: firstFragment } = fragments.next();\n    // check if there is any more fragments after this one\n    let { value: nextFragment, done } = fragments.next();\n    // if there are no more fragments send the \"firstFragment\" via `sendResponse`,\n    // as we don't need to chunk it.\n    if (done) {\n        sendResponse(response, closeConnection, statusCode, contentType, firstFragment, writeHeaders);\n    }\n    else {\n        response.cork(() => {\n            response.writeStatus(statusCode);\n            writeHeaders(response);\n            response.writeHeader(\"Content-Type\", contentType);\n            // since we have at least two fragments send both now\n            response.write(firstFragment);\n            response.write(nextFragment);\n            // and then keep sending the rest\n            for (nextFragment of fragments) {\n                response.write(nextFragment);\n            }\n            response.end(undefined, closeConnection);\n        });\n    }\n}\nclass HttpServer {\n    constructor(app, connector, options) {\n        _HttpServer_connector.set(this, void 0);\n        _HttpServer_options.set(this, void 0);\n        _HttpServer_isClosing.set(this, false);\n        _HttpServer_handlePost.set(this, (response, request) => {\n            // handle JSONRPC post requests...\n            const writeHeaders = prepareCORSResponseHeaders(\"POST\", request);\n            // TODO(perf): pre-allocate the buffer if we know the Content-Length\n            let buffer;\n            let aborted = false;\n            response.onAborted(() => {\n                aborted = true;\n            });\n            response.onData((message, isLast) => {\n                const chunk = Buffer.from(message);\n                if (isLast) {\n                    // we have to use any here because typescript isn't smart enough\n                    // to understand the ambiguity of RequestFormat and ReturnType\n                    // on the Connector interface must match up appropriately\n                    const connector = __classPrivateFieldGet(this, _HttpServer_connector, \"f\");\n                    let payload;\n                    try {\n                        const message = buffer\n                            ? Buffer.concat([buffer, chunk], buffer.length + chunk.length)\n                            : chunk;\n                        payload = connector.parse(message);\n                    }\n                    catch (e) {\n                        sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.BAD_REQUEST, content_types_1.default.PLAIN, \"400 Bad Request: \" + e.message, writeHeaders);\n                        return;\n                    }\n                    connector\n                        .handle(payload, request)\n                        .then(({ value }) => value)\n                        .then(result => {\n                        if (aborted) {\n                            // if the request has been aborted don't try sending (it'll\n                            // cause an `Unhandled promise rejection` if we try)\n                            return;\n                        }\n                        const data = connector.format(result, payload);\n                        if (util_1.types.isGeneratorObject(data)) {\n                            sendChunkedResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.OK, content_types_1.default.JSON, data, __classPrivateFieldGet(this, _HttpServer_options, \"f\").chunkSize, writeHeaders);\n                        }\n                        else {\n                            sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.OK, content_types_1.default.JSON, data, writeHeaders);\n                        }\n                    })\n                        .catch(error => {\n                        if (aborted) {\n                            // if the request has been aborted don't try sending (it'll\n                            // cause an `Unhandled promise rejection` if we try)\n                            return;\n                        }\n                        const data = connector.formatError(error, payload);\n                        sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.OK, content_types_1.default.JSON, data, writeHeaders);\n                    });\n                }\n                else {\n                    if (buffer) {\n                        buffer = Buffer.concat([buffer, chunk], buffer.length + chunk.length);\n                    }\n                    else {\n                        buffer = Buffer.concat([chunk], chunk.length);\n                    }\n                }\n            });\n        });\n        _HttpServer_handleOptions.set(this, (response, request) => {\n            // handle CORS preflight requests...\n            const writeHeaders = prepareCORSResponseHeaders(\"OPTIONS\", request);\n            // OPTIONS responses don't have a body, so respond with `204 No Content`...\n            sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.NO_CONTENT, null, null, writeHeaders);\n        });\n        __classPrivateFieldSet(this, _HttpServer_connector, connector, \"f\");\n        __classPrivateFieldSet(this, _HttpServer_options, options, \"f\");\n        // JSON-RPC routes...\n        app\n            .post(options.rpcEndpoint, __classPrivateFieldGet(this, _HttpServer_handlePost, \"f\"))\n            .options(options.rpcEndpoint, __classPrivateFieldGet(this, _HttpServer_handleOptions, \"f\"));\n        // because Easter Eggs are fun...\n        app.get(\"/418\", response => {\n            sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.IM_A_TEAPOT, content_types_1.default.PLAIN, \"418 I'm a teapot\");\n        });\n        // fallback routes...\n        app.any(\"/*\", (response, request) => {\n            const connectionHeader = request.getHeader(\"connection\");\n            if (connectionHeader && connectionHeader.toLowerCase() === \"upgrade\") {\n                // if we got here it means the websocket server wasn't enabled but\n                // a client tried to connect via websocket. This is a Bad Request.\n                sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.BAD_REQUEST, content_types_1.default.PLAIN, \"400 Bad Request\");\n            }\n            else {\n                // all other requests don't mean anything to us, so respond with `404 Not Found`...\n                sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.NOT_FOUND, content_types_1.default.PLAIN, \"404 Not Found\");\n            }\n        });\n    }\n    close() {\n        // flags the server as closing, indicating the connection should be closed with subsequent responses\n        // as there is no way presently to close existing connections outside of the request/response context\n        // see discussion: https://github.com/uNetworking/uWebSockets.js/issues/663#issuecomment-1026283415\n        __classPrivateFieldSet(this, _HttpServer_isClosing, true, \"f\");\n    }\n}\nexports.default = HttpServer;\n_HttpServer_connector = new WeakMap(), _HttpServer_options = new WeakMap(), _HttpServer_isClosing = new WeakMap(), _HttpServer_handlePost = new WeakMap(), _HttpServer_handleOptions = new WeakMap();\n//# sourceMappingURL=http-server.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContentTypes;\n(function (ContentTypes) {\n    ContentTypes[\"PLAIN\"] = \"text/plain\";\n    ContentTypes[\"JSON\"] = \"application/json\";\n})(ContentTypes || (ContentTypes = {}));\nexports.default = ContentTypes;\n//# sourceMappingURL=content-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFragmentGenerator = void 0;\nfunction* getFragmentGenerator(data, bufferSize) {\n    // Use a large buffer to reduce round-trips\n    let buf = Buffer.allocUnsafe(bufferSize);\n    let offset = 0;\n    for (const value of data) {\n        const { byteLength } = value;\n        // if we don't have enough space in the buffer for this next value `yield`\n        // the buffer as is.\n        if (offset > 0 && byteLength + offset > bufferSize) {\n            yield buf.subarray(0, offset);\n            // Reset the buffer. Since `uws` sends packets asynchronously,\n            // it is important that we allocate a new buffer for the next\n            // frame. This avoids overwriting data before it is sent. The\n            // reason we need to do this is likely because we do not yet\n            // handle backpressure. Part of handling backpressure will\n            // involve the drain event and only sending while\n            // `ws.getBufferedAmount() < ACCEPTABLE_BACKPRESSURE`.\n            // See https://github.com/trufflesuite/ganache/issues/2790\n            buf = null;\n            offset = 0;\n        }\n        // Store value in buffer if it fits (but don't store it if it is the exact\n        // same size as bufferSize)\n        if (byteLength < bufferSize) {\n            // copy from value into buffer\n            if (buf === null)\n                buf = Buffer.allocUnsafe(bufferSize);\n            value.copy(buf, offset, 0, byteLength);\n            offset += byteLength;\n        }\n        else {\n            // Cannot fit this value in buffer, send it directly.\n            // Buffer has just been flushed (since the condition `byteLength + offset > bufferSize`\n            // will always be true here, which will have triggered the flush above) so\n            // we do not need to worry about out-of-order send.\n            yield value;\n        }\n    }\n    // If we've got anything buffered at this point, send it.\n    if (offset > 0)\n        yield buf.subarray(0, offset);\n    return void 0;\n}\nexports.getFragmentGenerator = getFragmentGenerator;\n//# sourceMappingURL=fragment-generator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar HttpResponseCodes;\n(function (HttpResponseCodes) {\n    HttpResponseCodes[\"OK\"] = \"200\";\n    HttpResponseCodes[\"NO_CONTENT\"] = \"204\";\n    HttpResponseCodes[\"BAD_REQUEST\"] = \"400\";\n    HttpResponseCodes[\"NOT_FOUND\"] = \"404\";\n    HttpResponseCodes[\"METHOD_NOT_ALLOWED\"] = \"405\";\n    HttpResponseCodes[\"IM_A_TEAPOT\"] = \"418\";\n})(HttpResponseCodes || (HttpResponseCodes = {}));\nexports.default = HttpResponseCodes;\n//# sourceMappingURL=http-response-codes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WebSocketCloseCodes;\n(function (WebSocketCloseCodes) {\n    /**\n     * Normal closure; the connection successfully completed whatever purpose for\n     * which it was created.\n     */\n    WebSocketCloseCodes[WebSocketCloseCodes[\"CLOSE_NORMAL\"] = 1000] = \"CLOSE_NORMAL\";\n    /**\n     * Indicates that an endpoint is \"going away\", such as a server going down or\n     * a browser having navigated away from a page.\n     */\n    // CLOSE_GOING_AWAY = 1001\n    // CLOSE_PROTOCOL_ERROR = 1002,\n    // CLOSE_ABNORMAL = 1006\n})(WebSocketCloseCodes || (WebSocketCloseCodes = {}));\nexports.default = WebSocketCloseCodes;\n//# sourceMappingURL=websocket-close-codes.js.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _WebsocketServer_connections;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_PAYLOAD_SIZE = exports.sendFragmented = void 0;\nconst websocket_close_codes_1 = __importDefault(require(\"./utils/websocket-close-codes\"));\nconst util_1 = require(\"util\");\nconst fragment_generator_1 = require(\"./utils/fragment-generator\");\nfunction sendFragmented(ws, data, useBinary, chunkSize) {\n    ws.cork(() => {\n        // fragment send: https://github.com/uNetworking/uWebSockets.js/issues/635\n        const shouldCompress = false;\n        const fragments = (0, fragment_generator_1.getFragmentGenerator)(data, chunkSize);\n        // get our first fragment\n        const { value: firstFragment } = fragments.next();\n        // check if there is any more fragments after this one\n        let { value: maybeLastFragment, done } = fragments.next();\n        // if there are no more fragments send the \"firstFragment\" via `send`, as\n        // we don't need to chunk it.\n        if (done) {\n            ws.send(firstFragment, useBinary);\n        }\n        else {\n            // since we have at least two fragments send the first one now that it\n            // is \"full\"\n            ws.sendFirstFragment(firstFragment, useBinary);\n            // at this point `maybeLastFragment` is the next fragment that should be\n            // sent. We iterate over all fragments, sending the _previous_ fragment\n            // (`maybeLastFragment`) then cache the current fragment (`fragment`)\n            // in the `maybeLastFragment` variable, which will be sent in the next\n            // iteration, or via `sendLastFragment`, below, if `fragment` was also the\n            // very last one.\n            for (const fragment of fragments) {\n                // definitely not the last fragment, send it!\n                ws.sendFragment(maybeLastFragment, shouldCompress);\n                maybeLastFragment = fragment;\n            }\n            ws.sendLastFragment(\n            // definitely the last fragment at this point\n            maybeLastFragment, shouldCompress);\n        }\n    });\n}\nexports.sendFragmented = sendFragmented;\n// matches geth's limit of 15 MebiBytes: https://github.com/ethereum/go-ethereum/blob/3526f690478482a02a152988f4d31074c176b136/rpc/websocket.go#L40\nexports.MAX_PAYLOAD_SIZE = 15 * 1024 * 1024;\nclass WebsocketServer {\n    constructor(app, connector, options) {\n        _WebsocketServer_connections.set(this, new Map());\n        const connections = __classPrivateFieldGet(this, _WebsocketServer_connections, \"f\");\n        const wsBinary = options.wsBinary;\n        const autoBinary = wsBinary === \"auto\";\n        app.ws(options.rpcEndpoint, {\n            /* WS Options */\n            maxPayloadLength: exports.MAX_PAYLOAD_SIZE,\n            idleTimeout: 120,\n            // Note that compression is disabled (the default option)\n            // due to not being able to link against electron@12\n            // with compression included\n            /* Handlers */\n            open: (ws) => {\n                ws.closed = false;\n                connections.set(ws, new Set());\n            },\n            message: async (ws, message, isBinary) => {\n                // We have to use type any instead of ReturnType<typeof connector.parse>\n                // on `payload` because Typescript isn't smart enough to understand the\n                // ambiguity doesn't actually exist\n                let payload;\n                const useBinary = autoBinary ? isBinary : wsBinary;\n                try {\n                    payload = connector.parse(Buffer.from(message));\n                }\n                catch (err) {\n                    const response = connector.formatError(err, payload);\n                    ws.send(response, useBinary);\n                    return;\n                }\n                let data;\n                try {\n                    const { value } = await connector.handle(payload, ws);\n                    // The socket may have closed while we were waiting for the response\n                    // Don't bother trying to send to it if it was.\n                    if (ws.closed)\n                        return;\n                    const resultEmitter = value;\n                    const result = await resultEmitter;\n                    if (ws.closed)\n                        return;\n                    data = connector.format(result, payload);\n                    // if the result is an emitter listen to its `\"message\"` event\n                    // We check if `on` is a function rather than check if\n                    // `resultEmitter instanceof PromiEvent` because `@ganache/filecoin`\n                    // and `ganache` webpack `@ganache/utils` separately. This causes\n                    // instanceof to fail here. Since we know `resultEmitter` is MergePromiseT\n                    // we can safely assume that if `on` is a function, then we have a PromiEvent\n                    if (typeof resultEmitter[\"on\"] === \"function\") {\n                        const resultEmitterPromiEvent = resultEmitter;\n                        resultEmitterPromiEvent.on(\"message\", (result) => {\n                            // note: we _don't_ need to check if `ws.closed` here because when\n                            // `ws.closed` is set we remove this event handler anyway.\n                            const message = JSON.stringify({\n                                jsonrpc: \"2.0\",\n                                method: result.type,\n                                params: result.data\n                            });\n                            ws.send(message, isBinary);\n                        });\n                        // keep track of listeners to dispose off when the ws disconnects\n                        connections.get(ws).add(resultEmitterPromiEvent.dispose);\n                    }\n                }\n                catch (err) {\n                    // ensure the connector's `handle` fn doesn't throw outside of a Promise\n                    if (ws.closed)\n                        return;\n                    data = connector.formatError(err, payload);\n                }\n                if (util_1.types.isGeneratorObject(data)) {\n                    sendFragmented(ws, data, useBinary, options.chunkSize);\n                }\n                else {\n                    ws.send(data, useBinary);\n                }\n            },\n            drain: (ws) => {\n                // This is there so tests can detect if a small amount of backpressure\n                // is happening and that things will still work if it does. We actually\n                // don't do anything to manage excessive backpressure.\n                // TODO: handle back pressure for real!\n                // options.logger.log(\"WebSocket backpressure: \" + ws.getBufferedAmount());\n            },\n            close: (ws) => {\n                ws.closed = true;\n                connections.get(ws).forEach(dispose => dispose());\n                connections.delete(ws);\n            }\n        });\n    }\n    close() {\n        __classPrivateFieldGet(this, _WebsocketServer_connections, \"f\").forEach((_, ws) => ws.end(websocket_close_codes_1.default.CLOSE_NORMAL, \"Server closed by client\"));\n    }\n}\nexports.default = WebsocketServer;\n_WebsocketServer_connections = new WeakMap();\n//# sourceMappingURL=ws-server.js.map","var map = {\n\t\"./uws_darwin_arm64_108.node\": 632,\n\t\"./uws_darwin_arm64_83.node\": 633,\n\t\"./uws_darwin_arm64_93.node\": 634,\n\t\"./uws_darwin_x64_108.node\": 635,\n\t\"./uws_darwin_x64_83.node\": 636,\n\t\"./uws_darwin_x64_93.node\": 637,\n\t\"./uws_linux_arm64_108.node\": 638,\n\t\"./uws_linux_arm64_83.node\": 639,\n\t\"./uws_linux_arm64_93.node\": 640,\n\t\"./uws_linux_x64_108.node\": 641,\n\t\"./uws_linux_x64_83.node\": 642,\n\t\"./uws_linux_x64_93.node\": 643,\n\t\"./uws_win32_x64_108.node\": 644,\n\t\"./uws_win32_x64_83.node\": 645,\n\t\"./uws_win32_x64_93.node\": 646\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 910;","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetConnector = exports.DefaultOptionsByName = exports.DefaultFlavor = exports.FilecoinFlavorName = exports.EthereumFlavorName = void 0;\nconst ethereum_1 = require(\"@ganache/ethereum\");\nconst ethereum_options_1 = require(\"@ganache/ethereum-options\");\nconst filecoin_options_1 = require(\"@ganache/filecoin-options\");\nconst colors_1 = require(\"@ganache/colors\");\nconst chalk_1 = __importDefault(require(\"chalk\"));\n// we need \"@ganache/options\" in order for TS to properly infer types for `DefaultOptionsByName`\nrequire(\"@ganache/options\");\nconst NEED_HELP = \"Need help? Reach out to the Truffle community at\";\nconst COMMUNITY_LINK = \"https://trfl.io/support\";\nexports.EthereumFlavorName = \"ethereum\";\nexports.FilecoinFlavorName = \"filecoin\";\nexports.DefaultFlavor = exports.EthereumFlavorName;\nexports.DefaultOptionsByName = {\n    [exports.EthereumFlavorName]: ethereum_options_1.EthereumDefaults,\n    [exports.FilecoinFlavorName]: filecoin_options_1.FilecoinDefaults\n};\nfunction GetConnector(flavor, providerOptions, executor) {\n    if (flavor === exports.DefaultFlavor) {\n        return new ethereum_1.Connector(providerOptions, executor);\n    }\n    try {\n        switch (flavor) {\n            case exports.FilecoinFlavorName: {\n                flavor = \"@ganache/filecoin\";\n                // TODO: remove the `typeof f.default != \"undefined\" ? ` check once the\n                // published filecoin plugin is updated to\n                const f = eval(\"require\")(flavor);\n                const Connector = typeof f.default != \"undefined\" ? f.default.Connector : f.Connector;\n                // @ts-ignore\n                return new Connector(providerOptions, executor);\n            }\n            default: {\n                // for future plugin compat\n                const { Connector } = require(flavor);\n                return new Connector(providerOptions, executor);\n            }\n        }\n    }\n    catch (e) {\n        if (e.message.includes(`Cannot find module '${flavor}'`)) {\n            // we print and exit rather than throw to prevent webpack output from being\n            // spat out for the line number\n            console.warn((0, chalk_1.default) `\\n\\n{red.bold ERROR:} Could not find Ganache flavor \"{bold filecoin}\" (${flavor}); ` +\n                `it probably\\nneeds to be installed.\\n` +\n                ` ▸ if you're using Ganache as a library run: \\n` +\n                (0, chalk_1.default) `   {blue.bold $ npm install ${flavor}}\\n` +\n                ` ▸ if you're using Ganache as a CLI run: \\n` +\n                (0, chalk_1.default) `   {blue.bold $ npm install --global ${flavor}}\\n\\n` +\n                (0, chalk_1.default) `{hex(\"${colors_1.TruffleColors.porsche}\").bold ${NEED_HELP}}\\n` +\n                (0, chalk_1.default) `{hex(\"${colors_1.TruffleColors.turquoise}\") ${COMMUNITY_LINK}}\\n\\n`);\n            process.exit(1);\n        }\n        else {\n            throw e;\n        }\n    }\n}\nexports.GetConnector = GetConnector;\n//# sourceMappingURL=index.js.map","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 901;\nmodule.exports = webpackEmptyContext;","export const debug = () => () => {};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/base\"), exports);\n__exportStar(require(\"./src/exclusive\"), exports);\n__exportStar(require(\"./src/definition\"), exports);\n__exportStar(require(\"./src/create\"), exports);\n__exportStar(require(\"./src/constants\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=base.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeterministicSeedPhrase = void 0;\n// Don't change! We need maintain original determinism since the beginning\nexports.DeterministicSeedPhrase = \"TestRPC is awesome!\";\n//# sourceMappingURL=constants.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _OptionsConfig_defaults, _OptionsConfig_namespaces;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OptionsConfig = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst checkForConflicts = (name, namespace, suppliedOptions, conflicts) => {\n    if (!conflicts)\n        return;\n    for (const conflict of conflicts) {\n        if (suppliedOptions.has(conflict)) {\n            throw new Error(`Values for both \"${namespace}.${name}\" and ` +\n                `\"${namespace}.${conflict}\" cannot ` +\n                `be specified; they are mutually exclusive.`);\n        }\n    }\n};\nfunction fill(defaults, options, target, namespace) {\n    const def = defaults[namespace];\n    const config = (target[namespace] = target[namespace] || {});\n    const flavor = options.flavor;\n    const suppliedOptions = new Set();\n    const keys = Object.keys(def);\n    if ((0, utils_1.hasOwn)(options, namespace)) {\n        const namespaceOptions = options[namespace];\n        for (let i = 0, l = keys.length; i < l; i++) {\n            const key = keys[i];\n            const propDefinition = def[key];\n            let value = namespaceOptions[key];\n            if (value !== undefined) {\n                const normalized = propDefinition.normalize(namespaceOptions[key]);\n                if (normalized !== undefined) {\n                    checkForConflicts(key, namespace, suppliedOptions, propDefinition.conflicts);\n                    config[key] = normalized;\n                    suppliedOptions.add(key);\n                }\n            }\n            else {\n                const legacyName = propDefinition.legacyName || key;\n                value = options[legacyName];\n                if (value !== undefined) {\n                    const normalized = propDefinition.normalize(value);\n                    if (normalized !== undefined) {\n                        checkForConflicts(key, namespace, suppliedOptions, propDefinition.conflicts);\n                        config[key] = normalized;\n                        suppliedOptions.add(key);\n                    }\n                }\n                else if ((0, utils_1.hasOwn)(propDefinition, \"default\")) {\n                    config[key] = propDefinition.default(config, flavor);\n                }\n            }\n        }\n    }\n    else {\n        for (let i = 0, l = keys.length; i < l; i++) {\n            const key = keys[i];\n            const propDefinition = def[key];\n            const legacyName = propDefinition.legacyName || key;\n            const value = options[legacyName];\n            if (value !== undefined) {\n                const normalized = propDefinition.normalize(value);\n                if (normalized !== undefined) {\n                    checkForConflicts(key, namespace, suppliedOptions, propDefinition.conflicts);\n                    config[key] = normalized;\n                    suppliedOptions.add(key);\n                }\n            }\n            else if ((0, utils_1.hasOwn)(propDefinition, \"default\")) {\n                config[key] = propDefinition.default(config, flavor);\n            }\n        }\n    }\n}\nclass OptionsConfig {\n    constructor(defaults) {\n        _OptionsConfig_defaults.set(this, void 0);\n        _OptionsConfig_namespaces.set(this, void 0);\n        __classPrivateFieldSet(this, _OptionsConfig_defaults, defaults, \"f\");\n        __classPrivateFieldSet(this, _OptionsConfig_namespaces, Object.keys(defaults), \"f\");\n    }\n    normalize(options) {\n        const defaults = __classPrivateFieldGet(this, _OptionsConfig_defaults, \"f\");\n        const out = {};\n        __classPrivateFieldGet(this, _OptionsConfig_namespaces, \"f\").forEach(namespace => {\n            fill(defaults, options, out, namespace);\n        });\n        return out;\n    }\n}\nexports.OptionsConfig = OptionsConfig;\n_OptionsConfig_defaults = new WeakMap(), _OptionsConfig_namespaces = new WeakMap();\n//# sourceMappingURL=create.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//#endregion Definition helpers\n//# sourceMappingURL=definition.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//#endregion\n//# sourceMappingURL=exclusive.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _PromiseQueue_queue, _PromiseQueue_tryResolve, _PromiseQueue_tryResolveChain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst entry_1 = __importDefault(require(\"./src/entry\"));\nconst emitteryMethods = [\"emit\", \"once\"];\n/**\n * Creates a FIFO queue that ensures promises are _resolved_ in the order\n * they were added.\n *\n * This is different than a FIFO queue that _executes_ functions that\n * return promises; this queue is for the promises themselves.\n *\n * @example\n * ```javascript\n * const queue = new PromiseQueue();\n *\n * const slow = new Promise(resolve => setTimeout(resolve, 1000, \"slow\"));\n * const fast = Promise.resolve(\"fast\");\n *\n * await Promise.race([\n *   queue.add(slow),\n *   queue.add(fast)\n * ]); // returns \"slow\"\n *\n * // Additionally, the queued promise chain can be cleared via `queue.clear(value)`.\n * // This will cause the chain of promises to all resolve immediately with the\n * // given value. *\n * //\n * // * note: whatever the promise starting doing when it was created will still\n * // happen, no promises are aborted; rather, the return value is ignored.\n * ```\n */\nlet PromiseQueue = class PromiseQueue {\n    constructor() {\n        // TODO(perf): a singly linked list is probably a better option here\n        _PromiseQueue_queue.set(this, []);\n        _PromiseQueue_tryResolve.set(this, (queue, entry) => {\n            // if this is now the highest priority entry, resolve the outer\n            // Promise\n            if (entry === queue[0]) {\n                queue.shift();\n                entry.resolve(entry.value);\n                // then try resolving the rest\n                __classPrivateFieldGet(this, _PromiseQueue_tryResolveChain, \"f\").call(this, queue);\n            }\n            else {\n                entry.resolved = true;\n            }\n        });\n        /**\n         * Removes all _resolved_ promises from the front of the chain of promises.\n         */\n        _PromiseQueue_tryResolveChain.set(this, (queue) => {\n            let first = queue[0];\n            while (first && first.resolved) {\n                queue.shift();\n                first.resolve(first.value);\n                first = queue[0];\n            }\n            // if there is nothing left to do emit `\"idle\"`\n            if (queue.length === 0) {\n                this.emit(\"idle\");\n            }\n        });\n    }\n    /**\n     * Returns true if there are promises pending in the queue\n     */\n    isBusy() {\n        return __classPrivateFieldGet(this, _PromiseQueue_queue, \"f\").length !== 0;\n    }\n    /**\n     * Adds the promise to the end of the queue.\n     * @param promise -\n     * @returns a promise that resolves with the given promise's result. If the\n     * queue was `clear`ed before the promise could be shifted off the return\n     * value will be the `value` passed to `clear`.\n     */\n    add(promise) {\n        const queue = __classPrivateFieldGet(this, _PromiseQueue_queue, \"f\");\n        const entry = new entry_1.default(promise, queue, __classPrivateFieldGet(this, _PromiseQueue_tryResolve, \"f\"));\n        queue.push(entry);\n        return entry.promise;\n    }\n    /**\n     * Clears all promises from the queue and sets their resolved values to the\n     * given value.\n     */\n    clear(value) {\n        // remove all entrys from the queue and mark them.\n        const cancelledQueue = __classPrivateFieldGet(this, _PromiseQueue_queue, \"f\").splice(0);\n        cancelledQueue.forEach(entry => {\n            entry.queue = cancelledQueue;\n            entry.value = value;\n        });\n    }\n};\n_PromiseQueue_queue = new WeakMap(), _PromiseQueue_tryResolve = new WeakMap(), _PromiseQueue_tryResolveChain = new WeakMap();\nPromiseQueue = __decorate([\n    emittery_1.default.mixin(Symbol.for(\"emittery\"), emitteryMethods)\n], PromiseQueue);\nexports.default = PromiseQueue;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Entry {\n    constructor(promise, queue, onSetteled) {\n        this.resolved = false;\n        this.value = promise;\n        this.queue = queue;\n        this.onSetteled = onSetteled;\n        const _onSetteled = () => this.onSetteled(this.queue, this);\n        promise.then(_onSetteled, _onSetteled);\n        this.promise = new Promise(resolve => {\n            this.resolve = resolve;\n        });\n    }\n}\nexports.default = Entry;\n//# sourceMappingURL=entry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encodeLength = exports.encode = exports.digest = exports.encodeRange = exports.getLength = void 0;\nconst rlp_1 = require(\"rlp\");\nObject.defineProperty(exports, \"getLength\", { enumerable: true, get: function () { return rlp_1.getLength; } });\nconst utils_1 = require(\"@ganache/utils\");\n/**\n * Begin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\n * finish encoding.\n *\n * @param input -\n **/\nfunction encodeRange(items, start, length) {\n    let count = 0;\n    const end = start + length;\n    const output = [];\n    for (var i = start; i < end; i++) {\n        const item = items[i];\n        const encoded = encode(item);\n        count += encoded.length;\n        output.push(encoded);\n    }\n    return { length: count, output };\n}\nexports.encodeRange = encodeRange;\n/**\n * Finishes encoding started by `encodeRange`.\n *\n * @param ranges -\n * @returns returns a Buffer of encoded data\n */\nfunction digest(ranges, length) {\n    const encodedLength = encodeLength(length, 192);\n    const lengthEncodedLength = encodedLength.length;\n    const buf = Buffer.allocUnsafe(lengthEncodedLength + length);\n    encodedLength.copy(buf, 0, 0, lengthEncodedLength);\n    let offset = lengthEncodedLength;\n    for (let i = 0, l = ranges.length; i < l; i++) {\n        const range = ranges[i];\n        for (let j = 0, m = range.length; j < m; j++) {\n            const entry = range[j];\n            const size = entry.length;\n            entry.copy(buf, offset, 0, size);\n            offset += size;\n        }\n    }\n    return buf;\n}\nexports.digest = digest;\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * @param input -\n * @returns returns a Buffer of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        let length = 0;\n        const output = [];\n        for (let i = 0, l = input.length; i < l; i++) {\n            const enc = encode(input[i]);\n            length += enc.length;\n            output.push(enc);\n        }\n        const buf = Buffer.concat(output, length);\n        const encodedLength = encodeLength(length, 192);\n        return Buffer.concat([encodedLength, buf], encodedLength.length + length);\n    }\n    else {\n        if (input == null) {\n            const buf = Buffer.allocUnsafe(1);\n            buf[0] = 128;\n            return buf;\n        }\n        else {\n            const length = input.length;\n            if (length === 1 && input[0] < 128) {\n                return input;\n            }\n            else {\n                const encLength = encodeLength(length, 128);\n                return Buffer.concat([encLength, input], encLength.length + length);\n            }\n        }\n    }\n}\nexports.encode = encode;\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        const buf = Buffer.allocUnsafe(1);\n        buf[0] = len + offset;\n        return buf;\n    }\n    else {\n        const hexLength = (0, utils_1.uintToBuffer)(len);\n        const lLength = hexLength.length;\n        const firstByte = (0, utils_1.uintToBuffer)(offset + 55 + lLength);\n        return Buffer.concat([firstByte, hexLength], firstByte.length + lLength);\n    }\n}\nexports.encodeLength = encodeLength;\nfunction decode(input) {\n    return (0, rlp_1.decode)(input);\n}\nexports.decode = decode;\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*!\n * @ganache/secp256k1\n *\n * @author David Murdoch\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SECP256K1_MAX_PRIVATE_KEY_DIV_2 = exports.SECP256K1_N = void 0;\nconst path_1 = require(\"path\");\nexports.SECP256K1_N = 0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141n;\nexports.SECP256K1_MAX_PRIVATE_KEY_DIV_2 = 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0n; // (SECP256K1_N - 1n) / 2n\nlet secp256k1;\ntry {\n    // TODO: find a better way :-)\n    // use `eval` to make `ganache`'s webpack ignore this\n    const nodeRequire = eval(\"require\");\n    const path = nodeRequire.resolve(\"secp256k1/package.json\");\n    const dir = (0, path_1.dirname)(path);\n    const nodeGypBuild = require(\"node-gyp-build\");\n    // load native secp256k1\n    const { Secp256k1 } = nodeGypBuild(dir);\n    secp256k1 = new Secp256k1();\n}\ncatch {\n    // on error use the JS fallback\n    secp256k1 = require(\"secp256k1/lib/elliptic\");\n}\nexports.default = secp256k1;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PromiEvent = exports.JsonRpcErrorCode = exports.makeResponse = exports.makeRequest = exports.makeError = exports.JsonRpcType = void 0;\n__exportStar(require(\"./src/types\"), exports);\n__exportStar(require(\"./src/utils\"), exports);\nvar json_rpc_1 = require(\"./src/things/json-rpc\");\nObject.defineProperty(exports, \"JsonRpcType\", { enumerable: true, get: function () { return json_rpc_1.JsonRpcType; } });\n__exportStar(require(\"./src/things/subscription\"), exports);\n__exportStar(require(\"./src/things/json-rpc/json-rpc-quantity\"), exports);\n__exportStar(require(\"./src/things/json-rpc/json-rpc-data\"), exports);\nvar jsonrpc_1 = require(\"./src/things/jsonrpc\");\nObject.defineProperty(exports, \"makeError\", { enumerable: true, get: function () { return jsonrpc_1.makeError; } });\nObject.defineProperty(exports, \"makeRequest\", { enumerable: true, get: function () { return jsonrpc_1.makeRequest; } });\nObject.defineProperty(exports, \"makeResponse\", { enumerable: true, get: function () { return jsonrpc_1.makeResponse; } });\nObject.defineProperty(exports, \"JsonRpcErrorCode\", { enumerable: true, get: function () { return jsonrpc_1.JsonRpcErrorCode; } });\nvar promievent_1 = require(\"./src/things/promievent\");\nObject.defineProperty(exports, \"PromiEvent\", { enumerable: true, get: function () { return __importDefault(promievent_1).default; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBigIntBE = exports.toBufferBE = void 0;\nvar bigint_buffer_1 = require(\"@trufflesuite/bigint-buffer\");\nObject.defineProperty(exports, \"toBufferBE\", { enumerable: true, get: function () { return bigint_buffer_1.toBufferBE; } });\nObject.defineProperty(exports, \"toBigIntBE\", { enumerable: true, get: function () { return bigint_buffer_1.toBigIntBE; } });\n//# sourceMappingURL=common.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcType = void 0;\nvar json_rpc_base_types_1 = require(\"./json-rpc-base-types\");\nObject.defineProperty(exports, \"JsonRpcType\", { enumerable: true, get: function () { return json_rpc_base_types_1.BaseJsonRpcType; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseAndValidateStringInput = exports.parseAndValidateBigIntInput = exports.parseAndValidateNumberInput = void 0;\nconst bigint_to_buffer_1 = require(\"../../utils/bigint-to-buffer\");\nconst uint_to_buffer_1 = require(\"../../utils/uint-to-buffer\");\nconst BUFFER_EMPTY = Buffer.allocUnsafe(0);\n/**\n * Parse and validate a {@link number} to {@link Buffer} as internal representation for a JSON-RPC data type.\n * @param {number} input - must be a positive, finite integer, or null.\n * @returns {Buffer}\n */\nfunction parseAndValidateNumberInput(input) {\n    if (input === 0) {\n        return BUFFER_EMPTY;\n    }\n    if (input < 0) {\n        throw new Error(\"Cannot wrap a negative value as a json-rpc type\");\n    }\n    if (input % 1) {\n        throw new Error(\"Cannot wrap a decimal as a json-rpc type\");\n    }\n    if (!isFinite(input)) {\n        throw new Error(`Cannot wrap a ${input} as a json-rpc type`);\n    }\n    return (0, uint_to_buffer_1.uintToBuffer)(input);\n}\nexports.parseAndValidateNumberInput = parseAndValidateNumberInput;\n/**\n * Parse and validate a {@link bigint} to {@link Buffer} as internal representation for a JSON-RPC data type.\n * @param  {bigint} input - must be a positive integer, or null.\n * @returns {Buffer}\n */\nfunction parseAndValidateBigIntInput(input) {\n    if (input === 0n) {\n        return BUFFER_EMPTY;\n    }\n    if (input < 0n) {\n        throw new Error(\"Cannot wrap a negative value as a json-rpc type\");\n    }\n    return (0, bigint_to_buffer_1.bigIntToBuffer)(input);\n}\nexports.parseAndValidateBigIntInput = parseAndValidateBigIntInput;\n/**\n * Parse and validate a {@link string} to {@link Buffer} as internal representation for a JSON-RPC data type.\n * @param  {string} input - must be a hex encoded integer prefixed with \"0x\".\n * @returns Buffer\n */\nfunction parseAndValidateStringInput(input) {\n    if (input.slice(0, 2).toLowerCase() !== \"0x\") {\n        throw new Error(`Cannot wrap string value \"${input}\" as a json-rpc type; strings must be prefixed with \"0x\".`);\n    }\n    let hexValue = input.slice(2);\n    // hexValue must be an even number of hexadecimal characters in order to correctly decode in Buffer.from\n    // see: https://nodejs.org/api/buffer.html#buffers-and-character-encodings\n    if (hexValue.length & 1) {\n        hexValue = `0${hexValue}`;\n    }\n    const byteLength = Math.ceil(input.length / 2 - 1);\n    const _buffer = Buffer.from(hexValue, \"hex\");\n    if (_buffer.length !== byteLength) {\n        // Buffer.from will return the result after encountering an input that does not conform to hexadecimal encoding.\n        // this means that an invalid input can never return a value with the expected bytelength.\n        throw new Error(`Cannot wrap string value \"${input}\" as a json-rpc type; the input value contains an invalid hex character.`);\n    }\n    return _buffer;\n}\nexports.parseAndValidateStringInput = parseAndValidateStringInput;\n//# sourceMappingURL=input-parsers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseJsonRpcType = void 0;\nconst input_parsers_1 = require(\"./input-parsers\");\nconst inspect = Symbol.for(\"nodejs.util.inspect.custom\");\nclass BaseJsonRpcType {\n    constructor(value) {\n        if (value == null) {\n            this.bufferValue = null;\n        }\n        else if (Buffer.isBuffer(value)) {\n            // empty buffer should be treated as null\n            this.bufferValue = value.length === 0 ? null : value;\n        }\n        else {\n            switch (typeof value) {\n                case \"string\":\n                    this.bufferValue = (0, input_parsers_1.parseAndValidateStringInput)(value);\n                    break;\n                case \"number\":\n                    this.bufferValue = (0, input_parsers_1.parseAndValidateNumberInput)(value);\n                    break;\n                case \"bigint\":\n                    this.bufferValue = (0, input_parsers_1.parseAndValidateBigIntInput)(value);\n                    break;\n                default:\n                    throw new Error(`Cannot wrap a \"${typeof value}\" as a json-rpc type`);\n            }\n        }\n    }\n    // used to make console.log debugging a little easier\n    [inspect](_depth, _options) {\n        return `[${this.constructor.name}] ${this.toString()}`;\n    }\n    toString() {\n        if (this.bufferValue == null) {\n            return null;\n        }\n        return `0x${this.bufferValue.toString(\"hex\")}`;\n    }\n    toBuffer() {\n        return this.bufferValue;\n    }\n    valueOf() {\n        return this.bufferValue;\n    }\n    toJSON() {\n        return this.toString();\n    }\n    isNull() {\n        return this.bufferValue == null;\n    }\n}\nexports.BaseJsonRpcType = BaseJsonRpcType;\n//# sourceMappingURL=json-rpc-base-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Data = void 0;\nconst json_rpc_base_types_1 = require(\"./json-rpc-base-types\");\nconst constants_1 = require(\"../../utils/constants\");\nclass Data extends json_rpc_base_types_1.BaseJsonRpcType {\n    constructor(value, _byteLength) {\n        super(value);\n        this._byteLength = _byteLength;\n        if (typeof value === \"bigint\") {\n            throw new Error(`Cannot create a ${typeof value} as a Data`);\n        }\n    }\n    toString(byteLength) {\n        const length = byteLength || this._byteLength;\n        if (this.bufferValue == null) {\n            return \"0x\";\n        }\n        if (length === undefined) {\n            return super.toString();\n        }\n        const strValue = this.bufferValue.toString(\"hex\");\n        return `0x${Data.stringToFixedByteLength(strValue, length)}`;\n    }\n    toBuffer(byteLength) {\n        if (this.bufferValue == null) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        const length = byteLength || this._byteLength;\n        if (length == undefined || length === this.bufferValue.length) {\n            return this.bufferValue;\n        }\n        return Data.bufferToFixedByteLength(this.bufferValue, length);\n    }\n    static from(value, byteLength) {\n        return new Data(value, byteLength);\n    }\n    static stringToFixedByteLength(value, byteLength) {\n        const desiredCharLength = byteLength * 2;\n        if (desiredCharLength === value.length) {\n            return value;\n        }\n        const padCharCount = desiredCharLength - value.length;\n        let fixedLengthValue;\n        if (padCharCount > 0) {\n            fixedLengthValue = \"0\".repeat(padCharCount) + value;\n        }\n        else {\n            fixedLengthValue = value.slice(0, desiredCharLength);\n        }\n        return fixedLengthValue;\n    }\n    static bufferToFixedByteLength(value, byteLength) {\n        if (byteLength === value.length) {\n            return value;\n        }\n        const fixedLengthValue = Buffer.allocUnsafe(byteLength);\n        const sourceStart = 0;\n        const targetStart = value.length > byteLength ? 0 : byteLength - value.length;\n        if (targetStart > 0) {\n            fixedLengthValue.fill(0, 0, targetStart);\n        }\n        value.copy(fixedLengthValue, targetStart, sourceStart, byteLength);\n        return fixedLengthValue;\n    }\n    static toBuffer(value, byteLength) {\n        return Data.from(value, byteLength).toBuffer();\n    }\n    static toString(value, byteLength) {\n        return Data.from(value, byteLength).toString();\n    }\n}\nexports.Data = Data;\nData.Empty = Data.from(constants_1.BUFFER_EMPTY);\n//# sourceMappingURL=json-rpc-data.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Quantity = void 0;\nconst buffer_to_bigint_1 = require(\"../../utils/buffer-to-bigint\");\nconst json_rpc_base_types_1 = require(\"./json-rpc-base-types\");\nconst constants_1 = require(\"../../utils/constants\");\nclass Quantity extends json_rpc_base_types_1.BaseJsonRpcType {\n    constructor(value, nullable) {\n        super(value);\n        this._nullable = false;\n        if (value === \"0x\") {\n            throw new Error('Cannot wrap \"0x\" as a json-rpc Quantity type; strings must contain at least one hexadecimal character.');\n        }\n        this._nullable = nullable;\n    }\n    static from(value, nullable = false) {\n        if (value instanceof Quantity)\n            return value;\n        return new Quantity(value, nullable);\n    }\n    toString() {\n        if (this.bufferValue == null) {\n            return this._nullable ? null : Quantity.ZERO_VALUE_STRING;\n        }\n        const firstNonZeroByte = this.findFirstNonZeroByteIndex();\n        // bufferValue is empty, or contains only 0 bytes\n        if (firstNonZeroByte === this.bufferValue.length) {\n            return Quantity.ZERO_VALUE_STRING;\n        }\n        let value = this.bufferValue.toString(\"hex\", firstNonZeroByte);\n        // only need to check the first char, as we have already skipped 0 bytes in call to this.bufferValue.toString().\n        if (value[0] === \"0\") {\n            value = value.slice(1);\n        }\n        return `0x${value}`;\n    }\n    toBuffer() {\n        if (this.bufferValue == null) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        const firstNonZeroByte = this.findFirstNonZeroByteIndex();\n        if (firstNonZeroByte > 0) {\n            return this.bufferValue.subarray(firstNonZeroByte);\n        }\n        else {\n            return this.bufferValue;\n        }\n    }\n    toBigInt() {\n        if (this.bufferValue == null) {\n            return this._nullable ? null : 0n;\n        }\n        if (this.bufferValue.length === 0) {\n            return 0n;\n        }\n        return (0, buffer_to_bigint_1.bufferToBigInt)(this.bufferValue);\n    }\n    toNumber() {\n        if (this.bufferValue == null) {\n            return this._nullable ? null : 0;\n        }\n        const firstNonZeroByte = this.findFirstNonZeroByteIndex();\n        const length = this.bufferValue.length - firstNonZeroByte;\n        if (length === 0) {\n            return 0;\n        }\n        let result;\n        // buffer.readUIntBE only supports up to 48 bits, so if larger then we need to convert to bigint first\n        if (length > 6) {\n            const trimmedBuffer = firstNonZeroByte === 0\n                ? this.bufferValue\n                : this.bufferValue.subarray(firstNonZeroByte, length);\n            result = Number((0, buffer_to_bigint_1.bufferToBigInt)(trimmedBuffer));\n            if (!Number.isSafeInteger(result)) {\n                console.warn(`0x${this.bufferValue.toString(\"hex\")} is too large - the maximum safe integer value is 0${Number.MAX_SAFE_INTEGER.toString(16)}`);\n            }\n        }\n        else {\n            result = this.bufferValue.readUIntBE(firstNonZeroByte, length);\n        }\n        return result;\n    }\n    valueOf() {\n        if (this.bufferValue == null) {\n            return null;\n        }\n        else {\n            return this.toBigInt();\n        }\n    }\n    findFirstNonZeroByteIndex() {\n        let firstNonZeroByte = 0;\n        for (firstNonZeroByte = 0; firstNonZeroByte < this.bufferValue.length; firstNonZeroByte++) {\n            if (this.bufferValue[firstNonZeroByte] !== 0)\n                break;\n        }\n        return firstNonZeroByte;\n    }\n    static toBuffer(value, nullable) {\n        return Quantity.from(value, nullable).toBuffer();\n    }\n    static toString(value, nullable) {\n        return Quantity.from(value, nullable).toString();\n    }\n    static toNumber(value, nullable) {\n        return Quantity.from(value, nullable).toNumber();\n    }\n    static toBigInt(value, nullable) {\n        return Quantity.from(value, nullable).toBigInt();\n    }\n}\nexports.Quantity = Quantity;\nQuantity.Empty = Quantity.from(constants_1.BUFFER_EMPTY, true);\nQuantity.Zero = Quantity.from(constants_1.BUFFER_ZERO);\nQuantity.One = Quantity.from(1);\nQuantity.Gwei = Quantity.from(1000000000);\nQuantity.ZERO_VALUE_STRING = \"0x0\";\nexports.default = Quantity;\n//# sourceMappingURL=json-rpc-quantity.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcErrorCode = exports.makeError = exports.makeResponse = exports.makeRequest = void 0;\nconst jsonrpc = \"2.0\";\nconst makeRequest = (json) => {\n    return {\n        id: json.id,\n        jsonrpc,\n        method: json.method,\n        params: json.params\n    };\n};\nexports.makeRequest = makeRequest;\nconst makeResponse = (id, result) => {\n    return {\n        id,\n        jsonrpc,\n        result\n    };\n};\nexports.makeResponse = makeResponse;\nconst makeError = (id, error, result) => {\n    // Error objects are weird, `message` isn't included in the property names,\n    // so it is pulled out separately.\n    const details = { message: error.message };\n    Object.getOwnPropertyNames(error).forEach(name => {\n        if (typeof name === \"string\") {\n            details[name] = error[name];\n        }\n    });\n    if (typeof details.code !== \"number\") {\n        details.code = -32700; // JSON-RPC Parse error\n    }\n    if (result !== undefined) {\n        return {\n            id,\n            jsonrpc,\n            error: details,\n            result\n        };\n    }\n    else {\n        return {\n            id,\n            jsonrpc,\n            error: details\n        };\n    }\n};\nexports.makeError = makeError;\nvar JsonRpcErrorCode;\n(function (JsonRpcErrorCode) {\n    /**\n     * Invalid JSON was received by the server.\n     * An error occurred on the server while parsing the JSON text.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"PARSE_ERROR\"] = -32700] = \"PARSE_ERROR\";\n    /**\n     * The JSON sent is not a valid Request object.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INVALID_REQUEST\"] = -32600] = \"INVALID_REQUEST\";\n    /**\n     * The method does not exist / is not available.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"METHOD_NOT_FOUND\"] = -32601] = \"METHOD_NOT_FOUND\";\n    /**\n     * Invalid method parameter(s).\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INVALID_PARAMS\"] = -32602] = \"INVALID_PARAMS\";\n    /**\n     * Internal JSON-RPC error.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INTERNAL_ERROR\"] = -32603] = \"INTERNAL_ERROR\";\n    /**\n     * Missing or invalid parameters\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INVALID_INPUT\"] = -32000] = \"INVALID_INPUT\";\n    /**\n     * Transaction creation failed\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"TRANSACTION_REJECTED\"] = -32003] = \"TRANSACTION_REJECTED\";\n    /**\n     * \tMethod is not implemented\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"METHOD_NOT_SUPPORTED\"] = -32004] = \"METHOD_NOT_SUPPORTED\";\n    /**\n     * \tRequest exceeds defined limit\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"LIMIT_EXCEEDED\"] = -32005] = \"LIMIT_EXCEEDED\";\n    /**\n     * Version of JSON-RPC protocol is not supported\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"JSON_RPC_VERSION_NOT_SUPPORTED\"] = -32006] = \"JSON_RPC_VERSION_NOT_SUPPORTED\";\n})(JsonRpcErrorCode = exports.JsonRpcErrorCode || (exports.JsonRpcErrorCode = {}));\n//# sourceMappingURL=jsonrpc.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar PromiEvent_1;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst emitteryMethods = [\n    \"clearListeners\",\n    \"once\",\n    \"on\",\n    \"emit\",\n    \"onAny\"\n];\n// A hack to fix Emittery's `mixin` type.\n// issue: https://github.com/sindresorhus/emittery/issues/79\nconst mixin = emittery_1.default.mixin.bind(emittery_1.default);\nlet PromiEvent = PromiEvent_1 = class PromiEvent extends Promise {\n    constructor(executor) {\n        super(executor);\n        /**\n         * Used to immediately clear all event listeners on the instance and prevent\n         * any additional binding or emission from the Emitter.\n         *\n         * Once disposed no listeners can be bound to this emitter.\n         *\n         * Note: `dispose` is pre-bound to the `this`, making it possible to pass the\n         * method around detached from it's context.\n         */\n        this.dispose = () => {\n            if (!this.clearListeners)\n                throw new Error(\"PromiEvent already disposed\");\n            this.clearListeners();\n            // Ensure that once disposed no listeners can be bound to this emitter.\n            const fn = () => {\n                throw new Error(\"PromiEvent bound after dispose\");\n            };\n            emitteryMethods\n                .filter(m => m !== \"emit\")\n                .forEach(methodName => {\n                Object.defineProperty(this, methodName, {\n                    enumerable: false,\n                    value: fn\n                });\n            });\n        };\n    }\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected - The callback to execute when the Promise is rejected.\n     * @returns A PromiEvent for the completion of the callback.\n     */\n    catch(onrejected) {\n        const prom = new PromiEvent_1((resolve, reject) => {\n            this.onAny((eventName, eventData) => {\n                return prom.emit(eventName, eventData);\n            });\n            const p = super.catch(onrejected);\n            p.then(resolve, reject);\n        });\n        return prom;\n    }\n    static resolve(value) {\n        return new PromiEvent_1(resolve => {\n            resolve(value);\n        });\n    }\n};\nPromiEvent = PromiEvent_1 = __decorate([\n    mixin(Symbol.for(\"emittery\"), emitteryMethods)\n], PromiEvent);\nexports.default = PromiEvent;\n//# sourceMappingURL=promievent.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Base implementation for an API.\n * All properties must be `async` callable or return a `Promise`\n */\nclass ApiBase {\n}\n//# sourceMappingURL=api.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=connector.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connector\"), exports);\n__exportStar(require(\"./provider\"), exports);\n__exportStar(require(\"./api\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=provider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bigIntToBuffer = void 0;\nconst common_1 = require(\"../common\");\nconst uint_to_buffer_1 = require(\"./uint-to-buffer\");\nconst allocUnsafe = Buffer.allocUnsafe;\nlet _bigIntToBuffer;\n/**\n * Returns the number of bytes contained in this given `value`.\n * @param value -\n */\nfunction bigIntByteLength(value) {\n    let length = 1;\n    while ((value >>= 8n))\n        length++;\n    return length;\n}\nconst MAX_SAFE_INTEGER = BigInt(Number.MAX_SAFE_INTEGER);\ntry {\n    // force fallback if only `toBufferBE` is missing (this can happen if toBufferBE isn't polyfilled for the browser,\n    // which, at the time of this writing... it isn't)\n    if (!common_1.toBufferBE)\n        throw new Error(\"Missing function `toBufferBE`!\");\n    _bigIntToBuffer = (value) => {\n        if (value <= MAX_SAFE_INTEGER) {\n            return (0, uint_to_buffer_1.uintToBuffer)(Number(value));\n        }\n        else {\n            const size = bigIntByteLength(value);\n            return (0, common_1.toBufferBE)(value, size);\n        }\n    };\n}\ncatch {\n    _bigIntToBuffer = (value) => {\n        if (value <= MAX_SAFE_INTEGER) {\n            // if this value can be handled as a JS number safely, convert it that way\n            return (0, uint_to_buffer_1.uintToBuffer)(Number(value));\n        }\n        else {\n            let length = bigIntByteLength(value);\n            const buf = allocUnsafe(length);\n            // process 1 byte at a time\n            do {\n                // truncate to right-most 32 bits and assign to buffer position `length`\n                buf[--length] = Number(value & 0xffffffffn);\n                // shift right-most byte off since we've used it\n                value >>= 8n;\n            } while (length);\n            return buf;\n        }\n    };\n}\n/**\n * Converts a bigint to a Buffer (Big Endian)\n */\nexports.bigIntToBuffer = _bigIntToBuffer;\n//# sourceMappingURL=bigint-to-buffer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferToBigInt = void 0;\nconst bigint_buffer_1 = require(\"@trufflesuite/bigint-buffer\");\n/**\n * note: this doesn't handle negative values\n * @param value - Buffer representation of a bigint, most-significant bit first (Big-endian)\n */\nfunction bufferToBigInt(value) {\n    // Parsed as BE.\n    // This doesn't handle negative values. We may need to add logic to handle\n    // it because it is possible values returned from the VM could be negative\n    // and stored in a buffer.\n    const length = value.byteLength;\n    if (length === 0) {\n        return null;\n    }\n    // Buffers that are 6 bytes or less can be converted with built-in methods\n    if (length <= 6) {\n        return BigInt(value.readUIntBE(0, length));\n    }\n    let view;\n    // Buffers that are 7 bytes need to be padded to 8 bytes\n    if (length === 7) {\n        const padded = new Uint8Array(8);\n        // set byte 0 to 0, and bytes 1-8 to the value's 7 bytes:\n        padded.set(value, 1);\n        view = new DataView(padded.buffer);\n    }\n    else if (length === 8) {\n        view = new DataView(value.buffer, value.byteOffset, length);\n    }\n    else {\n        // TODO: toBigIntBE is a native lib with no pure JS fallback yet.\n        return (0, bigint_buffer_1.toBigIntBE)(value);\n    }\n    return view.getBigUint64(0);\n}\nexports.bufferToBigInt = bufferToBigInt;\n//# sourceMappingURL=buffer-to-bigint.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferToMinHexKey = void 0;\nlet stringify;\nif (typeof Buffer.prototype.latin1Slice === \"function\") {\n    stringify = (buffer, start, end) => {\n        // this is just `buffer.toString(\"hex\")`, but it skips a bunch of checks\n        // that don't apply because our `start` and `end` just can't be out of\n        // bounds.\n        return buffer.hexSlice(start, end);\n    };\n}\nelse {\n    stringify = (buffer, start, end) => {\n        return buffer.slice(start, end).toString(\"hex\");\n    };\n}\n/**\n * Trims leading 0s from a buffer and returns a key representing the buffer's\n * trimmed value (`Buffer.from([0, 0, 12, 0])` => `1200`).\n *\n * @param buffer -\n */\nfunction bufferToMinHexKey(buffer) {\n    for (let i = 0, length = buffer.byteLength; i < length; i++) {\n        const value = buffer[i];\n        // once we find a non-zero value take the rest of the buffer as the key\n        if (value !== 0) {\n            if (i + 1 === length) {\n                // use a lookup table for single character lookups\n                return HEX_MAP[value];\n            }\n            else {\n                return stringify(buffer, i, length);\n            }\n        }\n    }\n    return \"\";\n}\nexports.bufferToMinHexKey = bufferToMinHexKey;\nconst HEX_MAP = [\n    \"00\",\n    \"01\",\n    \"02\",\n    \"03\",\n    \"04\",\n    \"05\",\n    \"06\",\n    \"07\",\n    \"08\",\n    \"09\",\n    \"0a\",\n    \"0b\",\n    \"0c\",\n    \"0d\",\n    \"0e\",\n    \"0f\",\n    \"10\",\n    \"11\",\n    \"12\",\n    \"13\",\n    \"14\",\n    \"15\",\n    \"16\",\n    \"17\",\n    \"18\",\n    \"19\",\n    \"1a\",\n    \"1b\",\n    \"1c\",\n    \"1d\",\n    \"1e\",\n    \"1f\",\n    \"20\",\n    \"21\",\n    \"22\",\n    \"23\",\n    \"24\",\n    \"25\",\n    \"26\",\n    \"27\",\n    \"28\",\n    \"29\",\n    \"2a\",\n    \"2b\",\n    \"2c\",\n    \"2d\",\n    \"2e\",\n    \"2f\",\n    \"30\",\n    \"31\",\n    \"32\",\n    \"33\",\n    \"34\",\n    \"35\",\n    \"36\",\n    \"37\",\n    \"38\",\n    \"39\",\n    \"3a\",\n    \"3b\",\n    \"3c\",\n    \"3d\",\n    \"3e\",\n    \"3f\",\n    \"40\",\n    \"41\",\n    \"42\",\n    \"43\",\n    \"44\",\n    \"45\",\n    \"46\",\n    \"47\",\n    \"48\",\n    \"49\",\n    \"4a\",\n    \"4b\",\n    \"4c\",\n    \"4d\",\n    \"4e\",\n    \"4f\",\n    \"50\",\n    \"51\",\n    \"52\",\n    \"53\",\n    \"54\",\n    \"55\",\n    \"56\",\n    \"57\",\n    \"58\",\n    \"59\",\n    \"5a\",\n    \"5b\",\n    \"5c\",\n    \"5d\",\n    \"5e\",\n    \"5f\",\n    \"60\",\n    \"61\",\n    \"62\",\n    \"63\",\n    \"64\",\n    \"65\",\n    \"66\",\n    \"67\",\n    \"68\",\n    \"69\",\n    \"6a\",\n    \"6b\",\n    \"6c\",\n    \"6d\",\n    \"6e\",\n    \"6f\",\n    \"70\",\n    \"71\",\n    \"72\",\n    \"73\",\n    \"74\",\n    \"75\",\n    \"76\",\n    \"77\",\n    \"78\",\n    \"79\",\n    \"7a\",\n    \"7b\",\n    \"7c\",\n    \"7d\",\n    \"7e\",\n    \"7f\",\n    \"80\",\n    \"81\",\n    \"82\",\n    \"83\",\n    \"84\",\n    \"85\",\n    \"86\",\n    \"87\",\n    \"88\",\n    \"89\",\n    \"8a\",\n    \"8b\",\n    \"8c\",\n    \"8d\",\n    \"8e\",\n    \"8f\",\n    \"90\",\n    \"91\",\n    \"92\",\n    \"93\",\n    \"94\",\n    \"95\",\n    \"96\",\n    \"97\",\n    \"98\",\n    \"99\",\n    \"9a\",\n    \"9b\",\n    \"9c\",\n    \"9d\",\n    \"9e\",\n    \"9f\",\n    \"a0\",\n    \"a1\",\n    \"a2\",\n    \"a3\",\n    \"a4\",\n    \"a5\",\n    \"a6\",\n    \"a7\",\n    \"a8\",\n    \"a9\",\n    \"aa\",\n    \"ab\",\n    \"ac\",\n    \"ad\",\n    \"ae\",\n    \"af\",\n    \"b0\",\n    \"b1\",\n    \"b2\",\n    \"b3\",\n    \"b4\",\n    \"b5\",\n    \"b6\",\n    \"b7\",\n    \"b8\",\n    \"b9\",\n    \"ba\",\n    \"bb\",\n    \"bc\",\n    \"bd\",\n    \"be\",\n    \"bf\",\n    \"c0\",\n    \"c1\",\n    \"c2\",\n    \"c3\",\n    \"c4\",\n    \"c5\",\n    \"c6\",\n    \"c7\",\n    \"c8\",\n    \"c9\",\n    \"ca\",\n    \"cb\",\n    \"cc\",\n    \"cd\",\n    \"ce\",\n    \"cf\",\n    \"d0\",\n    \"d1\",\n    \"d2\",\n    \"d3\",\n    \"d4\",\n    \"d5\",\n    \"d6\",\n    \"d7\",\n    \"d8\",\n    \"d9\",\n    \"da\",\n    \"db\",\n    \"dc\",\n    \"dd\",\n    \"de\",\n    \"df\",\n    \"e0\",\n    \"e1\",\n    \"e2\",\n    \"e3\",\n    \"e4\",\n    \"e5\",\n    \"e6\",\n    \"e7\",\n    \"e8\",\n    \"e9\",\n    \"ea\",\n    \"eb\",\n    \"ec\",\n    \"ed\",\n    \"ee\",\n    \"ef\",\n    \"f0\",\n    \"f1\",\n    \"f2\",\n    \"f3\",\n    \"f4\",\n    \"f5\",\n    \"f6\",\n    \"f7\",\n    \"f8\",\n    \"f9\",\n    \"fa\",\n    \"fb\",\n    \"fc\",\n    \"fd\",\n    \"fe\",\n    \"ff\"\n];\n//# sourceMappingURL=buffer-to-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KNOWN_CHAINIDS = exports.WEI = exports.BUFFER_8_ZERO = exports.BUFFER_32_ZERO = exports.BUFFER_ZERO = exports.BUFFER_EMPTY = exports.ACCOUNT_ZERO = exports.BUFFER_256_ZERO = void 0;\nexports.BUFFER_256_ZERO = Buffer.allocUnsafe(256).fill(0);\nexports.ACCOUNT_ZERO = exports.BUFFER_256_ZERO.slice(0, 20);\nexports.BUFFER_EMPTY = Buffer.allocUnsafe(0);\nexports.BUFFER_ZERO = exports.BUFFER_256_ZERO.slice(0, 1);\nexports.BUFFER_32_ZERO = exports.BUFFER_256_ZERO.slice(0, 32);\nexports.BUFFER_8_ZERO = exports.BUFFER_256_ZERO.slice(0, 8);\nexports.WEI = 1000000000000000000n;\nexports.KNOWN_CHAINIDS = new Set([1, 3, 4, 5, 42, 11155111]);\n//# sourceMappingURL=constants.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Executor_requestCoordinator;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Executor = void 0;\nconst has_own_1 = require(\"./has-own\");\nclass Executor {\n    /**\n     * The Executor handles execution of methods on the given API\n     */\n    constructor(requestCoordinator) {\n        _Executor_requestCoordinator.set(this, void 0);\n        __classPrivateFieldSet(this, _Executor_requestCoordinator, requestCoordinator, \"f\");\n    }\n    /**\n     * Executes the method with the given methodName on the API\n     * @param methodName - The name of the JSON-RPC method to execute.\n     * @param params - The params to pass to the JSON-RPC method.\n     */\n    execute(api, methodName, params) {\n        // The methodName is user-entered data and can be all sorts of weird hackery\n        // Make sure we only accept what we expect to avoid headache and heartache\n        if (typeof methodName === \"string\") {\n            // Only allow executing our *own* methods. We allow:\n            //  * functions added to the Instance by the class, e.g.,\n            //      class SomeClass {\n            //        method = () => {} // api.hasOwnProperty(\"method\") === true\n            //      }\n            //  * Or by the class' prototype:\n            //      class SomeClass {\n            //        method(){} // api.__proto__.hasOwnProperty(\"method\") === true\n            //      }\n            if (((0, has_own_1.hasOwn)(api.__proto__, methodName) && methodName !== \"constructor\") ||\n                (0, has_own_1.hasOwn)(api, methodName)) {\n                // cast methodName from `KnownKeys<T> & string` back to KnownKeys<T> so our return type isn't weird.\n                const fn = api[methodName];\n                // just double check, in case a API breaks the rules and adds non-fns\n                // to their API interface.\n                if (typeof fn === \"function\") {\n                    // queue up this method for actual execution:\n                    return __classPrivateFieldGet(this, _Executor_requestCoordinator, \"f\").queue(fn, api, params);\n                }\n            }\n        }\n        throw new Error(`The method ${methodName} does not exist/is not available`);\n    }\n}\nexports.Executor = Executor;\n_Executor_requestCoordinator = new WeakMap();\n//# sourceMappingURL=executor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findInsertPosition = void 0;\n/**\n * AKA `upper_bound`\n *\n * The elements are compared using `comp`. The elements in the range must\n * already be sorted according to this same criterion (`comp`), or at least\n * partitioned with respect to val.\n *\n * The function optimizes the number of comparisons performed by comparing\n * non-consecutive elements of the sorted range.\n *\n * The index into the `array` returned by this function will always be greater than\n * the index of the last-occurrence of `val`.\n *\n * On average, logarithmic in the distance of the length of the array: Performs\n * approximately `log2(N)+1` element comparisons (where `N` is this length).\n *\n * @param array -\n * @param val - Value of the upper bound to search for in the range.\n * @param comp - A function that accepts two arguments (the first is always\n * `val`, and the second from the given `array`) and returns bool. The value\n * returned indicates whether the first argument is considered to go before the\n * second.\n *\n * @returns The index to the upper bound position for `val` in the range. If no\n * element in the range compares greater than `val`, the function returns\n * `array.length`.\n */\nfunction findInsertPosition(array, val, comp) {\n    // `count` tracks the number of elements that remain to be searched\n    let count = array.length;\n    // `insertPosition` tracks the best insert position for the element we know\n    // about _so far_\n    let insertPosition = 0;\n    // `offset` tracks the start position of the elements that remain to be\n    // searched\n    let offset = 0;\n    while (count > 0) {\n        // find the middle element between `offset` and `count`\n        const step = (count / 2) | 0; // ()`| 0` rounds towards 0)\n        offset += step;\n        // compare our val to the \"middle element\" (`array[offset]`)\n        if (!comp(val, array[offset])) {\n            // `val` should come _after_ the element at `array[offset]`.\n            //  * update our `insertPosition` to the index immediately after\n            //    `array[offset]`\n            //  * shrink our search range\n            // This narrows our search the elements to the right of `array[offset]`.\n            insertPosition = ++offset;\n            count -= step + 1;\n        }\n        else {\n            // `val` should come before the element at `array[offset]`:\n            // This narrows the search the elements to the left of `array[offset]`.\n            count = step;\n            offset = insertPosition;\n        }\n    }\n    return insertPosition;\n}\nexports.findInsertPosition = findInsertPosition;\n//# sourceMappingURL=find-insert-position.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasOwn = void 0;\nconst _hasOwn = {}.hasOwnProperty.call.bind({}.hasOwnProperty);\n/**\n * /**\n * Determines whether an object has a property with the specified name.\n *\n * Safe for use on user-supplied data.\n *\n * @param obj - The object that will be checked.\n * @param v - A property name.\n * @returns `true` if the object has a property with the specified name,\n * otherwise false.\n */\nconst hasOwn = (obj, prop) => {\n    return obj != null && _hasOwn(obj, prop);\n};\nexports.hasOwn = hasOwn;\n//# sourceMappingURL=has-own.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Heap = void 0;\nclass Heap {\n    /**\n     * Creates a priority-queue heap where the highest priority element,\n     * as determined by the `less` function, is at the tip/root of the heap.\n     * To read the highest priority element without removing it call peek(). To\n     * read and remove the element call `shift()`\n     * @param less - the comparator function\n     * @param refresher - the refresher function\n     */\n    constructor(less, refresher) {\n        this.length = 0;\n        this.array = [];\n        this.less = less;\n        this.refresher = refresher;\n    }\n    init(array) {\n        this.array = array;\n        const length = (this.length = array.length);\n        for (let i = ((length / 2) | 0) - 1; i >= 0;) {\n            this.down(i--, length);\n        }\n    }\n    /**\n     * Updates all entries by calling the Heap's `refresher` function for each\n     * item in the heap and then re-sorting.\n     * @param context -\n     */\n    /**\n     * Updates all entries by calling the Heap's `refresher` function for each\n     * item in the heap and then re-sorting.\n     * @param context -\n     */\n    refresh(context) {\n        const length = this.length;\n        const mid = (length / 2) | 0;\n        for (let i = mid; i < length; i++) {\n            this.refresher(this.array[i], context);\n        }\n        for (let i = mid - 1; i >= 0;) {\n            this.refresher(this.array[i], context);\n            this.down(i--, length);\n        }\n    }\n    /**\n     * Pushes a new element onto the heap\n     * @param value -\n     */\n    push(value) {\n        const i = this.length++;\n        this.array[i] = value;\n        this.up(i);\n    }\n    size() {\n        return this.length;\n    }\n    /**\n     * Return the current best element. Does not remove it\n     */\n    peek() {\n        return this.array[0];\n    }\n    clear() {\n        this.length = this.array.length = 0;\n    }\n    /**\n     * Removes and returns the element with the highest priority from the heap.\n     * The complexity is O(log n) where n = this.size().\n     * @returns the element with the highest priority. returns `undefined` if\n     * there are no more elements in the heap.\n     */\n    shift() {\n        const length = this.length;\n        // if we are empty or about to be empty...\n        if (length <= 1) {\n            if (length === 0)\n                return;\n            const element = this.array[0];\n            // finally, clear the array\n            this.clear();\n            return element;\n        }\n        // otherwise...\n        // remember the best element\n        const array = this.array;\n        const best = array[0];\n        const newLength = (this.length = length - 1);\n        // put our last element at the start of the heap\n        array[0] = array[newLength];\n        // then sort from the new first element to the second to last element\n        this.down(0, newLength);\n        return best;\n    }\n    /**\n     * Removes the highest priority element from the queue, replacing it with\n     * the new element. This is equivalent to, but faster than, calling\n     * `replace(0, newValue);`.\n     * If you call this on an empty heap (`this.size() === 0`) you may find\n     * unexpected behavior.\n     * @param newValue -\n     */\n    replaceBest(newValue) {\n        this.array[0] = newValue;\n        this.down(0, this.length);\n    }\n    /**\n     * Replaces the element at position `i` with the `newValue`. If the element at\n     * position `i` doesn't exist, or if `i < 0` or `i > this.size()` you may\n     * find unexpected behavior.\n     * @param i -\n     * @param newValue -\n     */\n    replace(i, newValue) {\n        this.array[i] = newValue;\n        this.fix(i);\n    }\n    /**\n     * Removes the element at position `i`.\n     * The complexity is O(log n) where n = this.size().\n     * @param i - the element to remove\n     */\n    remove(i) {\n        const newLength = --this.length;\n        if (newLength !== i) {\n            this.swap(i, newLength);\n            if (!this.down(i, newLength)) {\n                this.up(i);\n            }\n        }\n    }\n    /**\n     * Removes the element with the highest priority from the heap\n     * The complexity is O(log n) where n = this.size().\n     * @returns `true` when there are more elements in the queue, `false` when the\n     * last element was just removed. Calling `removeBest` when there are no more\n     * elements in the queue will return `true`. So don't do that.\n     */\n    removeBest() {\n        const array = this.array;\n        const length = this.length;\n        if (length === 1) {\n            // finally, clear the array\n            this.length = array.length = 0;\n            return false;\n        }\n        const newLength = --this.length;\n        // put our last element at the start of the heap\n        array[0] = array[newLength];\n        // then sort from the new first element to the second to last element\n        this.down(0, newLength);\n        return true;\n    }\n    /**\n     * Re-establishes the heap ordering after the element at index `i` changes\n     * its value. Changing the value of the element at index `i` and then\n     * calling fix is equivalent to, but faster than, calling\n     * `remove(i); push(newValue);`.\n     * The complexity is O(log n) where n = this.size().\n     * @param i -\n     */\n    fix(i) {\n        if (!this.down(i, this.length)) {\n            this.up(i);\n        }\n    }\n    up(j) {\n        const less = this.less.bind(null, this.array);\n        for (let i; (i = ((j - 1) / 2) | 0), i !== j && less(j, i); j = i) {\n            this.swap(i, j);\n        }\n    }\n    down(i0, l) {\n        const less = this.less.bind(null, this.array);\n        let i = i0;\n        for (let j1; (j1 = 2 * i + 1) < l;) {\n            let j = j1; // left child\n            let j2 = j1 + 1;\n            if (j2 < l && less(j2, j1)) {\n                j = j2; // = 2 * i + 2  // right child\n            }\n            if (!less(j, i)) {\n                break;\n            }\n            this.swap(i, j);\n            i = j;\n        }\n        return i > i0;\n    }\n    /**\n     * Swaps the elements in the heap\n     * @param i - The first element\n     * @param j - The second element\n     */\n    swap(i, j) {\n        const array = this.array;\n        const first = array[i];\n        array[i] = array[j];\n        array[j] = first;\n    }\n    /**\n     * Heap initialization helper for when you only know of a single item for the\n     * heap.\n     * @param item -\n     * @param less -\n     * @param refresher -\n     */\n    static from(item, less, refresher) {\n        const heap = new Heap(less, refresher);\n        heap.array = [item];\n        heap.length = 1;\n        return heap;\n    }\n}\nexports.Heap = Heap;\n//# sourceMappingURL=heap.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./bigint-to-buffer\"), exports);\n__exportStar(require(\"./buffer-to-bigint\"), exports);\n__exportStar(require(\"./executor\"), exports);\n__exportStar(require(\"./heap\"), exports);\n__exportStar(require(\"./request-coordinator\"), exports);\n__exportStar(require(\"./unref\"), exports);\n__exportStar(require(\"./has-own\"), exports);\n__exportStar(require(\"./uint-to-buffer\"), exports);\n__exportStar(require(\"./constants\"), exports);\n__exportStar(require(\"./buffer-to-key\"), exports);\n__exportStar(require(\"./keccak\"), exports);\n__exportStar(require(\"./find-insert-position\"), exports);\n__exportStar(require(\"./random-number-generator\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak = void 0;\nconst keccak_1 = __importDefault(require(\"keccak\"));\nconst RATE = 1088;\nconst CAPACITY = 512;\nconst instance = (0, keccak_1.default)(\"keccak256\");\n/**\n * keccak256, but faster if you use it a lot.\n * @param buffer -\n */\nfunction keccak(buffer) {\n    instance._state.absorb(buffer);\n    const digest = instance._state.squeeze(32);\n    // reset and remove result from memory\n    instance._state.initialize(RATE, CAPACITY);\n    // make this re-usable\n    instance._finalized = false;\n    return digest;\n}\nexports.keccak = keccak;\n//# sourceMappingURL=keccak.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RandomNumberGenerator = void 0;\nconst seedrandom_1 = __importDefault(require(\"seedrandom\"));\nclass RandomNumberGenerator {\n    // I was planning on using `state` here to restore the RNG\n    // from a saved state (via the db on run or upon a revert),\n    // but this functionality was postponed. I'm keeping the arg\n    // here as it still applies and is valid code.\n    // https://github.com/trufflesuite/ganache/issues/756\n    constructor(seed, state) {\n        if (typeof seed === \"string\" && typeof state === \"undefined\") {\n            this.rng = seedrandom_1.default.alea(seed, { state: true });\n        }\n        else if (typeof state === \"object\") {\n            // We can ignore seed even if it was provided.\n            // The user is reseeding the rng from a prior state,\n            // so let's initialize accordingly\n            this.rng = seedrandom_1.default.alea(\"\", { state });\n        }\n        else {\n            const entropy = Math.random() * Date.now();\n            this.rng = seedrandom_1.default.alea(`${entropy}`, { state: true });\n        }\n    }\n    getNumber(upperExclusiveBound = 1) {\n        // I believe this check may be a tiny bit faster than\n        // always multiplying by 1\n        if (upperExclusiveBound !== 1) {\n            return this.rng() * upperExclusiveBound;\n        }\n        else {\n            return this.rng();\n        }\n    }\n    getNumbers(length, upperExclusiveBound = 1) {\n        const numbers = [];\n        for (let i = 0; i < length; i++) {\n            numbers.push(this.getNumber(upperExclusiveBound));\n        }\n        return numbers;\n    }\n    getBuffer(length) {\n        return Buffer.from(this.getNumbers(length, 256));\n    }\n    state() {\n        return this.rng.state();\n    }\n}\nexports.RandomNumberGenerator = RandomNumberGenerator;\n//# sourceMappingURL=random-number-generator.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _RequestCoordinator_paused, _RequestCoordinator_process;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestCoordinator = void 0;\nconst noop = () => { };\n/**\n * Responsible for managing global concurrent requests.\n */\nclass RequestCoordinator {\n    /**\n     * Promise-based FIFO queue.\n     * @param limit - The number of requests that can be processed at a time.\n     * Default value is is no limit (`0`).\n     */\n    constructor(limit) {\n        /**\n         * The pending requests. You can't do anything with this array.\n         */\n        this.pending = [];\n        /**\n         * The number of tasks currently being processed.\n         */\n        this.runningTasks = 0;\n        _RequestCoordinator_paused.set(this, true);\n        /**\n         * Pause processing. This will *not* cancel any promises that are currently\n         * running.\n         */\n        this.pause = () => {\n            __classPrivateFieldSet(this, _RequestCoordinator_paused, true, \"f\");\n        };\n        /**\n         * Resume processing.\n         */\n        this.resume = () => {\n            __classPrivateFieldSet(this, _RequestCoordinator_paused, false, \"f\");\n            __classPrivateFieldGet(this, _RequestCoordinator_process, \"f\").call(this);\n        };\n        _RequestCoordinator_process.set(this, () => {\n            // if we aren't paused and the number of things we're processing is under\n            // our limit and we have things to process: do it!\n            while (!this.paused &&\n                this.pending.length > 0 &&\n                (!this.limit || this.runningTasks < this.limit)) {\n                const current = this.pending.shift();\n                this.runningTasks++;\n                current()\n                    // By now, we've resolved the fn's `value` by sending it to the parent scope.\n                    // But over here, we're also waiting for this fn's _value_ to settle _itself_ (it might be a promise) before\n                    // continuing through the `pending` queue. Because we wait for it again here, it could potentially throw here,\n                    // in which case we just need to catch it and throw the result away. We could probably use\n                    // `Promise.allSettled([current()]).finally` to do this instead of the `current().catch(noop).finally`. /shrug\n                    .catch(noop)\n                    .finally(() => {\n                    this.runningTasks--;\n                    __classPrivateFieldGet(this, _RequestCoordinator_process, \"f\").call(this);\n                });\n            }\n        });\n        /**\n         * Insert a new function into the queue.\n         */\n        this.queue = (fn, thisArgument, argumentsList) => {\n            return new Promise((resolve, reject) => {\n                // const executor is `async` to force the return value into a Promise.\n                const executor = async () => {\n                    try {\n                        const value = Reflect.apply(fn, thisArgument, argumentsList || []);\n                        resolve({ value });\n                        return value;\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                };\n                this.pending.push(executor);\n                __classPrivateFieldGet(this, _RequestCoordinator_process, \"f\").call(this);\n            });\n        };\n        this.limit = limit;\n    }\n    get paused() {\n        return __classPrivateFieldGet(this, _RequestCoordinator_paused, \"f\");\n    }\n}\nexports.RequestCoordinator = RequestCoordinator;\n_RequestCoordinator_paused = new WeakMap(), _RequestCoordinator_process = new WeakMap();\n//# sourceMappingURL=request-coordinator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uintToBuffer = void 0;\nconst MAX_UINT32 = 0xffffffff;\n/**\n * This is just Node's `Buffer.allocUnsafe`. I'm documenting it extra here to\n * draw attention to it. It is much faster the `Buffer.alloc(size)` because it\n * doesn't initialize its memory first. It's safe for us to use below because we\n * guarantee that we will fill every octet ourselves.\n *\n * Allocates a new buffer of {size} octets, leaving memory not initialized, so\n * the contents of the newly created Buffer are unknown and may contain\n * sensitive data.\n *\n * @param {number} - size count of octets to allocate\n */\nconst allocUnsafe = Buffer.allocUnsafe;\n/**\n * Converts positive whole numbers that are 32 bits of fewer to a Buffer. Any\n * more bits and who knows what will happen!?!1?!\n *\n * @param num - A positive whole number less than 33 bits wide, i.e. a uint32.\n * @returns an optimally sized buffer holding `num` in big-endian order (LSB is\n * the _last_ value in the Buffer)\n */\nfunction uint32ToBuf(num) {\n    let buf;\n    /** `lsb` holds the Least Significant *byte* of `num`. It *technically* holds\n     * all of `num`'s bytes but because of how UInt8Arrays (and thus Buffers)\n     * work, only the least significant byte of each value gets used. */\n    const lsb = num;\n    // shift the first 8 least signficant bits off current num, if it's non-zero\n    // our value contains at least 2 bytes!\n    if ((num >>>= 8)) {\n        /** `second` now holds the second most least significant byte in its\n         * \"first\" (right most) 8 bits */\n        const second = num;\n        // shift the next 8 least signficant bits off current num, if it's non-zero\n        // our value contains at least 3 bytes!\n        if ((num >>>= 8)) {\n            /** `third` now holds the third most least significant byte in its\n             * \"first\" (right most) 8 bits */\n            const third = num;\n            if ((num >>>= 8)) {\n                // since we have all 4 bytes, create a 4 byte Buffer and fill it with\n                // our values!\n                buf = allocUnsafe(4);\n                // `num` here is just what is left after shifting off the 3 other bytes\n                // like we did above\n                buf[0] = num;\n                buf[1] = third;\n                buf[2] = second;\n                buf[3] = lsb;\n            }\n            else {\n                // since we only have 3 bytes, create a 3 byte Buffer and fill it with\n                // our values!\n                buf = allocUnsafe(3);\n                buf[0] = third;\n                buf[1] = second;\n                buf[2] = lsb;\n            }\n        }\n        else {\n            // since we only have 2 bytes, create a 2 byte Buffer and fill it with\n            // our values!\n            buf = allocUnsafe(2);\n            buf[0] = second;\n            buf[1] = lsb;\n        }\n    }\n    else {\n        // We only have 1 byte, create a 1 byte Buffer and fill it with our only\n        // value, lsb!\n        buf = allocUnsafe(1);\n        buf[0] = lsb;\n    }\n    // finally, return our optimally-sized Buffer!\n    return buf;\n}\n/**\n * Converts positive whole numbers less than or equal to\n * `Number.MAX_SAFE_INTEGER` to a Buffer. If your value is less than 2**32 you\n * should use `uint32ToBuf` instead.\n *\n * @param num - A positive whole number <= `Number.MAX_SAFE_INTEGER`\n * @returns an optimally sized buffer holding `num` in big-endian order (LSB is\n * the _last_ value in the Buffer)\n */\nfunction uintWideToBuf(num) {\n    // This function is similar to `uint32ToBuf`, but splits the number into its\n    // 32 lowest bits and its 32 highest bits. We have to do this because numeric\n    // Bitwise operations can only operate on 32 bit-wide values.\n    // There are some differences, but if you first grasp `uint32ToBuf`, you can\n    // handle this just fine.\n    let buf;\n    /** If we are in this function we are probably > 32 bits wide, so we need to\n     * first convert this value to BigInt in order to shift off those high bits.\n     * Now that I'm documenting this, we could probably just subtract `2**32` from\n     * `num` to avoid the conversion overhead (BigInts are slower than numbers) */\n    let hi = Number(BigInt(num) >> 32n);\n    const hiLsb = hi;\n    let offset = 0;\n    // the high bits determine the size of the Buffer, so we compute the high bits\n    // first\n    if ((hi >>>= 8)) {\n        const six = hi;\n        if ((hi >>>= 8)) {\n            const five = hi;\n            if ((hi >>>= 8)) {\n                buf = allocUnsafe(8);\n                buf[0] = hi; // msb\n                buf[1] = five;\n                buf[2] = six;\n                buf[3] = hiLsb;\n                offset = 7;\n            }\n            else {\n                buf = allocUnsafe(7);\n                buf[0] = five; // msb\n                buf[1] = six;\n                buf[2] = hiLsb;\n                offset = 6;\n            }\n        }\n        else {\n            buf = allocUnsafe(6);\n            buf[0] = six; // msb\n            buf[1] = hiLsb;\n            offset = 5;\n        }\n    }\n    else {\n        buf = allocUnsafe(5);\n        buf[0] = hiLsb; // msb\n        offset = 4;\n    }\n    // set the low bytes:\n    let lo = num & MAX_UINT32;\n    const lsb = lo;\n    if ((lo >>>= 8)) {\n        const two = lo;\n        if ((lo >>>= 8)) {\n            const one = lo;\n            buf[offset - 3] = lo >>>= 8;\n            buf[offset - 2] = one;\n            buf[offset - 1] = two;\n            buf[offset] = lsb;\n        }\n        else {\n            buf[offset - 3] = 0;\n            buf[offset - 2] = 0;\n            buf[offset - 1] = two;\n            buf[offset] = lsb;\n        }\n    }\n    else {\n        buf[offset - 3] = 0;\n        buf[offset - 2] = 0;\n        buf[offset - 1] = 0;\n        buf[offset] = lsb;\n    }\n    return buf;\n}\n/**\n * Converts a JavaScript number, treated as a Whole Number (0, 1, 2, 3, 4, ...)\n * less than 64 bits wide, to a Buffer.\n *\n * Numbers that are negative, fractional, or greater than 64 bits wide will\n * return very unexpected results. Numbers that are greater than\n * `Number.MAX_SAFE_INTEGER` will return unexpected results.\n *\n * @param num - A positive whole number <= `Number.MAX_SAFE_INTEGER`\n */\nfunction uintToBuffer(num) {\n    return num > MAX_UINT32 ? uintWideToBuf(num) : uint32ToBuf(num);\n}\nexports.uintToBuffer = uintToBuffer;\n//# sourceMappingURL=uint-to-buffer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unref = void 0;\n/**\n * In node, calling `unref(timer)` on a running timer ensures that the timer\n * does not require that the Node.js event remain active. If there is no other\n * activity keeping the event loop running, the process may exit before the\n * timer's callback is invoked.\n * @param timer -\n * @returns `true` if the timer could be `unref`ed, otherwise returns `false`\n */\nfunction unref(timer) {\n    if (typeof timer === \"object\" && typeof timer.unref === \"function\") {\n        timer.unref();\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexports.unref = unref;\n//# sourceMappingURL=unref.js.map"],"names":["Object","defineProperty","exports","value","Address","utils_1","Data","constructor","super","ByteLength","static","from","toBuffer","toString","__createBinding","this","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","BlockParams","INITIAL_BASE_FEE_PER_GAS","ELASTICITY","BASE_FEE_MAX_CHANGE_DENOMINATOR","Block","ethereum_transaction_1","rlp_1","runtime_block_1","utils_2","block_params_1","serialized","common","_common","deserialized","decode","_raw","_rawTransactions","totalDifficulty","header","makeHeader","_rawTransactionMetaData","_size","Quantity","toNumber","hash","_hash","keccak","encode","getTransactions","map","raw","index","extra","number","TransactionFactory","fromDatabaseTx","toJSON","includeFullTransactions","txFn","getTxFn","hashBuffer","jsonTxs","tx","updateEffectiveGasPrice","baseFeePerGas","size","transactions","uncles","include","rawHeader","txs","extraTxs","block","parentHeader","nextBaseFee","parentGasTarget","gasLimit","toBigInt","parentGasUsed","gasUsed","adjustedFeeDelta","blocks","maxPossibleBaseFee","calcNextBaseFeeBigInt","parentBlock","RuntimeBlock","getBlockSize","ethereumjs_util_1","serialize_1","block_1","BnExtra","BN","buf","parentHash","sha3Uncles","miner","stateRoot","transactionsRoot","receiptsRoot","logsBloom","difficulty","timestamp","extraData","mixHash","nonce","length","coinbase","previousBlockTotalDifficulty","serializeBaseFeePerGas","ts","coinbaseBuffer","BUFFER_ZERO","finalize","transactionsTrie","receiptTrie","bloom","storageKeys","KECCAK256_RLP_ARRAY","BUFFER_EMPTY","BUFFER_32_ZERO","BUFFER_8_ZERO","forEach","push","serialize","serializedStart","encodeRange","serializedLength","encodeLength","middle","ending","uintToBuffer","digest","output","_EthereumApi_getId","_EthereumApi_filters","_EthereumApi_subscriptions","_EthereumApi_options","_EthereumApi_blockchain","_EthereumApi_wallet","__decorate","decorators","target","key","d","c","arguments","r","Reflect","decorate","i","__classPrivateFieldSet","receiver","state","kind","f","TypeError","has","set","__classPrivateFieldGet","__importDefault","mod","ethereum_utils_1","ethereum_block_1","eth_sig_util_1","wallet_1","gas_estimator_1","assert_arg_length_1","filter_parsing_1","ethereum_address_1","miner_1","async","autofillDefaultTransactionValues","eth_estimateGas","eth_maxPriorityFeePerGas","transaction","blockchain","options","gas","isNull","defaultLimit","defaultTransactionGasLimit","Empty","Tag","latest","gasPrice","defaultGasPrice","maxFeePerGas","calcNBlocksMaxBaseFee","maxPriorityFeePerGas","PROTOCOL_VERSION","RPC_MODULES","eth","net","rpc","web3","evm","personal","assertExceptionalTransactions","errors","baseError","data","execException","VM_EXCEPTIONS","VM_EXCEPTION","message","err","Error","join","EthereumApi","wallet","id","Map","dbName","arg","vmErrorsOnRPCResponse","chain","mine","Capacity","FillBlock","address","buffer","stateManager","vm","account","getAccount","toArrayLike","putAccount","balance","code","addressBuffer","codeBuffer","putContractCode","codeHash","KECCAK256_NULL","slot","slotBuffer","valueBuffer","putContractStorage","seconds","milliseconds","Math","floor","increaseTime","time","getTime","offsetMilliseconds","setTimeDiff","snapshotId","revert","snapshot","passphrase","addy","addUnknownAccount","removeKnownAccount","threads","instamine","resumption","resume","pause","bytes","networkId","Zero","blockNumber","generateVM","copy","Promise","resolve","reject","fromRpc","callGasLimit","runArgs","toVmTransaction","skipBalance","skipNonce","default","result","gasEstimate","Buffer","catch","_","getByHash","blockNum","getEffectiveNumber","rawBlock","getRawByBlockNumber","rawTransactions","getNumberFromHash","uncleIndex","filterId","powHash","hashRate","clientID","isStarted","Gwei","addresses","chainId","accounts","getBalance","getCode","position","blockStateRoot","trie","setContext","posBuff","paddedPosBuff","allocUnsafe","fill","slice","addressBuf","addressData","addressStateRoot","transactionHash","transactionPool","find","transactionReceipts","dataHash","txHash","transactionPromise","receiptPromise","blockPromise","then","t","receipt","all","blockTime","logging","logger","log","fromString","isKnownAccount","knownAccounts","privateKey","unlockedAccounts","bind","queueTransaction","signAndHash","toLowerCase","messageHash","hashPersonalMessage","v","s","ecsign","toRpcSig","typedData","eth_signTypedData_v4","types","EIP712Domain","domain","primaryType","signTypedData_v4","eth_subscribe","subscriptionName","subscriptions","subscription","promiEvent","PromiEvent","unsubscribe","on","emit","type","topics","parseFilterDetails","blockLogs","filter","CodedError","JsonRpcErrorCode","METHOD_NOT_FOUND","subscriptionId","delete","updates","FilterTypes","pendingTransaction","fromBlock","toBlock","parseFilterRange","eth_getLogs","getLogs","getNonce","overrides","input","baseFeePerGasBigInt","hasGasPrice","isActivatedEIP","hasMaxFeePerGas","hasMaxPriorityFeePerGas","BigInt","a","tip","simulatedTransaction","to","simulateTransaction","traceTransaction","blockHash","transactionIndex","contractAddress","startKey","maxResult","storageRangeAt","newAccount","createRandomAccount","strAddress","addToKeyFile","add","rawKey","createAccountFromPrivateKey","lockAccount","duration","unlockAccount","secretKey","getFromKeyFile","postData","executables","origins","processMap","res","array","pending","queued","WeakMap","assertArgLength","_Blockchain_state","_Blockchain_miner","_Blockchain_blockBeingSavedPromise","_Blockchain_timer","_Blockchain_emitStepEvent","_Blockchain_database","_Blockchain_options","_Blockchain_instamine","_Blockchain_saveNewBlock","_Blockchain_emitNewBlock","_Blockchain_getTransactionLogOutput","_Blockchain_handleNewBlockData","_Blockchain_readyNextBlock","_Blockchain_isPaused","_Blockchain_commitAccounts","_Blockchain_initializeGenesisBlock","_Blockchain_timeAdjustment","_Blockchain_adjustedTime","_Blockchain_deleteBlockData","_Blockchain_snapshots","_Blockchain_traceTransaction","_Blockchain_prepareNextBlock","__setModuleDefault","__importStar","Status","os_1","database_1","emittery_1","common_1","vm_1","exceptions_1","account_manager_1","block_manager_1","blocklog_manager_1","transaction_manager_1","run_call_1","state_manager_1","index_1","trie_1","trie_2","precompiles_1","transaction_receipt_manager_1","provider_events_1","mcl_wasm_1","mclInitPromise","init","BLS12_381","setMapToMode","IRTF","verifyOrderG1","verifyOrderG2","makeTrie","db","root","fallback","ForkTrie","GanacheTrie","Blockchain","starting","batch","blockHeader","blockNumberQ","BlockLogs","timestampStr","Date","logOutput","serializeForDb","getReceipt","encodedReceipt","append","put","hashedKey","putBlock","updateLatestIndex","EOL","blockInfo","setImmediate","error","str","reason","blockData","saveBlockProm","previousBlock","previousHeader","previousNumber","minerOptions","blockGasLimit","calcNextBaseFee","started","maxTransactions","onlyOneBlock","nextBlock","paused","createVmFromStateTrie","stateTrie","allowUnlimitedContractSize","activatePrecompile","getBlock","activatePrecompiles","ForkStateManager","DefaultStateManager","_isInitialized","initialAccounts","fallbackBlock","checkpoint","acc","_cache","touchAccount","commit","genesis","KECCAK256_RLP","BUFFER_256_ZERO","rawBlockNumber","precedingTimestamp","timeAdjustment","timestampIncrement","now","blocksToDelete","newLatestBlockNumber","revertMetaData","del","snaps","unsubscribeFromBlocks","newBlock","keys","currentDepth","storageStack","getCommonForBlockNumber","storage","structLogs","TraceData","TraceDataFactory","transactionEventContext","stepListener","event","next","makeStepEvent","gasLeft","gasUsedPreviousStep","memory","disableMemory","stack","disableStack","stackItem","structLog","depth","gasCost","op","opcode","name","pc","disableStorage","eventDepth","pop","TraceStorageMap","getContractStorage","flush","l","database","ejsContractAddress","context","runTx","removeListener","returnValue","targetBlock","uncleHeaders","equals","initialize","fork","createCommon","hardfork","forCustomChain","KNOWN_CHAINIDS","comment","blockIndexes","firstBlockTime","earliest","txPool","minerOpts","nullResolved","mineAll","Single","wait","setTimeout","once","clearListeners","e","stopping","stop","_threads","console","newTime","currentTime","snapshots","current","rawValue","snapshotIndex","Number","clear","currentHash","snapshotBlock","snapshotHeader","snapshotHash","splice","blockPromises","blockList","setStateRootSync","_trie","_storageTries","process","nextTick","status","hasToAddress","toBuf","calculateIntrinsicGas","transactionContext","ganacheStepEvent","caller","warmPrecompiles","addWarmedAddress","applySimulationOverrides","fromAccount","iaddn","txCost","isub","runCall","execResult","runState","programCounter","exceptionError","VmError","ERROR","OUT_OF_GAS","CallError","transactionHashBuffer","txIndex","contractAddressBuffer","nextKey","storageTrie","startKeyBuffer","compare","b","createReadStream","findInsertPosition","getStorageKeys","toggleStepEvent","enable","clearTimeout","removeAllListeners","close","stopped","_Connector_provider","_Connector_handle","Connector","provider_1","bufferify_1","providerOptions","executor","BUFFERIFY_THRESHOLD","payload","connection","method","isHttp","METHOD_NOT_SUPPORTED","params","_requestRaw","EthereumProvider","provider","parse","JSON","PARSE_ERROR","handle","Array","isArray","promises","format","results","stringify","makeError","makeResponse","json","bufferify","formatError","disconnect","_AccountManager_blockchain","AccountManager","getRaw","Account","fromBuffer","trieCopy","_BlockManager_blockchain","_BlockManager_common","_BlockManager_blockIndexes","manager_1","LATEST_INDEX_KEY","EMPTY_BUFFER","BlockManager","base","fromFallback","tagOrBlockNumber","isValidForkBlockNumber","request","rawFromJSON","bm","updateTaggedBlocks","blockExtra","txExtra","typedTx","toEthRawTransaction","getBlockByTag","tag","numBuf","secondaryKey","latestBlockNumber","createValueStream","limit","stream","_BlockLogManager_blockchain","BlockLogManager","fromJSON","logs","toBlockNumber","parseFilter","pendingLogsPromises","fromBlockNumber","blockLogsRange","filteredBlockLogs","_Manager_Type","_Manager_options","Manager","_TransactionManager_queue","_TransactionManager_paused","_TransactionManager_resumer","_TransactionManager_resolver","_TransactionManager_blockchain","transaction_pool_1","promise_queue_1","TransactionManager","factory","insertion","prepareTransaction","drain","isBusy","_TransactionReceiptManager_blockchain","TransactionReceiptManager","InternalTransactionReceipt","One","cumulativeGasUsed","topic","fromValues","_Database_options","_Database_cleanupDirectory","_Database_closed","_Database_rootStore","_Database_cleanup","tmp_promise_1","subleveldown_1","encoding_down_1","leveldown_1","levelup","setGracefulCleanup","tmpOptions","prefix","unsafeCleanup","noop","Database","directory","levelupOptions","keyEncoding","valueEncoding","store","dbPath","dirInfo","dir","path","cleanup","leveldownOpts","open","fn","rootDb","originalPut","originalDel","prom","ret","write","wasClosed","ForkCache","cache_1","getCb","rlp","fromRlpSerializedAccount","putCb","deleteCb","Deferred","deferred","promise","_Fork_abortController","_Fork_handler","_Fork_options","_Fork_accounts","_Fork_hardfork","_Fork_setCommonFromChain","_Fork_setBlockDataFromChainAndOptions","_Fork_syncAccounts","Fork","abort_controller_1","http_handler_1","ws_handler_1","provider_handler_1","persistent_cache_1","url_1","fetchNetworkId","networkIdStr","parseInt","fetchBlock","chainIdPromise","defaultHardfork","latestBlock","effectiveBlockNumber","max","preLatestConfirmations","isInteger","disableCache","latestBlockNumberHex","latestBlockNumberInt","fetchNonce","forkingOptions","url","network","protocol","WsHandler","signal","HttpHandler","ProviderHandler","normalizedNetwork","infuraKey","URL","cacheProm","forkOptions","chainOptions","deleteCache","PersistentCache","deleteDb","_e","fetchChainId","chainIdHex","cache","initCache","setCache","abort","selectValidForkBlockNumber","hf","hardforks","BaseHandler","rate_limiter_1","lru_cache_1","abortSignal","requestCache","fireForget","Set","requestsPerSecond","userAgent","origin","limiter","WINDOW_SECONDS","valueCache","headers","password","username","isInfura","host","endsWith","setAuthHeaders","setUserHeaders","persistentCache","jwt","authorization","permitMultiAuth","userHeaders","currentScheme","split","incomingScheme","authParams","getFromMemCache","cachedRequest","cachedValue","notFound","send","memCached","diskCached","getFromSlowCache","response","aborted","AbortError","hasOwn","finally","JSONRPC_PREFIX","http_1","https_1","base_handler_1","deferred_1","accept","_request","agent","Agent","keepAlive","scheduling","offset","messageLength","end","chunks","totalLength","chunk","concat","hostname","port","pathname","search","requestOptions","queueRequest","req","handleChunkedResponse","isNaN","handleLengthedResponse","resStr","shortStr","msg","startsWith","jsonrpc","strParams","ws_1","inFlightRequests","binaryType","connect","onclose","addEventListener","onmessage","onMessage","messageId","onopen","onerror","parts","pieces","part","lengthBuffer","encoded","lengthLength","Ancestry","tree_1","parent","cacheLock","knownAncestors","closestKnownAncestor","resolver","node","Tree","deserialize","strKey","loadNextAncestor","getBlockByNumber","findClosestDescendants","findClosestAncestor","findRelated","resolveTargetAndClosestAncestor","setDbVersion","getBlockNumberFromParams","readStream","values","pair","height","candidateHeight","decodeKey","upTo","generator","gte","lt","encodeKey","reverse","first","return","version","recordedVersion","targetHeight","targetHash","closestAncestor","previousClosestAncestor","earliestBlock","earliestHash","earliestNumber","fs_1","env_paths_1","lexico","ancestry_1","helpers_1","maxValueByteBuffer","_reBalancePromise","dbSuffix","getDbDirectory","destroy","rs","ancestorDb","tree","collection","keyHex","parentKeyHex","descendants","closestKnownDescendants","suffix","mkdir","recursive","cacheDb","ancestry","atomicBatch","findIndex","allKnownDescendants","ancestorsDescendants","descendantKey","descendantHeight","descendantValue","descendantNode","descendantRawBlock","reBalanceDescendantTree","startSize","maybeDescendant","some","parentTree","isOpen","bufKey","start","gt","_height","_key","dbKey","children","timeSince","LimitCounter","windowLength","counters","evict","lastEvict","updatedAt","increment","currentWindow","previousWindow","curr","prev","semaphore_1","limit_counter_1","sleep","ms","timer","removeEventListener","RateLimiter","requestLimit","windowSizeMs","sem","take","mustBackoff","counter","limitCounter","currWindow","prevWindow","currCount","prevCount","rate","nextCount","nextLimit","schedule","leave","LIMIT_EXCEEDED","backoffSeconds","backoff_seconds","allowed_rps","stateManager_1","opts","checkpoints","_getStorageTrie","checkpointDb_1","DELETED_VALUE","MetadataSingletons","LEVELDOWN_OPTIONS","isEqualKey","encodedKey","decodedKey","keyAddress","deletedKey","isPreForkBlock","accountFromFallback","codeProm","codeHex","storageFromFallback","compressed","replace","forkBlockNumber","metadata","CheckpointDB","metadataDb","_root","val","startBlockNumber","endBlockNumber","_leveldb","createKeyStream","createDelKey","selfAddress","encodedKeyStr","keyValueMap","entries","lte","lock","findPath","_deleteNode","delKey","metaDataPutPromise","keyWasDeleted","includeCheckpoints","secureTrie","isCheckpoint","deriveFromIndex","deriveFromPath","createAccountFromSeed","createAccountGeneratorFromSeedAndPath","crypto_1","secp256k1_1","HARDENED_OFFSET","MASTER_SECRET","seedBuffer","I","createHmac","update","chainCode","publicKey","makePublicKey","fullPath","child","test","hardened","childIndex","deriveChild","publicKeyCreate","hdPath","SHARED_BUFFER_4","isHardened","indexBuffer","writeUInt32BE","privateKeyLength","dataLength","IL","newPrivK","privateKeyTweakAdd","min","propertyKey","descriptor","original","apply","PARTS","SQUARE_BRACKET_PAIR","SQUARE_BRACKET_OPEN","SQUARE_BRACKET_CLOSE","CURLY_BRACKET_PAIR","CURLY_BRACKET_OPEN","CURLY_BRACKET_CLOSE","COMMA","QUOTE_PAIR","COLON","NULL","_EMPTY","toStr","stringToQuotedBuffer","utf8Write","nameOrIndex","numberToBuffer","isBuffer","bufferToQuotedBuffer","arrayToBuffer","chunkified","objectToBuffer","obj","yieldedOpen","yieldPrefix","quotedKey","bn","STIPEND","check","opname","isCall","isCallOrCallcode","isCreate","isTerminator","binSearch","callback","MAX","gasRefund","startingGas","range","lo","hi","isEnoughGas","vmerr","muln","addn","mid","divn","exactimate","steps","sysOps","allOps","preCompile","preCompileCheck","precompileCallDepth","collect","info","clone","isPrecompile","done","ops","systemOps","stepTracker","Context","fee","cost","sixtyFloorths","intermediateCost","sub","callingFee","compositeContext","addGas","gtn","iadd","setStart","setStop","getCost","transfer","ctx","addSixtyFloorth","sixtyFloorth","addRange","finalizeRange","isZero","innerCost","RuntimeError","RETURN_TYPES","RETURN_VALUE","estimate","actualUsed","sysops","opIndex","cursor","currentIndex","getTotal","SERIALIZED_PRECOMPILE","Uint8Array","PRECOMPILED_ACCOUNT","accountCache","makeAccount","message_1","evm_1","ethereumjs_util_2","txContext","executeMessage","validateStorageOverride","fieldName","indexOf","stateDiff","vmAddr","clearedState","clearContractStorage","slotBuf","valueBuf","merkle_patricia_tree_1","SecureTrie","_Miner_currentlyExecutingPrice","_Miner_origins","_Miner_pending","_Miner_isBusy","_Miner_paused","_Miner_resumer","_Miner_currentBlockBaseFeePerGas","_Miner_resolver","_Miner_emitStepEvent","_Miner_executables","_Miner_options","_Miner_vm","_Miner_createBlock","_Miner_priced","_Miner_mine","_Miner_mineTxs","_Miner_runTx","_Miner_removeBestAndOrigin","_Miner_reset","_Miner_setPricedHeap","_Miner_updatePricedHeap","_Miner_setCurrentBlockBaseFeePerGas","replace_from_heap_1","updateBloom","blockBloom","sortByPrice","effectiveGasPrice","refresher","item","Miner","createBlock","Heap","lastBlock","runtimeBlock","inProgress","keepMining","priced","blockTransactions","BaseTrie","finalizedBlockData","numTransactions","blockGasLeft","blockGasUsed","best","peek","locked","txKey","fillFromResult","bitvector","pendingOrigin","removeBest","Params","TRANSACTION_GAS","refresh","errorMessage","TRANSACTION_HASH","pricedArray","mapping","price","replaceFromHeap","source","replaceBest","normalizeEvent","originalMemory","memoryLength","sharedBuffer","codeAddress","memoryWordCount","returnStack","_EthereumProvider_options","_EthereumProvider_api","_EthereumProvider_executor","_EthereumProvider_wallet","_EthereumProvider_blockchain","_EthereumProvider_send","_EthereumProvider_logRequest","_EthereumProvider_legacySendPayloads","_EthereumProvider_legacySendPayload","api_1","ethereum_options_1","lodash_clonedeep_1","blockchain_1","fork_1","off","arg1","arg2","verbose","payloads","mainError","responses","EthereumOptionsConfig","normalize","parseCoinbase","hookEventSystem","onChange","listenerCount","listenerAdded","eventName","listenerRemoved","getOptions","getInitialAccounts","unlocked","sendAsync","args","rawResult","execute","normalizedData","_TransactionPool_options","_TransactionPool_priceBump","_TransactionPool_blockchain","_TransactionPool_accountPromises","_TransactionPool_validateTransaction","TriageOption","shouldReplace","replacee","replacerNonce","replacer","priceBump","TRANSACTION_LOCKED","TRANSACTION_REJECTED","replacerTip","replacerMaxFee","replaceeTip","replaceeMaxFee","UNDERPRICED","byNonce","TransactionPool","GAS_LIMIT","INVALID_INPUT","INTRINSIC_GAS_TOO_LOW","txNonce","transactorPromise","highestNonce","getNonceAndBalance","transactor","maxGasPrice","INSUFFICIENT_FUNDS","queuedOriginTransactions","transactionPlacement","FutureQueue","executableOriginTransactions","pendingArray","pendingTx","ReplacesPendingExecutable","REPLACED","pendingTxNonce","Executable","transactorNonce","queuedArray","queuedTx","ReplacesFutureTransaction","nextExpectedNonce","nextTx","arr","_Wallet_randomRng","_Wallet_randomBytes","_Wallet_initializeAccounts","_Wallet_intializeAccountFromKey","_Wallet_initializeAccountWithoutKey","_Wallet_initializeAccount","_Wallet_lockAccount","hdkey_1","bip39_1","seedrandom_1","keccak_1","TWELVE_255s","SCRYPT_PARAMS","dklen","n","CIPHER","scrypt","derivedKey","SHARED_BUFFER","uncompressedPublicKeyToAddress","uncompressedPublicKey","publicKeyConvert","asUUID","uuid","Wallet","keyFiles","lockTimers","rand","makeAccountAtIndex","mnemonicToSeedSync","mnemonic","balanceParts","defaultBalance","significand","fractionalStr","fractional","magnitude","defaultBalanceInWei","WEI","etherInWei","givenAccounts","accountsLength","givenAccount","acct","numberOfAccounts","totalAccounts","createAccount","lockAccounts","addToKeyFileSync","lowerAddress","alea","givenUnlockedAccounts","ul","addressOrIndex","createFakePrivateKey","isSafeInteger","accountKeysPath","fileData","private_keys","writeFileSync","random","salt","iv","N","finishEncryption","encryptSync","scryptSync","cipher","createCipheriv","ciphertext","final","mac","crypto","cipherparams","kdf","kdfParams","keyfile","crypt","localMac","createDecipheriv","encrypted","encrypt","keyFile","decrypt","privateToAddress","seed","existingTimer","durationMs","timeout","unref","fakePrivateKey","ACCOUNT_ZERO","first12","SECP256K1_N","ChainOptions","cliDescription","legacyName","cliType","asyncRequestProcessing","defaultDescription","cliAliases","rawInput","cliCoerce","asNum","cliChoices","DatabaseOptions","disableInCLI","conflicts","ForkOptions","KNOWN_NETWORKS","MAX_BLOCK_NUMBER","MAX_SAFE_INTEGER","reColonSplit","coerceHeaders","ALLOWED_PROTOCOLS","includes","lastIndex","lastIndexOf","substr","warn","_blockNumber","conjunction","last","arrayToOxfordList","implies","reduce","EthereumDefaults","chain_options_1","database_options_1","logging_options_1","miner_options_1","wallet_options_1","fork_options_1","options_1","LoggingOptions","MinerOptions","WalletOptions","OptionsConfig","debug","quiet","config","toBigIntOrString","rawType","unseededRng","randomAlphaNumericString","alphabet","alphabetLength","rng","text","accountString","deterministic","DeterministicSeedPhrase","entropyToMnemonic","notVeryRandomBytes","AccessLists","isAccessList","tx_1","tx_2","params_1","accessList","AccessListJSON","bufferAccessList","slots","accessListStorageKeyCost","ACCESS_LIST_STORAGE_KEY_GAS","accessListAddressCost","ACCESS_LIST_ADDRESS_GAS","newAccessList","storageItems","storageKeysLength","jsonItem","dataFeeEIP2930","BaseTransaction","MAX_UINT64","TRANSACTION_CREATION","byteLength","TRANSACTION_DATA_NON_ZERO_GAS","TRANSACTION_DATA_ZERO_GAS","nonZeroBytes","zeroBytes","setExtra","EIP1559FeeMarketTransaction","runtime_transaction_1","access_lists_1","signing_1","CAPABILITIES","RuntimeTransaction","accessListData","getAccessListData","accessListJSON","encodedData","encodedSignature","computeIntrinsics","chainIdBN","validateAndSetSignature","sender","getSenderAddress","getBaseFee","getUpfrontCost","baseFee","maxPriorityFeePerGasBN","maxFeePerGasBN","gasLimitBN","valueBN","mul","supports","capability","typeBuf","sig","msgHash","object","signature","recid","ecdsaSign","computeIntrinsicsFeeMarketTx","EIP2930AccessListTransaction","accessListDataFee","computeIntrinsicsAccessListTx","LegacyTransaction","gteHardfork","computeIntrinsicsLegacyTx","hasPartialSignature","toValidLengthAddress","base_transaction_1","transaction_receipt_1","ONE_BUFFER","finalizer","userFrom","finalized","dataVal","txAndExtraData","vmResult","createdAddress","_event","computeFromAddress","ecdsaRecover","isValidSigRecovery","copyOrFill","targetStart","numZeroes","endZeroes","sourceOffset","recovery","_ecdsaRecover","rBuf","sBuf","partialRlp","eip155V","extras","epilogue","senderPubKey","TransactionType","legacy_transaction_1","eip2930_access_list_transaction_1","eip1559_fee_market_transaction_1","assertValidTransactionSValue","SECP256K1_MAX_PRIVATE_KEY_DIV_2","txData","txType","fromTxData","Legacy","EIP2930AccessList","EIP1559AccessList","toEIP1559","INVALID_PARAMS","typeOfRPC","_fromData","typeOfRaw","typeOf","_InternalTransactionReceipt_gasUsed","_InternalTransactionReceipt_init","STATUSES","decoded","blockLog","errors_1","coded_error_1","captureStackTraceExtended","createRevertReason","ethereumjs_abi_1","REVERT_REASON","codedError","captureStackTrace","nonEnumerableProperty","rawDecode","NONCE_TOO_LOW","INVALID_SENDER","returnType","Symbol","_logs","filterByTopic","expectedTopics","logTopics","every","expectedTopic","logPosition","expectedTopicSet","logTopic","logIndex","removed","iterator","logToJSON","expectedAddresses","InternalTag","PREFIXES","traceDataLookup","bufferToMinHexKey","existing","lengthDiff","FilecoinDefaults","FilecoinOptionsConfig","src_1","src_2","ipfsHost","ipfsPort","TruffleColors","porsche","turquoise","infura","__experimental_info","server","_DefaultServerOptions","ServerStatus","Server","connector_loader_1","server_1","server_2","Ganache","connector","knownChainIds","flavors_1","flavors_2","flavor","DefaultFlavor","requestCoordinator","RequestCoordinator","Executor","GetConnector","connectPromise","serverOptionsConfig","serverDefaults","server_options_1","ServerOptions","buffer_1","ws","wsBinary","rpcEndpoint","FilecoinFlavorName","chunkSize","kMaxLength","_Server_options","_Server_providerOptions","_Server_status","_Server_app","_Server_httpServer","_Server_listenSocket","_Server_connector","_Server_websocketServer","_Server_initializer","shim","aggregate_error_1","uws_js_unofficial_1","_cfg","ws_server_1","http_server_1","providerAndServerOptions","unknown","ready","loader","_app","App","listen","callbackIsFunction","trim","portNumber","closing","openingOrOpen","opening","allSettled","listenSocket","closed","promiseResults","closingOrClosed","_listenSocket","us_listen_socket_close","_HttpServer_connector","_HttpServer_options","_HttpServer_isClosing","_HttpServer_handlePost","_HttpServer_handleOptions","content_types_1","http_response_codes_1","util_1","fragment_generator_1","prepareCORSResponseHeaders","getHeader","acrh","writeHeader","sendResponse","closeConnection","statusCode","contentType","writeHeaders","cork","writeStatus","HttpServer","app","onAborted","onData","isLast","BAD_REQUEST","PLAIN","isGeneratorObject","sendChunkedResponse","fragments","getFragmentGenerator","firstFragment","nextFragment","OK","NO_CONTENT","post","IM_A_TEAPOT","any","connectionHeader","NOT_FOUND","ContentTypes","bufferSize","subarray","HttpResponseCodes","WebSocketCloseCodes","_WebsocketServer_connections","MAX_PAYLOAD_SIZE","sendFragmented","websocket_close_codes_1","useBinary","maybeLastFragment","sendFirstFragment","fragment","sendFragment","sendLastFragment","WebsocketServer","connections","autoBinary","maxPayloadLength","idleTimeout","isBinary","resultEmitter","resultEmitterPromiEvent","dispose","CLOSE_NORMAL","webpackContext","webpackContextResolve","__webpack_require__","webpackContextKeys","module","DefaultOptionsByName","EthereumFlavorName","ethereum_1","filecoin_options_1","colors_1","chalk_1","NEED_HELP","COMMUNITY_LINK","eval","exit","webpackEmptyContext","_OptionsConfig_defaults","_OptionsConfig_namespaces","checkForConflicts","namespace","suppliedOptions","conflict","defaults","out","def","namespaceOptions","propDefinition","normalized","_PromiseQueue_queue","_PromiseQueue_tryResolve","_PromiseQueue_tryResolveChain","entry_1","PromiseQueue","queue","entry","shift","resolved","cancelledQueue","mixin","for","Entry","onSetteled","_onSetteled","getLength","enc","encodedLength","encLength","len","hexLength","lLength","firstByte","items","count","ranges","lengthEncodedLength","j","path_1","secp256k1","nodeRequire","dirname","nodeGypBuild","Secp256k1","makeRequest","JsonRpcType","json_rpc_1","jsonrpc_1","promievent_1","toBigIntBE","toBufferBE","bigint_buffer_1","json_rpc_base_types_1","BaseJsonRpcType","parseAndValidateStringInput","parseAndValidateBigIntInput","parseAndValidateNumberInput","bigint_to_buffer_1","uint_to_buffer_1","isFinite","bigIntToBuffer","hexValue","ceil","_buffer","input_parsers_1","inspect","bufferValue","_depth","_options","valueOf","constants_1","_byteLength","strValue","stringToFixedByteLength","bufferToFixedByteLength","desiredCharLength","padCharCount","fixedLengthValue","repeat","buffer_to_bigint_1","nullable","_nullable","ZERO_VALUE_STRING","firstNonZeroByte","findFirstNonZeroByteIndex","bufferToBigInt","trimmedBuffer","readUIntBE","details","getOwnPropertyNames","PromiEvent_1","emitteryMethods","methodName","onrejected","onAny","eventData","_bigIntToBuffer","bigIntByteLength","view","padded","DataView","byteOffset","getBigUint64","latin1Slice","hexSlice","HEX_MAP","_Executor_requestCoordinator","has_own_1","api","__proto__","comp","insertPosition","step","_hasOwn","prop","less","down","up","element","newLength","newValue","fix","remove","swap","i0","j1","j2","heap","instance","_state","absorb","squeeze","_finalized","RandomNumberGenerator","entropy","getNumber","upperExclusiveBound","getNumbers","numbers","getBuffer","_RequestCoordinator_paused","_RequestCoordinator_process","runningTasks","thisArgument","argumentsList","MAX_UINT32","num","uintWideToBuf","hiLsb","six","five","lsb","two","one","uint32ToBuf","second","third"],"sourceRoot":""}