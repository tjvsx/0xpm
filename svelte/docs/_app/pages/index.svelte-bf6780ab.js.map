{"version":3,"mappings":"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","names":["fromString","from","basex","decode","encode","identity","base64","varint","create","varint.encodingLength","varint.encodeTo","Digest.create","base2","base8","base10","base16","base32","base36","bases","LongBits","util","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","global","this","Writer","BufferWriter","utf8","Reader","BufferReader","$protobuf","Pb.Data","errcode","uint8ArrayFromString"],"sources":["../../../../../node_modules/multiformats/esm/vendor/base-x.js","../../../../../node_modules/multiformats/esm/src/bytes.js","../../../../../node_modules/multiformats/esm/src/bases/base.js","../../../../../node_modules/multiformats/esm/src/bases/identity.js","../../../../../node_modules/multiformats/esm/src/bases/base2.js","../../../../../node_modules/multiformats/esm/src/bases/base8.js","../../../../../node_modules/multiformats/esm/src/bases/base10.js","../../../../../node_modules/multiformats/esm/src/bases/base16.js","../../../../../node_modules/multiformats/esm/src/bases/base32.js","../../../../../node_modules/multiformats/esm/src/bases/base36.js","../../../../../node_modules/multiformats/esm/src/bases/base58.js","../../../../../node_modules/multiformats/esm/src/bases/base64.js","../../../../../node_modules/multiformats/esm/vendor/varint.js","../../../../../node_modules/multiformats/esm/src/varint.js","../../../../../node_modules/multiformats/esm/src/hashes/digest.js","../../../../../node_modules/multiformats/esm/src/hashes/hasher.js","../../../../../node_modules/multiformats/esm/src/hashes/sha2-browser.js","../../../../../node_modules/multiformats/esm/src/hashes/identity.js","../../../../../node_modules/multiformats/esm/src/codecs/json.js","../../../../../node_modules/multiformats/esm/src/basics.js","../../../../../node_modules/uint8arrays/esm/src/util/bases.js","../../../../../node_modules/uint8arrays/esm/src/from-string.js","../../../../../node_modules/err-code/index.js","../../../../../node_modules/@protobufjs/aspromise/index.js","../../../../../node_modules/@protobufjs/base64/index.js","../../../../../node_modules/@protobufjs/eventemitter/index.js","../../../../../node_modules/@protobufjs/float/index.js","../../../../../node_modules/@protobufjs/inquire/index.js","../../../../../node_modules/@protobufjs/utf8/index.js","../../../../../node_modules/@protobufjs/pool/index.js","../../../../../node_modules/protobufjs/src/util/longbits.js","../../../../../node_modules/protobufjs/src/util/minimal.js","../../../../../node_modules/protobufjs/src/writer.js","../../../../../node_modules/protobufjs/src/writer_buffer.js","../../../../../node_modules/protobufjs/src/reader.js","../../../../../node_modules/protobufjs/src/reader_buffer.js","../../../../../node_modules/protobufjs/src/rpc/service.js","../../../../../node_modules/protobufjs/src/rpc.js","../../../../../node_modules/protobufjs/src/roots.js","../../../../../node_modules/protobufjs/src/index-minimal.js","../../../../../node_modules/protobufjs/minimal.js","../../../../../node_modules/ipfs-unixfs/esm/src/unixfs.js","../../../../../node_modules/ipfs-unixfs/esm/src/index.js","../../../../../src/routes/index.svelte"],"sourcesContent":["function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      switch (text[0]) {\n      case this.prefix: {\n          return this.baseDecode(text.slice(1));\n        }\n      default: {\n          throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n        }\n      }\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});","import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = data => {\n  const code = varint.decode(data);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};","const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));","import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};","import { bases } from 'multiformats/basics';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","'use strict';\n\n/**\n * @typedef {{ [key: string]: any }} Extensions\n * @typedef {Error} Err\n * @property {string} message\n */\n\n/**\n *\n * @param {Error} obj\n * @param {Extensions} props\n * @returns {Error & Extensions}\n */\nfunction assign(obj, props) {\n    for (const key in props) {\n        Object.defineProperty(obj, key, {\n            value: props[key],\n            enumerable: true,\n            configurable: true,\n        });\n    }\n\n    return obj;\n}\n\n/**\n *\n * @param {any} err - An Error\n * @param {string|Extensions} code - A string code or props to set on the error\n * @param {Extensions} [props] - Props to set on the error\n * @returns {Error & Extensions}\n */\nfunction createError(err, code, props) {\n    if (!err || typeof err === 'string') {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n        code = '';\n    }\n\n    if (code) {\n        props.code = code;\n    }\n\n    try {\n        return assign(err, props);\n    } catch (_) {\n        props.message = err.message;\n        props.stack = err.stack;\n\n        const ErrClass = function () {};\n\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n\n        // @ts-ignore\n        const output = assign(new ErrClass(), props);\n\n        return output;\n    }\n}\n\nmodule.exports = createError;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","import $protobuf from 'protobufjs/minimal.js';\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\nconst $root = $protobuf.roots['ipfs-unixfs'] || ($protobuf.roots['ipfs-unixfs'] = {});\nexport const Data = $root.Data = (() => {\n  function Data(p) {\n    this.blocksizes = [];\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  Data.prototype.Type = 0;\n  Data.prototype.Data = $util.newBuffer([]);\n  Data.prototype.filesize = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.blocksizes = $util.emptyArray;\n  Data.prototype.hashType = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.fanout = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.mode = 0;\n  Data.prototype.mtime = null;\n  Data.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    w.uint32(8).int32(m.Type);\n    if (m.Data != null && Object.hasOwnProperty.call(m, 'Data'))\n      w.uint32(18).bytes(m.Data);\n    if (m.filesize != null && Object.hasOwnProperty.call(m, 'filesize'))\n      w.uint32(24).uint64(m.filesize);\n    if (m.blocksizes != null && m.blocksizes.length) {\n      for (var i = 0; i < m.blocksizes.length; ++i)\n        w.uint32(32).uint64(m.blocksizes[i]);\n    }\n    if (m.hashType != null && Object.hasOwnProperty.call(m, 'hashType'))\n      w.uint32(40).uint64(m.hashType);\n    if (m.fanout != null && Object.hasOwnProperty.call(m, 'fanout'))\n      w.uint32(48).uint64(m.fanout);\n    if (m.mode != null && Object.hasOwnProperty.call(m, 'mode'))\n      w.uint32(56).uint32(m.mode);\n    if (m.mtime != null && Object.hasOwnProperty.call(m, 'mtime'))\n      $root.UnixTime.encode(m.mtime, w.uint32(66).fork()).ldelim();\n    return w;\n  };\n  Data.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.Data();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.Type = r.int32();\n        break;\n      case 2:\n        m.Data = r.bytes();\n        break;\n      case 3:\n        m.filesize = r.uint64();\n        break;\n      case 4:\n        if (!(m.blocksizes && m.blocksizes.length))\n          m.blocksizes = [];\n        if ((t & 7) === 2) {\n          var c2 = r.uint32() + r.pos;\n          while (r.pos < c2)\n            m.blocksizes.push(r.uint64());\n        } else\n          m.blocksizes.push(r.uint64());\n        break;\n      case 5:\n        m.hashType = r.uint64();\n        break;\n      case 6:\n        m.fanout = r.uint64();\n        break;\n      case 7:\n        m.mode = r.uint32();\n        break;\n      case 8:\n        m.mtime = $root.UnixTime.decode(r, r.uint32());\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    if (!m.hasOwnProperty('Type'))\n      throw $util.ProtocolError('missing required \\'Type\\'', { instance: m });\n    return m;\n  };\n  Data.fromObject = function fromObject(d) {\n    if (d instanceof $root.Data)\n      return d;\n    var m = new $root.Data();\n    switch (d.Type) {\n    case 'Raw':\n    case 0:\n      m.Type = 0;\n      break;\n    case 'Directory':\n    case 1:\n      m.Type = 1;\n      break;\n    case 'File':\n    case 2:\n      m.Type = 2;\n      break;\n    case 'Metadata':\n    case 3:\n      m.Type = 3;\n      break;\n    case 'Symlink':\n    case 4:\n      m.Type = 4;\n      break;\n    case 'HAMTShard':\n    case 5:\n      m.Type = 5;\n      break;\n    }\n    if (d.Data != null) {\n      if (typeof d.Data === 'string')\n        $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n      else if (d.Data.length)\n        m.Data = d.Data;\n    }\n    if (d.filesize != null) {\n      if ($util.Long)\n        (m.filesize = $util.Long.fromValue(d.filesize)).unsigned = true;\n      else if (typeof d.filesize === 'string')\n        m.filesize = parseInt(d.filesize, 10);\n      else if (typeof d.filesize === 'number')\n        m.filesize = d.filesize;\n      else if (typeof d.filesize === 'object')\n        m.filesize = new $util.LongBits(d.filesize.low >>> 0, d.filesize.high >>> 0).toNumber(true);\n    }\n    if (d.blocksizes) {\n      if (!Array.isArray(d.blocksizes))\n        throw TypeError('.Data.blocksizes: array expected');\n      m.blocksizes = [];\n      for (var i = 0; i < d.blocksizes.length; ++i) {\n        if ($util.Long)\n          (m.blocksizes[i] = $util.Long.fromValue(d.blocksizes[i])).unsigned = true;\n        else if (typeof d.blocksizes[i] === 'string')\n          m.blocksizes[i] = parseInt(d.blocksizes[i], 10);\n        else if (typeof d.blocksizes[i] === 'number')\n          m.blocksizes[i] = d.blocksizes[i];\n        else if (typeof d.blocksizes[i] === 'object')\n          m.blocksizes[i] = new $util.LongBits(d.blocksizes[i].low >>> 0, d.blocksizes[i].high >>> 0).toNumber(true);\n      }\n    }\n    if (d.hashType != null) {\n      if ($util.Long)\n        (m.hashType = $util.Long.fromValue(d.hashType)).unsigned = true;\n      else if (typeof d.hashType === 'string')\n        m.hashType = parseInt(d.hashType, 10);\n      else if (typeof d.hashType === 'number')\n        m.hashType = d.hashType;\n      else if (typeof d.hashType === 'object')\n        m.hashType = new $util.LongBits(d.hashType.low >>> 0, d.hashType.high >>> 0).toNumber(true);\n    }\n    if (d.fanout != null) {\n      if ($util.Long)\n        (m.fanout = $util.Long.fromValue(d.fanout)).unsigned = true;\n      else if (typeof d.fanout === 'string')\n        m.fanout = parseInt(d.fanout, 10);\n      else if (typeof d.fanout === 'number')\n        m.fanout = d.fanout;\n      else if (typeof d.fanout === 'object')\n        m.fanout = new $util.LongBits(d.fanout.low >>> 0, d.fanout.high >>> 0).toNumber(true);\n    }\n    if (d.mode != null) {\n      m.mode = d.mode >>> 0;\n    }\n    if (d.mtime != null) {\n      if (typeof d.mtime !== 'object')\n        throw TypeError('.Data.mtime: object expected');\n      m.mtime = $root.UnixTime.fromObject(d.mtime);\n    }\n    return m;\n  };\n  Data.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.arrays || o.defaults) {\n      d.blocksizes = [];\n    }\n    if (o.defaults) {\n      d.Type = o.enums === String ? 'Raw' : 0;\n      if (o.bytes === String)\n        d.Data = '';\n      else {\n        d.Data = [];\n        if (o.bytes !== Array)\n          d.Data = $util.newBuffer(d.Data);\n      }\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.filesize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.filesize = o.longs === String ? '0' : 0;\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.hashType = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.hashType = o.longs === String ? '0' : 0;\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.fanout = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.fanout = o.longs === String ? '0' : 0;\n      d.mode = 0;\n      d.mtime = null;\n    }\n    if (m.Type != null && m.hasOwnProperty('Type')) {\n      d.Type = o.enums === String ? $root.Data.DataType[m.Type] : m.Type;\n    }\n    if (m.Data != null && m.hasOwnProperty('Data')) {\n      d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n    }\n    if (m.filesize != null && m.hasOwnProperty('filesize')) {\n      if (typeof m.filesize === 'number')\n        d.filesize = o.longs === String ? String(m.filesize) : m.filesize;\n      else\n        d.filesize = o.longs === String ? $util.Long.prototype.toString.call(m.filesize) : o.longs === Number ? new $util.LongBits(m.filesize.low >>> 0, m.filesize.high >>> 0).toNumber(true) : m.filesize;\n    }\n    if (m.blocksizes && m.blocksizes.length) {\n      d.blocksizes = [];\n      for (var j = 0; j < m.blocksizes.length; ++j) {\n        if (typeof m.blocksizes[j] === 'number')\n          d.blocksizes[j] = o.longs === String ? String(m.blocksizes[j]) : m.blocksizes[j];\n        else\n          d.blocksizes[j] = o.longs === String ? $util.Long.prototype.toString.call(m.blocksizes[j]) : o.longs === Number ? new $util.LongBits(m.blocksizes[j].low >>> 0, m.blocksizes[j].high >>> 0).toNumber(true) : m.blocksizes[j];\n      }\n    }\n    if (m.hashType != null && m.hasOwnProperty('hashType')) {\n      if (typeof m.hashType === 'number')\n        d.hashType = o.longs === String ? String(m.hashType) : m.hashType;\n      else\n        d.hashType = o.longs === String ? $util.Long.prototype.toString.call(m.hashType) : o.longs === Number ? new $util.LongBits(m.hashType.low >>> 0, m.hashType.high >>> 0).toNumber(true) : m.hashType;\n    }\n    if (m.fanout != null && m.hasOwnProperty('fanout')) {\n      if (typeof m.fanout === 'number')\n        d.fanout = o.longs === String ? String(m.fanout) : m.fanout;\n      else\n        d.fanout = o.longs === String ? $util.Long.prototype.toString.call(m.fanout) : o.longs === Number ? new $util.LongBits(m.fanout.low >>> 0, m.fanout.high >>> 0).toNumber(true) : m.fanout;\n    }\n    if (m.mode != null && m.hasOwnProperty('mode')) {\n      d.mode = m.mode;\n    }\n    if (m.mtime != null && m.hasOwnProperty('mtime')) {\n      d.mtime = $root.UnixTime.toObject(m.mtime, o);\n    }\n    return d;\n  };\n  Data.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  Data.DataType = function () {\n    const valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = 'Raw'] = 0;\n    values[valuesById[1] = 'Directory'] = 1;\n    values[valuesById[2] = 'File'] = 2;\n    values[valuesById[3] = 'Metadata'] = 3;\n    values[valuesById[4] = 'Symlink'] = 4;\n    values[valuesById[5] = 'HAMTShard'] = 5;\n    return values;\n  }();\n  return Data;\n})();\nexport const UnixTime = $root.UnixTime = (() => {\n  function UnixTime(p) {\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  UnixTime.prototype.Seconds = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n  UnixTime.prototype.FractionalNanoseconds = 0;\n  UnixTime.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    w.uint32(8).int64(m.Seconds);\n    if (m.FractionalNanoseconds != null && Object.hasOwnProperty.call(m, 'FractionalNanoseconds'))\n      w.uint32(21).fixed32(m.FractionalNanoseconds);\n    return w;\n  };\n  UnixTime.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.UnixTime();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.Seconds = r.int64();\n        break;\n      case 2:\n        m.FractionalNanoseconds = r.fixed32();\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    if (!m.hasOwnProperty('Seconds'))\n      throw $util.ProtocolError('missing required \\'Seconds\\'', { instance: m });\n    return m;\n  };\n  UnixTime.fromObject = function fromObject(d) {\n    if (d instanceof $root.UnixTime)\n      return d;\n    var m = new $root.UnixTime();\n    if (d.Seconds != null) {\n      if ($util.Long)\n        (m.Seconds = $util.Long.fromValue(d.Seconds)).unsigned = false;\n      else if (typeof d.Seconds === 'string')\n        m.Seconds = parseInt(d.Seconds, 10);\n      else if (typeof d.Seconds === 'number')\n        m.Seconds = d.Seconds;\n      else if (typeof d.Seconds === 'object')\n        m.Seconds = new $util.LongBits(d.Seconds.low >>> 0, d.Seconds.high >>> 0).toNumber();\n    }\n    if (d.FractionalNanoseconds != null) {\n      m.FractionalNanoseconds = d.FractionalNanoseconds >>> 0;\n    }\n    return m;\n  };\n  UnixTime.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.defaults) {\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, false);\n        d.Seconds = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.Seconds = o.longs === String ? '0' : 0;\n      d.FractionalNanoseconds = 0;\n    }\n    if (m.Seconds != null && m.hasOwnProperty('Seconds')) {\n      if (typeof m.Seconds === 'number')\n        d.Seconds = o.longs === String ? String(m.Seconds) : m.Seconds;\n      else\n        d.Seconds = o.longs === String ? $util.Long.prototype.toString.call(m.Seconds) : o.longs === Number ? new $util.LongBits(m.Seconds.low >>> 0, m.Seconds.high >>> 0).toNumber() : m.Seconds;\n    }\n    if (m.FractionalNanoseconds != null && m.hasOwnProperty('FractionalNanoseconds')) {\n      d.FractionalNanoseconds = m.FractionalNanoseconds;\n    }\n    return d;\n  };\n  UnixTime.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  return UnixTime;\n})();\nexport const Metadata = $root.Metadata = (() => {\n  function Metadata(p) {\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  Metadata.prototype.MimeType = '';\n  Metadata.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    if (m.MimeType != null && Object.hasOwnProperty.call(m, 'MimeType'))\n      w.uint32(10).string(m.MimeType);\n    return w;\n  };\n  Metadata.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.MimeType = r.string();\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    return m;\n  };\n  Metadata.fromObject = function fromObject(d) {\n    if (d instanceof $root.Metadata)\n      return d;\n    var m = new $root.Metadata();\n    if (d.MimeType != null) {\n      m.MimeType = String(d.MimeType);\n    }\n    return m;\n  };\n  Metadata.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.defaults) {\n      d.MimeType = '';\n    }\n    if (m.MimeType != null && m.hasOwnProperty('MimeType')) {\n      d.MimeType = m.MimeType;\n    }\n    return d;\n  };\n  Metadata.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  return Metadata;\n})();\nexport {\n  $root as default\n};","import errcode from 'err-code';\nimport * as Pb from './unixfs.js';\nconst PBData = Pb.Data;\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n];\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n];\nconst DEFAULT_FILE_MODE = parseInt('0644', 8);\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8);\nexport function parseMode(mode) {\n  if (mode == null) {\n    return undefined;\n  }\n  if (typeof mode === 'number') {\n    return mode & 4095;\n  }\n  mode = mode.toString();\n  if (mode.substring(0, 1) === '0') {\n    return parseInt(mode, 8) & 4095;\n  }\n  return parseInt(mode, 10) & 4095;\n}\nexport function parseMtime(input) {\n  if (input == null) {\n    return undefined;\n  }\n  let mtime;\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    };\n  }\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    };\n  }\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    };\n  }\n  if (input instanceof Date) {\n    const ms = input.getTime();\n    const secs = Math.floor(ms / 1000);\n    mtime = {\n      secs: secs,\n      nsecs: (ms - secs * 1000) * 1000\n    };\n  }\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined;\n  }\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errcode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS');\n  }\n  return mtime;\n}\nclass UnixFS {\n  static unmarshal(marshaled) {\n    const message = PBData.decode(marshaled);\n    const decoded = PBData.toObject(message, {\n      defaults: false,\n      arrays: true,\n      longs: Number,\n      objects: false\n    });\n    const data = new UnixFS({\n      type: types[decoded.Type],\n      data: decoded.Data,\n      blockSizes: decoded.blocksizes,\n      mode: decoded.mode,\n      mtime: decoded.mtime ? {\n        secs: decoded.mtime.Seconds,\n        nsecs: decoded.mtime.FractionalNanoseconds\n      } : undefined\n    });\n    data._originalMode = decoded.mode || 0;\n    return data;\n  }\n  constructor(options = { type: 'file' }) {\n    const {type, data, blockSizes, hashType, fanout, mtime, mode} = options;\n    if (type && !types.includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE');\n    }\n    this.type = type || 'file';\n    this.data = data;\n    this.hashType = hashType;\n    this.fanout = fanout;\n    this.blockSizes = blockSizes || [];\n    this._originalMode = 0;\n    this.mode = parseMode(mode);\n    if (mtime) {\n      this.mtime = parseMtime(mtime);\n      if (this.mtime && !this.mtime.nsecs) {\n        this.mtime.nsecs = 0;\n      }\n    }\n  }\n  set mode(mode) {\n    this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE;\n    const parsedMode = parseMode(mode);\n    if (parsedMode !== undefined) {\n      this._mode = parsedMode;\n    }\n  }\n  get mode() {\n    return this._mode;\n  }\n  isDirectory() {\n    return Boolean(this.type && dirTypes.includes(this.type));\n  }\n  addBlockSize(size) {\n    this.blockSizes.push(size);\n  }\n  removeBlockSize(index) {\n    this.blockSizes.splice(index, 1);\n  }\n  fileSize() {\n    if (this.isDirectory()) {\n      return 0;\n    }\n    let sum = 0;\n    this.blockSizes.forEach(size => {\n      sum += size;\n    });\n    if (this.data) {\n      sum += this.data.length;\n    }\n    return sum;\n  }\n  marshal() {\n    let type;\n    switch (this.type) {\n    case 'raw':\n      type = PBData.DataType.Raw;\n      break;\n    case 'directory':\n      type = PBData.DataType.Directory;\n      break;\n    case 'file':\n      type = PBData.DataType.File;\n      break;\n    case 'metadata':\n      type = PBData.DataType.Metadata;\n      break;\n    case 'symlink':\n      type = PBData.DataType.Symlink;\n      break;\n    case 'hamt-sharded-directory':\n      type = PBData.DataType.HAMTShard;\n      break;\n    default:\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE');\n    }\n    let data = this.data;\n    if (!this.data || !this.data.length) {\n      data = undefined;\n    }\n    let mode;\n    if (this.mode != null) {\n      mode = this._originalMode & 4294963200 | (parseMode(this.mode) || 0);\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined;\n      }\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined;\n      }\n    }\n    let mtime;\n    if (this.mtime != null) {\n      const parsed = parseMtime(this.mtime);\n      if (parsed) {\n        mtime = {\n          Seconds: parsed.secs,\n          FractionalNanoseconds: parsed.nsecs\n        };\n        if (mtime.FractionalNanoseconds === 0) {\n          delete mtime.FractionalNanoseconds;\n        }\n      }\n    }\n    const pbData = {\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    };\n    return PBData.encode(pbData).finish();\n  }\n}\nexport {\n  UnixFS\n};","<script lang=\"ts\">\r\n\timport { onMount, onDestroy } from 'svelte';\r\n\timport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\r\n\timport { UnixFS } from 'ipfs-unixfs';\r\n\r\n\tlet ipfsNode;\r\n\tlet nodeId;\r\n\tlet putted, added;\r\n\tlet putWithLinks, addedWithLinks;\r\n\r\n\tlet helloWorld = {\r\n\t\thello: 'world'\r\n\t};\r\n\r\n\tonMount(async () => {\r\n\t\t// In Svelte, a hot module refresh can cause lockfile problems\r\n\t\t// so we assign the ipfs node to globalThis to avoid lock file issues\r\n\t\tif (!globalThis.ipfsNode) {\r\n\t\t\t// no ipfs saved to globalThis, so load it up\r\n\t\t\tconst IPFSmodule = await import('../modules/ipfs-core/ipfs-core.js');\r\n\t\t\tconst IPFS = IPFSmodule.default;\r\n\t\t\tconsole.log({ IPFS });\r\n\t\t\tipfsNode = await IPFS.create();\r\n\t\t\tglobalThis.ipfsNode = ipfsNode;\r\n\t\t} else {\r\n\t\t\tipfsNode = globalThis.ipfsNode;\r\n\t\t}\r\n\t\tconsole.log({ ipfsNode });\r\n\t\tconst identity = await ipfsNode.id();\r\n\t\tnodeId = identity.id;\r\n\t\t// console.info('nodeId', nodeId);\r\n\r\n\t\tconst file = new UnixFS({\r\n\t\t\ttype: 'file',\r\n\t\t\tdata: uint8ArrayFromString(JSON.stringify(helloWorld)) // new Uint8Array(0) //\r\n\t\t});\r\n\r\n\t\tconst pbNode = {\r\n\t\t\tData: file.marshal(),\r\n\t\t\tLinks: []\r\n\t\t};\r\n\t\t// ipfs dag put in format codec dag-pb\r\n\r\n\t\t// 1. make a dag-pb dag of a file with a link to another file\r\n\t\tputted = await ipfsNode.dag.put(pbNode, {\r\n\t\t\tstoreCodec: 'dag-pb'\r\n\t\t});\r\n\r\n\t\t// 2. save the same binary data via ipfs.add\r\n\t\tadded = await ipfsNode.add(JSON.stringify(helloWorld));\r\n\r\n\t\t// 3. check to see if they are the same\r\n\t\t// console.log(putted.toV0().toString() === added.cid.toV0().toString());\r\n\t\t// console.log(putted.toV1().toString() === added.cid.toV1().toString());\r\n\t\t// console.log({ putted });\r\n\r\n\t\t// WITH LINK(s)\r\n\r\n\t\tconst pbNodeWithLinks = {\r\n\t\t\tData: new UnixFS({\r\n\t\t\t\ttype: 'file',\r\n\t\t\t\tdata: new Uint8Array(0)\r\n\t\t\t}).marshal(),\r\n\t\t\tLinks: [\r\n\t\t\t\t{\r\n\t\t\t\t\tName: 'hello',\r\n\t\t\t\t\tTsize: pbNode.Data != null ? pbNode.Data.length : 0,\r\n\t\t\t\t\tHash: putted.toV0() // a cid, like: https://github.com/ipfs/js-ipfs-unixfs/blob/5db86734c8b2bb1253f6fac7ebd1f069ff2ed74e/packages/ipfs-unixfs-exporter/test/exporter.spec.js#L153\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\r\n\t\tputWithLinks = await ipfsNode.dag.put(pbNodeWithLinks, {\r\n\t\t\tstoreCodec: 'dag-pb'\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tconsole.log('the ipfs node is being stopped');\r\n\t\t\tipfsNode.stop();\r\n\t\t\tglobalThis.ipfsNode = null;\r\n\t\t};\r\n\t});\r\n</script>\r\n\r\n<svelte:head>\r\n\t<title>Home</title>\r\n</svelte:head>\r\n\r\n<section>\r\n\t{#if nodeId}\r\n\t\t<h3>\r\n\t\t\tNode ID: {nodeId}\r\n\t\t</h3>\r\n\t\t<h2>\r\n\t\t\tIPFS loaded in a Vite app, <strong>right?!</strong>\r\n\t\t</h2>\r\n\t\t{#if putted}ipfs.dag.put({JSON.stringify(helloWorld)}, {\"{ storeCodec: 'dag-pb' }\"})\r\n\t\t\t<br />\r\n\t\t\tCID verion0: {putted.toV0().toString()}\r\n\t\t\t<br />\r\n\t\t\tCID verion1: {putted.toString()}\r\n\t\t{/if}<br /><br />\r\n\t\t{#if added}ipfs.add({JSON.stringify(helloWorld)})<br />CID v0: {added.cid\r\n\t\t\t\t.toV0()\r\n\t\t\t\t.toString()}{/if}\r\n\t\t<br /><br />\r\n\t\t{#if added}ipfs.add(data) >> ipfs.cat(data):<br />\r\n\r\n\t\t\t<a target=\"_blank\" href=\"https://dweb.link/api/v0/cat?arg={added.cid.toV0().toString()}\"\r\n\t\t\t\t>{added.cid.toV0().toString()}</a\r\n\t\t\t>\r\n\t\t\t<br /> Check that they are the same:\r\n\t\t\t<b> {putted.toV0().toString() === added.cid.toV0().toString()}</b>\r\n\t\t{/if}\r\n\t\t<br /><br />\r\n\t\t{#if putWithLinks}Explore Linked Data:<br /><a\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\thref=\"https://explore.ipld.io/#/explore/{putWithLinks.toV0().toString()}\"\r\n\t\t\t\t>{putWithLinks.toV0().toString()}</a\r\n\t\t\t>\r\n\r\n\t\t\t<br />DWeb Site:<br /><a\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\thref=\"https://{putWithLinks.toV1().toString()}.ipfs.dweb.link/\"\r\n\t\t\t\t>https://[cid].ipfs.dweb.link</a\r\n\t\t\t><br /><br />\r\n\r\n\t\t\tCloudFlare:<br />\r\n\t\t\t<a target=\"_blank\" href=\"https://{putWithLinks.toV1().toString()}.ipfs.cf-ipfs.com/\"\r\n\t\t\t\t>https://[cid].ipfs.cf-ipfs.com</a\r\n\t\t\t><br /><br />\r\n\t\t{/if}\r\n\r\n\t\t{#if addedWithLinks}Explore Add with Links:<br /><a\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\thref=\"ipfs://bafybeiftcyj7gao3kykwic743wuulwpzkeat4nfmzapbgz5mxsfxsnpbtu/#/explore/{addedWithLinks.cid\r\n\t\t\t\t\t.toV0()\r\n\t\t\t\t\t.toString()}\">{addedWithLinks.cid.toV0().toString()}</a\r\n\t\t\t>\r\n\r\n\t\t\t<br />DWeb Site:<br /><a\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\thref=\"https://{addedWithLinks.cid.toV1().toString()}.ipfs.dweb.link/\">View Data</a\r\n\t\t\t><br />Mirror:<br />\r\n\r\n\t\t\t<a target=\"_blank\" href=\"https://{addedWithLinks.cid.toV1().toString()}.ipfs.cf-ipfs.com/\"\r\n\t\t\t\t>View Mirror Data</a\r\n\t\t\t><br /><br />\r\n\t\t{/if}\r\n\t{:else}\r\n\t\tLoading IPFS...\r\n\t{/if}\r\n</section>\r\n\r\n<style>\r\n\tsection {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\tflex: 1;\r\n\t}\r\n\r\n\th1 {\r\n\t\twidth: 100%;\r\n\t}\r\n</style>\r\n"],"file":"pages/index.svelte-bf6780ab.js"}